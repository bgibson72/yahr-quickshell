{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/bryan/.vscode-oss/extensions/extensions.json","path":"/home/bryan/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1761687447176,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"validate":true,"productVersion":"1.104.36664","productDate":"2025-10-04T16:58:18.791Z","productCommit":"3af140d2498acc8743822d23d4171fe1eac449ec","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"github.copilot-chat","uuid":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f"},"manifest":{"name":"copilot-chat","displayName":"GitHub Copilot Chat","description":"AI chat features powered by Copilot","version":"0.31.5","build":"1","internalAIKey":"1058ec22-3c95-4951-8443-f26c1f325911","completionsCore":"d40b0e961224f914957776572604d37a1c2bf2d8","completionsCoreVersion":"1.372.0","internalLargeStorageAriaKey":"ec712b3202c5462fb6877acae7f1f9d7-c19ad55e-3e3c-4f99-984b-827f6d95bd9e-6917","ariaKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","buildType":"prod","publisher":"GitHub","homepage":"https://github.com/features/copilot?editor=vscode","license":"SEE LICENSE IN LICENSE.txt","repository":{"type":"git","url":"https://github.com/microsoft/vscode-copilot-chat"},"bugs":{"url":"https://github.com/microsoft/vscode/issues"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/copilot.png","pricing":"Trial","engines":{"vscode":"^1.104.0-20250905","npm":">=9.0.0","node":">=22.14.0"},"categories":["AI","Chat","Programming Languages","Machine Learning"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished","onLanguageModelChat:copilot","onUri","onFileSystem:ccreq","onFileSystem:ccsettings"],"main":"./dist/extension","l10n":"./l10n","enabledApiProposals":["extensionsAny","newSymbolNamesProvider","interactive","codeActionAI","activeComment","commentReveal","contribCommentThreadAdditionalMenu","contribCommentsViewThreadMenus","documentFiltersExclusive","embeddings","findTextInFiles","findTextInFiles2","findFiles2@2","textSearchProvider","terminalDataWriteEvent","terminalExecuteCommandEvent","terminalSelection","terminalQuickFixProvider","mappedEditsProvider","aiRelatedInformation","aiSettingsSearch","chatParticipantAdditions","chatEditing","defaultChatParticipant@4","contribSourceControlInputBoxMenu","authLearnMore","testObserver","aiTextSearchProvider@2","chatParticipantPrivate@10","chatProvider@4","contribDebugCreateConfiguration","chatReferenceDiagnostic","textSearchProvider2","chatReferenceBinaryData","languageModelSystem","languageModelCapabilities","inlineCompletionsAdditions","languageModelDataPart@3","chatStatusItem","taskProblemMatcherStatus","contribLanguageModelToolSets","textDocumentChangeReason","resolvers","taskExecutionTerminal","dataChannels","languageModelThinkingPart","chatSessionsProvider"],"contributes":{"languageModelTools":[{"name":"copilot_searchCodebase","toolReferenceName":"codebase","displayName":"Codebase","icon":"$(folder)","userDescription":"Find relevant file chunks, symbols, and other information in your codebase","modelDescription":"Run a natural language search for relevant code or documentation comments from the user's current workspace. Returns relevant code snippets from the user's current workspace if it is large, or the full contents of the workspace if it is small.","tags":["codesearch","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to search the codebase for. Should contain all relevant context. Should ideally be text that might appear in the codebase, such as function names, variable names, or comments."}},"required":["query"]}},{"name":"execute_task","toolReferenceName":"executeTask","displayName":"Execute Task","when":"config.github.copilot.chat.advanced.taskTools.enabled","canBeReferencedInPrompt":true,"modelDescription":"Launch a new agent to handle complex, multi-step tasks autonomously. This tool is good at researching complex questions, searching for code, and executing multi-step tasks. When you are searching for a keyword or file and are not confident that you will find the right match in the first few tries, use this agent to perform the search for you.\n\n- When the agent is done, it will return a single message back to you. The result returned by the agent is not visible to the user. To show the user the result, you should send a text message back to the user with a concise summary of the result.\n - Each agent invocation is stateless. You will not be able to send additional messages to the agent, nor will the agent be able to communicate with you outside of its final report. Therefore, your prompt should contain a highly detailed task description for the agent to perform autonomously and you should specify exactly what information the agent should return back to you in its final and only message to you.\n - The agent's outputs should generally be trusted\n - Clearly tell the agent whether you expect it to write code or just to do research (search, file reads, web fetches, etc.), since it is not aware of the user's intent","tags":[],"inputSchema":{"type":"object","properties":{"prompt":{"type":"string","description":"A detailed description of the task for the agent to perform"},"description":{"type":"string","description":"A short (3-5 word) description of the task"}},"required":["prompt","description"]}},{"name":"execute_prompt","toolReferenceName":"executePrompt","displayName":"Execute Prompt","when":"config.github.copilot.chat.advanced.taskTools.enabled","canBeReferencedInPrompt":true,"modelDescription":"This tool can take a path to a user's prompt file as input, and execute it autonomously. If the user's prompt includes multiple references to .prompt.md files, then you should use this tool to execute those prompts in sequence.\n\n- When the agent is done, it will return a single message back to you. The result returned by the agent is not visible to the user. To show the user the result, you should send a text message back to the user with a concise summary of the result.\n - The agent's outputs should generally be trusted","tags":[],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"The absolute path to the prompt file to execute"}},"required":["filePath"]}},{"name":"copilot_searchWorkspaceSymbols","toolReferenceName":"symbols","displayName":"Workspace Symbols","icon":"$(symbol)","userDescription":"Search for workspace symbols using language services.","modelDescription":"Search the user's workspace for code symbols using language services. Use this tool when the user is looking for a specific symbol in their workspace.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"symbolName":{"type":"string","description":"The symbol to search for, such as a function name, class name, or variable name."}},"required":["symbolName"]}},{"name":"copilot_listCodeUsages","toolReferenceName":"usages","displayName":"Find Usages","icon":"$(references)","canBeReferencedInPrompt":true,"userDescription":"Find references, definitions, and other usages of a symbol","modelDescription":"Request to list all usages (references, definitions, implementations etc) of a function, class, method, variable etc. Use this tool when \n1. Looking for a sample implementation of an interface or class\n2. Checking how a function is used throughout the codebase.\n3. Including and updating all usages when changing a function, method, or constructor","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"symbolName":{"type":"string","description":"The name of the symbol, such as a function name, class name, method name, variable name, etc."},"filePaths":{"type":"array","description":"One or more file paths which likely contain the definition of the symbol. For instance the file which declares a class or function. This is optional but will speed up the invocation of this tool and improve the quality of its output.","items":{"type":"string"}}},"required":["symbolName"]}},{"name":"copilot_getVSCodeAPI","toolReferenceName":"vscodeAPI","displayName":"Get VS Code API References","icon":"$(references)","userDescription":"Use VS Code API references to answer questions about VS Code extension development.","modelDescription":"Get comprehensive VS Code API documentation and references for extension development. This tool provides authoritative documentation for VS Code's extensive API surface, including proposed APIs, contribution points, and best practices. Use this tool for understanding complex VS Code API interactions.\n\nWhen to use this tool:\n- User asks about specific VS Code APIs, interfaces, or extension capabilities\n- Need documentation for VS Code extension contribution points (commands, views, settings, etc.)\n- Questions about proposed APIs and their usage patterns\n- Understanding VS Code extension lifecycle, activation events, and packaging\n- Best practices for VS Code extension development architecture\n- API examples and code patterns for extension features\n- Troubleshooting extension-specific issues or API limitations\n\nWhen NOT to use this tool:\n- Creating simple standalone files or scripts unrelated to VS Code extensions\n- General programming questions not specific to VS Code extension development\n- Questions about using VS Code as an editor (user-facing features)\n- Non-extension related development tasks\n- File creation or editing that doesn't involve VS Code extension APIs\n\nCRITICAL usage guidelines:\n1. Always include specific API names, interfaces, or concepts in your query\n2. Mention the extension feature you're trying to implement\n3. Include context about proposed vs stable APIs when relevant\n4. Reference specific contribution points when asking about extension manifest\n5. Be specific about the VS Code version or API version when known\n\nScope: This tool is for EXTENSION DEVELOPMENT ONLY - building tools that extend VS Code itself, not for general file creation or non-extension programming tasks.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to search vscode documentation for. Should contain all relevant context."}},"required":["query"]},"tags":[],"canBeReferencedInPrompt":true},{"displayName":"Think","name":"copilot_think","tags":[],"canBeReferencedInPrompt":true,"toolReferenceName":"think","when":"config.github.copilot.chat.agent.thinkingTool","modelDescription":"Use this tool to think deeply about the user's request and organize your thoughts. This tool helps improve response quality by allowing the model to consider the request carefully, brainstorm solutions, and plan complex tasks. It's particularly useful for:\n\n1. Exploring repository issues and brainstorming bug fixes\n2. Analyzing test results and planning fixes\n3. Planning complex refactoring approaches\n4. Designing new features and architecture\n5. Organizing debugging hypotheses\n\nThe tool logs your thought process for transparency but doesn't execute any code or make changes.","inputSchema":{"type":"object","properties":{"thoughts":{"type":"string","description":"Your thoughts about the current task or problem. This should be a clear, structured explanation of your reasoning, analysis, or planning process."}},"required":["thoughts"]}},{"name":"copilot_findFiles","toolReferenceName":"fileSearch","displayName":"Find Files","modelDescription":"Search for files in the workspace by glob pattern. This only returns the paths of matching files. Use this tool when you know the exact filename pattern of the files you're searching for. Glob patterns match from the root of the workspace folder. Examples:\n- **/*.{js,ts} to match all js/ts files in the workspace.\n- src/** to match all files under the top-level src folder.\n- **/foo/**/*.js to match all js files under any foo folder in the workspace.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"Search for files with names or paths matching this glob pattern."},"maxResults":{"type":"number","description":"The maximum number of results to return. Do not use this unless necessary, it can slow things down. By default, only some matches are returned. If you use this and don't see what you're looking for, you can try again with a more specific query or a larger maxResults."}},"required":["query"]}},{"name":"copilot_findTextInFiles","toolReferenceName":"textSearch","displayName":"Find Text In Files","modelDescription":"Do a fast text search in the workspace. Use this tool when you want to search with an exact string or regex. If you are not sure what words will appear in the workspace, prefer using regex patterns with alternation (|) or character classes to search for multiple potential words at once instead of making separate searches. For example, use 'function|method|procedure' to look for all of those words at once. Use includePattern to search within files matching a specific pattern, or in a specific file, using a relative path. Use this tool when you want to see an overview of a particular file, instead of using read_file many times to look for code within a file.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The pattern to search for in files in the workspace. Use regex with alternation (e.g., 'word1|word2|word3') or character classes to find multiple potential words in a single search. Be sure to set the isRegexp property properly to declare whether it's a regex or plain text pattern. Is case-insensitive."},"isRegexp":{"type":"boolean","description":"Whether the pattern is a regex."},"includePattern":{"type":"string","description":"Search files matching this glob pattern. Will be applied to the relative path of files within the workspace. To search recursively inside a folder, use a proper glob pattern like \"src/folder/**\". Do not use | in includePattern."},"maxResults":{"type":"number","description":"The maximum number of results to return. Do not use this unless necessary, it can slow things down. By default, only some matches are returned. If you use this and don't see what you're looking for, you can try again with a more specific query or a larger maxResults."}},"required":["query","isRegexp"]}},{"name":"copilot_applyPatch","displayName":"Apply Patch","toolReferenceName":"applyPatch","userDescription":"Edit text files in the workspace","modelDescription":"Edit text files. Do not use this tool to edit Jupyter notebooks. `apply_patch` allows you to execute a diff/patch against a text file, but the format of the diff specification is unique to this task, so pay careful attention to these instructions. To use the `apply_patch` command, you should pass a message of the following structure as \"input\":\n\n*** Begin Patch\n[YOUR_PATCH]\n*** End Patch\n\nWhere [YOUR_PATCH] is the actual content of your patch, specified in the following V4A diff format.\n\n*** [ACTION] File: [/absolute/path/to/file] -> ACTION can be one of Add, Update, or Delete.\nAn example of a message that you might pass as \"input\" to this function, in order to apply a patch, is shown below.\n\n*** Begin Patch\n*** Update File: /Users/someone/pygorithm/searching/binary_search.py\n@@class BaseClass\n@@    def search():\n-        pass\n+        raise NotImplementedError()\n\n@@class Subclass\n@@    def search():\n-        pass\n+        raise NotImplementedError()\n\n*** End Patch\nDo not use line numbers in this diff format.","inputSchema":{"type":"object","properties":{"input":{"type":"string","description":"The edit patch to apply."},"explanation":{"type":"string","description":"A short description of what the tool call is aiming to achieve."}},"required":["input","explanation"]}},{"name":"copilot_readFile","toolReferenceName":"readFile","displayName":"Read File","modelDescription":"Read the contents of a file.\n\nYou must specify the line range you're interested in. Line numbers are 1-indexed. If the file contents returned are insufficient for your task, you may call this tool again to retrieve more content. Prefer reading larger ranges over doing many small reads.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"filePath":{"description":"The absolute path of the file to read.","type":"string"},"startLine":{"type":"number","description":"The line number to start reading from, 1-based."},"endLine":{"type":"number","description":"The inclusive line number to end reading at, 1-based."}},"required":["filePath","startLine","endLine"]}},{"name":"copilot_listDirectory","toolReferenceName":"listDirectory","displayName":"List Dir","modelDescription":"List the contents of a directory. Result will have the name of the child. If the name ends in /, it's a folder, otherwise a file","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"path":{"type":"string","description":"The absolute path to the directory to list."}},"required":["path"]}},{"name":"copilot_getErrors","displayName":"Get Problems","toolReferenceName":"problems","canBeReferencedInPrompt":true,"icon":"$(error)","userDescription":"Check errors for a particular file","modelDescription":"Get any compile or lint errors in a specific file or across all files. If the user mentions errors or problems in a file, they may be referring to these. Use the tool to see the same errors that the user is seeing. If the user asks you to analyze all errors, or does not specify a file, use this tool to gather errors for all files. Also use this tool after editing a file to validate the change.","tags":[],"inputSchema":{"type":"object","properties":{"filePaths":{"description":"The absolute paths to the files to check for errors. Omit 'filePaths' when retrieving all errors.","type":"array","items":{"type":"string"}}}}},{"name":"copilot_readProjectStructure","displayName":"Project Structure","modelDescription":"Get a file tree representation of the workspace.","tags":[]},{"name":"copilot_getChangedFiles","displayName":"Git Changes","toolReferenceName":"changes","icon":"$(diff)","canBeReferencedInPrompt":true,"userDescription":"Get diffs of changed files","modelDescription":"Get git diffs of current file changes in a git repository. Don't forget that you can use run_in_terminal to run git commands in a terminal as well.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"repositoryPath":{"type":"string","description":"The absolute path to the git repository to look for changes in. If not provided, the active git repository will be used."},"sourceControlState":{"type":"array","items":{"type":"string","enum":["staged","unstaged","merge-conflicts"]},"description":"The kinds of git state to filter by. Allowed values are: 'staged', 'unstaged', and 'merge-conflicts'. If not provided, all states will be included."}}}},{"name":"copilot_testFailure","toolReferenceName":"testFailure","displayName":"Test Failure","icon":"$(beaker)","userDescription":"Includes information about the last unit test failure","modelDescription":"Includes test failure information in the prompt.","inputSchema":{},"tags":["vscode_editing_with_tests","enable_other_tool_copilot_readFile","enable_other_tool_copilot_listDirectory","enable_other_tool_copilot_findFiles","enable_other_tool_copilot_runTests"],"canBeReferencedInPrompt":true},{"name":"copilot_updateUserPreferences","toolReferenceName":"updateUserPreferences","displayName":"Update User Preferences","modelDescription":"Update the user's preferences file with new information about the user and their coding preferences, based on the current chat history.","canBeReferencedInPrompt":true,"tags":[],"inputSchema":{"type":"object","properties":{"facts":{"type":"array","items":{"type":"string"},"description":"An array of new user preferences to remember."}},"required":["facts"]},"when":"config.github.copilot.chat.enableUserPreferences"},{"name":"copilot_createNewWorkspace","displayName":"Create New Workspace","toolReferenceName":"newWorkspace","icon":"$(new-folder)","userDescription":"Scaffold a new workspace in VS Code","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","modelDescription":"Get comprehensive setup steps to help the user create complete project structures in a VS Code workspace. This tool is designed for full project initialization and scaffolding, not for creating individual files.\n\nWhen to use this tool:\n- User wants to create a new complete project from scratch\n- Setting up entire project frameworks (TypeScript projects, React apps, Node.js servers, etc.)\n- Initializing Model Context Protocol (MCP) servers with full structure\n- Creating VS Code extensions with proper scaffolding\n- Setting up Next.js, Vite, or other framework-based projects\n- User asks for \"new project\", \"create a workspace\", \"set up a [framework] project\"\n- Need to establish complete development environment with dependencies, config files, and folder structure\n\nWhen NOT to use this tool:\n- Creating single files or small code snippets\n- Adding individual files to existing projects\n- Making modifications to existing codebases\n- User asks to \"create a file\" or \"add a component\"\n- Simple code examples or demonstrations\n- Debugging or fixing existing code\n\nThis tool provides complete project setup including:\n- Folder structure creation\n- Package.json and dependency management\n- Configuration files (tsconfig, eslint, etc.)\n- Initial boilerplate code\n- Development environment setup\n- Build and run instructions\n\nUse other file creation tools for individual files within existing projects.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to use to generate the new workspace. This should be a clear and concise description of the workspace the user wants to create."}},"required":["query"]},"tags":["enable_other_tool_install_extension","enable_other_tool_get_project_setup_info"]},{"name":"copilot_getProjectSetupInfo","displayName":"Get Project Setup Info","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","toolReferenceName":"getProjectSetupInfo","modelDescription":"Do not call this tool without first calling the tool to create a workspace. This tool provides a project setup information for a Visual Studio Code workspace based on a project type and programming language.","inputSchema":{"type":"object","properties":{"projectType":{"type":"string","description":"The type of project to create. Supported values are: 'python-script', 'python-project', 'mcp-server', 'model-context-protocol-server', 'vscode-extension', 'next-js', 'vite' and 'other'"}},"required":["projectType"]},"tags":[]},{"name":"copilot_installExtension","displayName":"Install Extension in VS Code","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","toolReferenceName":"installExtension","modelDescription":"Install an extension in VS Code. Use this tool to install an extension in Visual Studio Code as part of a new workspace creation process only.","inputSchema":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the extension to install. This should be in the format <publisher>.<extension>."},"name":{"type":"string","description":"The name of the extension to install. This should be a clear and concise description of the extension."}},"required":["id","name"]},"tags":[]},{"name":"copilot_runVscodeCommand","displayName":"Run VS Code Command","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","toolReferenceName":"runVscodeCommand","modelDescription":"Run a command in VS Code. Use this tool to run a command in Visual Studio Code as part of a new workspace creation process only.","inputSchema":{"type":"object","properties":{"commandId":{"type":"string","description":"The ID of the command to execute. This should be in the format <command>."},"name":{"type":"string","description":"The name of the command to execute. This should be a clear and concise description of the command."},"args":{"type":"array","description":"The arguments to pass to the command. This should be an array of strings.","items":{"type":"string"}}},"required":["commandId","name"]},"tags":[]},{"name":"copilot_createNewJupyterNotebook","displayName":"Create New Jupyter Notebook","icon":"$(notebook)","toolReferenceName":"newJupyterNotebook","modelDescription":"Generates a new Jupyter Notebook (.ipynb) in VS Code. Jupyter Notebooks are interactive documents commonly used for data exploration, analysis, visualization, and combining code with narrative text. Prefer creating plain Python files or similar unless a user explicitly requests creating a new Jupyter Notebook or already has a Jupyter Notebook opened or exists in the workspace.","userDescription":"Create a new Jupyter Notebook","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to use to generate the jupyter notebook. This should be a clear and concise description of the notebook the user wants to create."}},"required":["query"]},"tags":[]},{"name":"copilot_insertEdit","toolReferenceName":"insertEdit","displayName":"Edit File","modelDescription":"Insert new code into an existing file in the workspace. Use this tool once per file that needs to be modified, even if there are multiple changes for a file. Generate the \"explanation\" property first.\nThe system is very smart and can understand how to apply your edits to the files, you just need to provide minimal hints.\nAvoid repeating existing code, instead use comments to represent regions of unchanged code. Be as concise as possible. For example:\n// ...existing code...\n{ changed code }\n// ...existing code...\n{ changed code }\n// ...existing code...\n\nHere is an example of how you should use format an edit to an existing Person class:\nclass Person {\n\t// ...existing code...\n\tage: number;\n\t// ...existing code...\n\tgetAge() {\n\treturn this.age;\n\t}\n}","tags":[],"inputSchema":{"type":"object","properties":{"explanation":{"type":"string","description":"A short explanation of the edit being made."},"filePath":{"type":"string","description":"An absolute path to the file to edit."},"code":{"type":"string","description":"The code change to apply to the file.\nThe system is very smart and can understand how to apply your edits to the files, you just need to provide minimal hints.\nAvoid repeating existing code, instead use comments to represent regions of unchanged code. Be as concise as possible. For example:\n// ...existing code...\n{ changed code }\n// ...existing code...\n{ changed code }\n// ...existing code...\n\nHere is an example of how you should use format an edit to an existing Person class:\nclass Person {\n\t// ...existing code...\n\tage: number;\n\t// ...existing code...\n\tgetAge() {\n\t\treturn this.age;\n\t}\n}"}},"required":["explanation","filePath","code"]}},{"name":"copilot_createFile","toolReferenceName":"createFile","displayName":"Create File","userDescription":"Create new files","modelDescription":"This is a tool for creating a new file in the workspace. The file will be created with the specified content. The directory will be created if it does not already exist. Never use this tool to edit a file that already exists.","tags":[],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"The absolute path to the file to create."},"content":{"type":"string","description":"The content to write to the file."}},"required":["filePath","content"]}},{"name":"copilot_createDirectory","toolReferenceName":"createDirectory","displayName":"Create Directory","userDescription":"Create new directories in your workspace","modelDescription":"Create a new directory structure in the workspace. Will recursively create all directories in the path, like mkdir -p. You do not need to use this tool before using create_file, that tool will automatically create the needed directories.","tags":[],"inputSchema":{"type":"object","properties":{"dirPath":{"type":"string","description":"The absolute path to the directory to create."}},"required":["dirPath"]}},{"name":"copilot_openSimpleBrowser","displayName":"Open Simple Browser","modelDescription":"Preview a website or open a URL in the editor's Simple Browser. Useful for quickly viewing locally hosted websites, demos, or resources without leaving the coding environment.","userDescription":"Preview a locally hosted website in the Simple Browser","toolReferenceName":"openSimpleBrowser","canBeReferencedInPrompt":true,"tags":[],"inputSchema":{"type":"object","properties":{"url":{"type":"string","description":"The website URL to preview or open in the Simple Browser inside the editor. Must be either an http or https URL"}},"required":["url"]}},{"name":"copilot_replaceString","toolReferenceName":"replaceString","displayName":"Replace String in File","modelDescription":"This is a tool for making edits in an existing file in the workspace. For moving or renaming files, use run in terminal tool with the 'mv' command instead. For larger edits, split them into smaller edits and call the edit tool multiple times to ensure accuracy. Before editing, always ensure you have the context to understand the file's contents and context. To edit a file, provide: 1) filePath (absolute path), 2) oldString (MUST be the exact literal text to replace including all whitespace, indentation, newlines, and surrounding code etc), and 3) newString (MUST be the exact literal text to replace \\`oldString\\` with (also including all whitespace, indentation, newlines, and surrounding code etc.). Ensure the resulting code is correct and idiomatic.). Each use of this tool replaces exactly ONE occurrence of oldString.\n\nCRITICAL for \\`oldString\\`: Must uniquely identify the single instance to change. Include at least 3 lines of context BEFORE and AFTER the target text, matching whitespace and indentation precisely. If this string matches multiple locations, or does not match exactly, the tool will fail. Never use 'Lines 123-456 omitted' from summarized documents or ...existing code... comments in the oldString or newString.","when":"!config.github.copilot.chat.disableReplaceTool","inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the file to edit."},"oldString":{"type":"string","description":"The exact literal text to replace, preferably unescaped. For single replacements (default), include at least 3 lines of context BEFORE and AFTER the target text, matching whitespace and indentation precisely. For multiple replacements, specify expected_replacements parameter. If this string is not the exact literal text (i.e. you escaped it) or does not match exactly, the tool will fail."},"newString":{"type":"string","description":"The exact literal text to replace `old_string` with, preferably unescaped. Provide the EXACT text. Ensure the resulting code is correct and idiomatic."}},"required":["filePath","oldString","newString"]}},{"name":"copilot_multiReplaceString","toolReferenceName":"multiReplaceString","displayName":"Multi-Replace String in Files","modelDescription":"This tool allows you to apply multiple replace_string_in_file operations in a single call, which is more efficient than calling replace_string_in_file multiple times. It takes an array of replacement operations and applies them sequentially. Each replacement operation has the same parameters as replace_string_in_file: filePath, oldString, newString, and explanation. This tool is ideal when you need to make multiple edits across different files or multiple edits in the same file. The tool will provide a summary of successful and failed operations.","when":"!config.github.copilot.chat.disableReplaceTool","inputSchema":{"type":"object","properties":{"explanation":{"type":"string","description":"A brief explanation of what the multi-replace operation will accomplish."},"replacements":{"type":"array","description":"An array of replacement operations to apply sequentially.","items":{"type":"object","properties":{"explanation":{"type":"string","description":"A brief explanation of this specific replacement operation."},"filePath":{"type":"string","description":"An absolute path to the file to edit."},"oldString":{"type":"string","description":"The exact literal text to replace, preferably unescaped. Include at least 3 lines of context BEFORE and AFTER the target text, matching whitespace and indentation precisely. If this string is not the exact literal text or does not match exactly, this replacement will fail."},"newString":{"type":"string","description":"The exact literal text to replace `oldString` with, preferably unescaped. Provide the EXACT text. Ensure the resulting code is correct and idiomatic."}},"required":["explanation","filePath","oldString","newString"]},"minItems":1}},"required":["explanation","replacements"]}},{"name":"copilot_editNotebook","toolReferenceName":"editNotebook","displayName":"Edit Notebook","modelDescription":"This is a tool for editing an existing Notebook file in the workspace. Generate the \"explanation\" property first.\nThe system is very smart and can understand how to apply your edits to the notebooks.\nWhen updating the content of an existing cell, ensure newCode preserves whitespace and indentation exactly and does NOT include any code markers such as (...existing code...).","tags":["enable_other_tool_copilot_getNotebookSummary"],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the notebook file to edit, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1."},"cellId":{"type":"string","description":"Id of the cell that needs to be deleted or edited. Use the value `TOP`, `BOTTOM` when inserting a cell at the top or bottom of the notebook, else provide the id of the cell after which a new cell is to be inserted. Remember, if a cellId is provided and editType=insert, then a cell will be inserted after the cell with the provided cellId."},"newCode":{"anyOf":[{"type":"string","description":"The code for the new or existing cell to be edited. Code should not be wrapped within <VSCode.Cell> tags. Do NOT include code markers such as (...existing code...) to indicate existing code."},{"type":"array","items":{"type":"string","description":"The code for the new or existing cell to be edited. Code should not be wrapped within <VSCode.Cell> tags"}}]},"language":{"type":"string","description":"The language of the cell. `markdown`, `python`, `javascript`, `julia`, etc."},"editType":{"type":"string","enum":["insert","delete","edit"],"description":"The operation peformed on the cell, whether `insert`, `delete` or `edit`.\nUse the `editType` field to specify the operation: `insert` to add a new cell, `edit` to modify an existing cell's content, and `delete` to remove a cell."}},"required":["filePath","editType","cellId"]}},{"name":"copilot_runNotebookCell","displayName":"Run Notebook Cell","toolReferenceName":"runCell","icon":"$(play)","modelDescription":"This is a tool for running a code cell in a notebook file directly in the notebook editor. The output from the execution will be returned. Code cells should be run as they are added or edited when working through a problem to bring the kernel state up to date and ensure the code executes successfully. Code cells are ready to run and don't require any pre-processing. If asked to run the first cell in a notebook, you should run the first code cell since markdown cells cannot be executed. NOTE: Avoid executing Markdown cells or providing Markdown cell IDs, as Markdown cells cannot be  executed.","userDescription":"Trigger the execution of a cell in a notebook file","tags":["enable_other_tool_copilot_getNotebookSummary"],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the notebook file with the cell to run, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1.ipynb"},"reason":{"type":"string","description":"An optional explanation of why the cell is being run. This will be shown to the user before the tool is run and is not necessary if it's self-explanatory."},"cellId":{"type":"string","description":"The ID for the code cell to execute. Avoid providing markdown cell IDs as nothing will be executed."},"continueOnError":{"type":"boolean","description":"Whether or not execution should continue for remaining cells if an error is encountered. Default to false unless instructed otherwise."}},"required":["filePath","cellId"]}},{"name":"copilot_getNotebookSummary","toolReferenceName":"getNotebookSummary","displayName":"Get the structure of a notebook","modelDescription":"This is a tool returns the list of the Notebook cells along with the id, cell types, line ranges, language, execution information and output mime types for each cell. This is useful to get Cell Ids when executing a notebook or determine what cells have been executed and what order, or what cells have outputs. If required to read contents of a cell use this to determine the line range of a cells, and then use read_file tool to read a specific line range. Requery this tool if the contents of the notebook change.","tags":[],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the notebook file with the cell to run, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1.ipynb"}},"required":["filePath"]}},{"name":"copilot_readNotebookCellOutput","displayName":"Get Notebook Cell Output","toolReferenceName":"readNotebookCellOutput","icon":"$(notebook-render-output)","modelDescription":"This tool will retrieve the output for a notebook cell from its most recent execution or restored from disk. The cell may have output even when it has not been run in the current kernel session. This tool has a higher token limit for output length than the runNotebookCell tool.","userDescription":"Read the output of a previously executed cell","when":"userHasOpenedNotebook","tags":[],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the notebook file with the cell to run, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1.ipynb"},"cellId":{"type":"string","description":"The ID of the cell for which output should be retrieved."}},"required":["filePath","cellId"]}},{"name":"copilot_fetchWebPage","displayName":"Fetch Web Page","toolReferenceName":"fetch","when":"!isWeb","canBeReferencedInPrompt":true,"icon":"$(globe)","userDescription":"Fetch the main content from a web page. You should include the URL of the page you want to fetch.","modelDescription":"Fetches the main content from a web page. This tool is useful for summarizing or analyzing the content of a webpage. You should use this tool when you think the user is looking for information from a specific webpage.","tags":[],"inputSchema":{"type":"object","properties":{"urls":{"type":"array","items":{"type":"string"},"description":"An array of URLs to fetch content from."},"query":{"type":"string","description":"The query to search for in the web page's content. This should be a clear and concise description of the content you want to find."}},"required":["urls","query"]}},{"name":"copilot_findTestFiles","displayName":"Find Test Files","icon":"$(beaker)","canBeReferencedInPrompt":false,"toolReferenceName":"findTestFiles","userDescription":"For a source code file, find the file that contains the tests. For a test file, find the file that contains the code under test","modelDescription":"For a source code file, find the file that contains the tests. For a test file find the file that contains the code under test.","tags":[],"inputSchema":{"type":"object","properties":{"filePaths":{"type":"array","items":{"type":"string"}}},"required":["filePaths"]}},{"name":"copilot_getDocInfo","displayName":"Doc Info","icon":"$(beaker)","canBeReferencedInPrompt":false,"toolReferenceName":"docInfo","userDescription":"For a symbol like a class or function, find the information about how to document it","modelDescription":"Find information about how to document it a symbol like a class or function. This tool is useful for generating documentation comments for code symbols. You should use this tool when you think the user is looking for information about how to document a specific code symbol.","tags":[],"inputSchema":{"type":"object","properties":{"filePaths":{"type":"array","items":{"type":"string"},"description":"The file paths for which documentation information is needed."}},"required":["filePaths"]}},{"name":"copilot_getSearchResults","toolReferenceName":"searchResults","displayName":"Search View Results","icon":"$(search)","userDescription":"The results from the search view","modelDescription":"The results from the search view"},{"name":"copilot_githubRepo","toolReferenceName":"githubRepo","displayName":"Search GitHub Repository","modelDescription":"Searches a GitHub repository for relevant source code snippets. Only use this tool if the user is very clearly asking for code snippets from a specific GitHub repository. Do not use this tool for Github repos that the user has open in their workspace.","userDescription":"Searches a GitHub repository for relevant source code snippets. You can specify a repository using `owner/repo`","icon":"$(repo)","canBeReferencedInPrompt":true,"inputSchema":{"type":"object","properties":{"repo":{"type":"string","description":"The name of the Github repository to search for code in. Should must be formatted as '<owner>/<repo>'."},"query":{"type":"string","description":"The query to search for repo. Should contain all relevant context."}},"required":["repo","query"]}},{"name":"copilot_toolReplay","modelDescription":"Replays a tool call from a previous chat session.","displayName":"tool replay","when":"false","inputSchema":{"type":"object","properties":{"toolCallId":{"type":"string","description":"the id of the tool original tool call"},"toolName":{"type":"string","description":"the name of the tool being replayed"},"toolCallArgs":{"type":"object","description":"the arguments of the tool call"}}}},{"name":"copilot_editFiles","modelDescription":"This is a placeholder tool, do not use","userDescription":"Edit files","icon":"$(pencil)","displayName":"Edit Files","toolReferenceName":"editFiles"}],"languageModelToolSets":[{"name":"edit","description":"Edit files in your workspace","icon":"$(pencil)","tools":["createFile","createDirectory","editNotebook","newJupyterNotebook","editFiles"]},{"name":"runNotebooks","description":"Run notebook cells","icon":"$(notebook)","tools":["runCell","getNotebookSummary","readNotebookCellOutput"]},{"name":"search","description":"Search and read files in your workspace","icon":"$(search)","tools":["fileSearch","textSearch","listDirectory","readFile","codebase","searchResults"]},{"name":"new","description":"Scaffold a new workspace with VS Code-specific configurations to compile, debug and run new projects.","icon":"$(new-folder)","tools":["newWorkspace","runVscodeCommand","getProjectSetupInfo","installExtension"]}],"chatParticipants":[{"id":"github.copilot.default","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask or edit in context","isDefault":true,"locations":["panel"],"modes":["ask"],"disambiguation":[{"category":"generate_code_sample","description":"The user wants to generate code snippets without referencing the contents of the current workspace. This category does not include generating entire projects.","examples":["Write an example of computing a SHA256 hash."]},{"category":"add_feature_to_file","description":"The user wants to change code in a file that is provided in their request, without referencing the contents of the current workspace. This category does not include generating entire projects.","examples":["Add a refresh button to the table widget."]},{"category":"question_about_specific_files","description":"The user has a question about a specific file or code snippet that they have provided as part of their query, and the question does not require additional workspace context to answer.","examples":["What does this file do?"]}]},{"id":"github.copilot.editingSession","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"locations":["panel"],"modes":["edit"],"when":"!config.chat.edits2.enabled"},{"id":"github.copilot.editingSessionEditor","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"when":"config.inlineChat.enableV2 || config.github.copilot.chat.advanced.inlineChat2","locations":["editor","notebook"],"commands":[{"name":"fix","description":"Propose a fix for the problems in the selected code","when":"config.inlineChat.enableV2 || config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"fix","description":"Propose a fix for the problems in the selected code","examples":["There is a problem in this code. Rewrite the code to show it with the bug fixed."]}]},{"name":"tests","description":"Generate unit tests for the selected code","when":"config.inlineChat.enableV2 || config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"tests","description":"Help writing tests for the selected code","examples":["Help me write tests for the selected code."]}]},{"name":"doc","description":"Add documentation comment for this symbol","when":"config.inlineChat.enableV2 || config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"doc","description":"Add documentation comment for this symbol","examples":["Add jsdoc to this method"]}]}]},{"id":"github.copilot.editingSession2","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"locations":["panel"],"modes":["edit"],"when":"config.chat.edits2.enabled"},{"id":"github.copilot.editsAgent","name":"agent","fullName":"GitHub Copilot","description":"Edit files in your workspace in agent mode","locations":["panel"],"modes":["agent"],"isEngine":true,"isDefault":true,"isAgent":true,"when":"config.chat.agent.enabled","commands":[{"name":"list"},{"name":"error","description":"Make a model request which will result in an error","when":"github.copilot.chat.debug"}]},{"id":"github.copilot.editor","name":"Copilot","fullName":"GitHub Copilot","description":"Ask or edit in context","isDefault":true,"locations":["editor"],"when":"!config.inlineChat.enableV2 && !config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"unknown","description":"Intent of this command is unclear or is not related to information technologies","examples":["Add a dog to this comment."]}],"commands":[{"name":"generate","description":"Generate new code","disambiguation":[{"category":"generate","description":"Generate new code","examples":["Add a function that returns the sum of two numbers"]}]},{"name":"edit","description":"Edit the selected code in your active editor","disambiguation":[{"category":"edit","description":"Make changes to existing code","examples":["Change this method to use async/await"]}]},{"name":"doc","description":"Add documentation comment for this symbol","disambiguation":[{"category":"doc","description":"Add documentation comment for this symbol","examples":["Add jsdoc to this method"]}]},{"name":"fix","description":"Propose a fix for the problems in the selected code","disambiguation":[{"category":"fix","description":"Propose a fix for the problems in the selected code","examples":["There is a problem in this code. Rewrite the code to show it with the bug fixed."]}]},{"name":"explain","description":"Explain how the code in your active editor works","disambiguation":[{"category":"explain","description":"Explain how the code in your active editor works","examples":["Write an explanation for the code above as paragraphs of text."]}]},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent"},{"name":"tests","description":"Generate unit tests for the selected code","disambiguation":[{"category":"tests","description":"Generate unit tests for the selected code. The user does not want to fix their existing tests.","examples":["Write a set of detailed unit test functions for the code above."]}]}]},{"id":"github.copilot.notebook","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask or edit in context","isDefault":true,"locations":["notebook"],"when":"!config.inlineChat.enableV2 && !config.github.copilot.chat.advanced.inlineChat2","commands":[{"name":"fix","description":"Propose a fix for the problems in the selected code"},{"name":"explain","description":"Explain how the code in your active editor works"}]},{"id":"github.copilot.notebookEditorAgent","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask or edit in context","isDefault":true,"locations":["notebook"],"when":"config.inlineChat.enableV2","commands":[{"name":"fix","description":"Propose a fix for the problems in the selected code"},{"name":"explain","description":"Explain how the code in your active editor works"}]},{"id":"github.copilot.workspace","name":"workspace","fullName":"Workspace","description":"Ask about your workspace","when":"!github.copilot.interactiveSession.disabled","sampleRequest":"How do I build this project?","locations":["panel"],"disambiguation":[{"category":"workspace_project_questions","description":"The user wants to learn about or update the code or files in their current workspace. Questions in this category may be about understanding what the whole workspace does or locating the implementation of some code. This does not include generating or updating tests.","examples":["What does this project do?"]},{"category":"find_code_in_workspace","description":"The user wants to locate the implementation of some functionality in their current workspace.","examples":["Where is the tree widget implemented?"]},{"category":"generate_with_workspace_context","description":"The user wants to generate code based on multiple files in the workspace and did not specify which files to reference.","examples":["Create a README for this project."]}],"commands":[{"name":"explain","description":"Explain how the code in your active editor works"},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent"},{"name":"tests","description":"Generate unit tests for the selected code","disambiguation":[{"category":"create_tests","description":"The user wants to generate unit tests.","examples":["Generate tests for my selection using pytest."]}]},{"name":"fix","description":"Propose a fix for the problems in the selected code","sampleRequest":"There is a problem in this code. Rewrite the code to show it with the bug fixed."},{"name":"new","description":"Scaffold code for a new file or project in a workspace","sampleRequest":"Create a RESTful API server using typescript","isSticky":true,"disambiguation":[{"category":"create_new_workspace_or_extension","description":"The user wants to create a complete Visual Studio Code workspace from scratch, such as a new application or a Visual Studio Code extension. Use this category only if the question relates to generating or creating new workspaces in Visual Studio Code. Do not use this category for updating existing code or generating sample code snippets","examples":["Scaffold a Node server.","Create a sample project which uses the fileSystemProvider API.","react application"]}]},{"name":"newNotebook","description":"Create a new Jupyter Notebook","sampleRequest":"How do I create a notebook to load data from a csv file?","disambiguation":[{"category":"create_jupyter_notebook","description":"The user wants to create a new Jupyter notebook in Visual Studio Code.","examples":["Create a notebook to analyze this CSV file."]}]},{"name":"semanticSearch","description":"Find relevant code to your query","sampleRequest":"Where is the toolbar code?","when":"config.github.copilot.semanticSearch.enabled"},{"name":"setupTests","description":"Set up tests in your project (Experimental)","sampleRequest":"add playwright tests to my project","when":"config.github.copilot.chat.setupTests.enabled","disambiguation":[{"category":"set_up_tests","description":"The user wants to configure project test setup, framework, or test runner. The user does not want to fix their existing tests.","examples":["Set up tests for this project."]}]}]},{"id":"github.copilot.vscode","name":"vscode","fullName":"VS Code","description":"Ask questions about VS Code","when":"!github.copilot.interactiveSession.disabled","sampleRequest":"What is the command to open the integrated terminal?","locations":["panel"],"disambiguation":[{"category":"vscode_configuration_questions","description":"The user wants to learn about, use, or configure the Visual Studio Code. Use this category if the users question is specifically about commands, settings, keybindings, extensions and other features available in Visual Studio Code. Do not use this category to answer questions about generating code or creating new projects including Visual Studio Code extensions.","examples":["Switch to light mode.","Keyboard shortcut to toggle terminal visibility.","Settings to enable minimap.","Whats new in the latest release?"]},{"category":"configure_python_environment","description":"The user wants to set up their Python environment.","examples":["Create a virtual environment for my project."]}],"commands":[{"name":"search","description":"Generate query parameters for workspace search","sampleRequest":"Search for 'foo' in all files under my 'src' directory"},{"name":"startDebugging","description":"Generate launch config and start debugging in VS Code (Experimental)","sampleRequest":"Attach to node app at port 9229","when":"config.github.copilot.chat.startDebugging.enabled"}]},{"id":"github.copilot.terminal","name":"terminal","fullName":"Terminal","description":"Ask about commands","when":"!github.copilot.interactiveSession.disabled","sampleRequest":"How do I view all files within a directory including sub-directories?","isDefault":true,"locations":["terminal"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command"}]},{"id":"github.copilot.terminalPanel","name":"terminal","fullName":"Terminal","description":"Ask how to do something in the terminal","when":"!github.copilot.interactiveSession.disabled","sampleRequest":"How do I view all files within a directory including sub-directories?","locations":["panel"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command","disambiguation":[{"category":"terminal_state_questions","description":"The user wants to learn about specific state such as the selection, command, or failed command in the integrated terminal in Visual Studio Code.","examples":["Why did the latest terminal command fail?"]}]}]},{"id":"github.copilot.chatReplay","name":"chatReplay","fullName":"Chat Replay","when":"debugType == 'vscode-chat-replay'","locations":["panel"]}],"languageModelChatProviders":[{"vendor":"copilot","displayName":"Copilot"},{"vendor":"azure","displayName":"Azure","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"anthropic","displayName":"Anthropic","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"xai","displayName":"xAI","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"ollama","displayName":"Ollama"},{"vendor":"openai","displayName":"OpenAI","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"gemini","displayName":"Google","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"groq","displayName":"Groq","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"openrouter","displayName":"OpenRouter","managementCommand":"github.copilot.chat.manageBYOK"}],"interactiveSession":[{"label":"GitHub Copilot","id":"copilot","icon":"","when":"!github.copilot.interactiveSession.disabled"}],"viewsWelcome":[{"view":"debug","when":"github.copilot-chat.activated","contents":"Debug using a [terminal command](command:github.copilot.chat.startCopilotDebugCommand) or in an [interactive chat](command:workbench.action.chat.open?%7B%22query%22%3A%22%40vscode%20%2FstartDebugging%20%22%2C%22isPartialQuery%22%3Atrue%7D)."}],"chatViewsWelcome":[{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Sign in to enable features powered by GitHub Copilot.\n\n[Sign in](command:workbench.action.chat.triggerSetupForceSignIn)","when":"!github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport && !github.copilot.interactiveSession.chatDisabled && !github.copilot.interactiveSession.switchToReleaseChannel"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Your Copilot subscription has expired.\n\n[Review Copilot Settings](https://github.com/settings/copilot?editor=vscode)","when":"github.copilot.interactiveSession.individual.expired"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Contact your GitHub organization administrator to enable Copilot.","when":"github.copilot.interactiveSession.enterprise.disabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"You are currently offline. Please connect to the internet to use GitHub Copilot.\n\n[Retry Connection](command:github.copilot.refreshToken)","when":"github.copilot.offline"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"There seems to be a problem with your account. Please contact GitHub support.\n\n[Contact Support](https://support.github.com/?editor=vscode)","when":"github.copilot.interactiveSession.contactSupport"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"GitHub Copilot Chat is currently disabled for your account by an organization administrator. Contact an organization administrator to enable chat.\n\n[Learn More](https://docs.github.com/en/copilot/managing-copilot/managing-github-copilot-in-your-organization/managing-github-copilot-features-in-your-organization/managing-policies-for-copilot-in-your-organization)","when":"github.copilot.interactiveSession.chatDisabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"The Pre-Release version of the GitHub Copilot Chat extension is not currently supported in the stable version of VS Code. Please switch to the release version for GitHub Copilot Chat or try VS Code Insiders.\n\n[Switch to Release Version and Reload](command:runCommands?%7B%22commands%22%3A%5B%7B%22command%22%3A%22workbench.extensions.action.switchToRelease%22%2C%22args%22%3A%5B%22GitHub.copilot-chat%22%5D%7D%2C%22workbench.action.reloadWindow%22%5D%7D)\n\n[Switch to VS Code Insiders](https://aka.ms/vscode-insiders)","when":"github.copilot.interactiveSession.switchToReleaseChannel"}],"commands":[{"command":"github.copilot.chat.replay","title":"Start Chat Replay","icon":"$(debug-line-by-line)"},{"command":"github.copilot.chat.replay.enableWorkspaceEditTracing","title":"Enable Chat Edit Tracing","category":"Developer","enablement":"!github.copilot.chat.replay.workspaceEditTracing"},{"command":"github.copilot.chat.replay.disableWorkspaceEditTracing","title":"Disable Chat Edit Tracing","category":"Developer","enablement":"github.copilot.chat.replay.workspaceEditTracing"},{"command":"github.copilot.chat.explain","title":"Explain","enablement":"!github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.explain.palette","title":"Explain","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.review","title":"Review","enablement":"config.github.copilot.chat.reviewSelection.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.apply","title":"Apply","icon":"$(sparkle)","enablement":"commentThread =~ /hasSuggestion/","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.applyAndNext","title":"Apply and Go to Next","icon":"$(sparkle)","enablement":"commentThread =~ /hasSuggestion/","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discard","title":"Discard","icon":"$(close)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discardAndNext","title":"Discard and Go to Next","icon":"$(close)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discardAll","title":"Discard All","icon":"$(close-all)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.stagedChanges","title":"Code Review - Staged Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.unstagedChanges","title":"Code Review - Unstaged Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.changes","title":"Code Review - Uncommitted Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.stagedFileChange","title":"Review Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.unstagedFileChange","title":"Review Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.previous","title":"Previous Suggestion","icon":"$(arrow-up)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.next","title":"Next Suggestion","icon":"$(arrow-down)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.continueInInlineChat","title":"Discard and Copy to Inline Chat","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.continueInChat","title":"View in Chat Panel","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.markHelpful","title":"Helpful","icon":"$(thumbsup)","enablement":"!(commentThread =~ /markedAsHelpful/)","category":"GitHub Copilot"},{"command":"github.copilot.chat.openUserPreferences","title":"Open User Preferences","category":"GitHub Copilot","enablement":"config.github.copilot.chat.enableUserPreferences"},{"command":"github.copilot.chat.review.markUnhelpful","title":"Unhelpful","icon":"$(thumbsdown)","enablement":"!(commentThread =~ /markedAsUnhelpful/)","category":"GitHub Copilot"},{"command":"github.copilot.chat.generate","title":"Generate This","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.generateDocs","title":"Generate Docs","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.generateTests","title":"Generate Tests","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.fix","title":"Fix","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveSession.feedback","title":"Send Chat Feedback","enablement":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled","icon":"$(feedback)","category":"GitHub Copilot"},{"command":"github.copilot.debug.workbenchState","title":"Log Workbench State","category":"Developer"},{"command":"github.copilot.debug.showChatLogView","title":"Show Chat Debug View","category":"Developer"},{"command":"github.copilot.debug.showContextInspectorView","title":"Inspect Language Context","icon":"$(inspect)","category":"Developer"},{"command":"github.copilot.debug.resetVirtualToolGroups","title":"Reset Virtual Tool Groups","icon":"$(inspect)","category":"Developer"},{"command":"github.copilot.terminal.explainTerminalLastCommand","title":"Explain Last Terminal Command","category":"GitHub Copilot"},{"command":"github.copilot.git.generateCommitMessage","title":"Generate Commit Message","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","title":"Generate Dev Container Configuration","category":"GitHub Copilot"},{"command":"github.copilot.tests.fixTestFailure","icon":"$(sparkle)","title":"Fix Test Failure","category":"GitHub Copilot"},{"command":"github.copilot.tests.fixTestFailure.fromInline","icon":"$(sparkle)","title":"Fix Test Failure"},{"command":"github.copilot.chat.attachSelection","title":"Add Selection to Chat","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.debug.collectDiagnostics","title":"GitHub Copilot Chat Diagnostics","category":"Developer"},{"command":"github.copilot.debug.inlineEdit.clearCache","title":"GitHub Copilot Chat Clear Next Edit Cache","category":"Developer"},{"command":"github.copilot.debug.inlineEdit.reportNotebookNESIssue","title":"Report Notebook Next Edit Issue","enablement":"config.github.copilot.chat.advanced.notebook.alternativeNESFormat.enabled || github.copilot.chat.enableEnhancedNotebookNES","category":"GitHub Copilot Developer"},{"command":"github.copilot.debug.generateSTest","title":"Generate STest From Last Chat Request","enablement":"github.copilot.debugReportFeedback","category":"GitHub Copilot Developer"},{"command":"github.copilot.debug.generateConfiguration","title":"Generate Debug Configuration with GitHub Copilot","category":"GitHub Copilot","enablement":"config.github.copilot.chat.startDebugging.enabled","tags":["experimental"]},{"command":"github.copilot.open.walkthrough","title":"Open Walkthrough","category":"GitHub Copilot"},{"command":"github.copilot.debug.generateInlineEditTests","title":"Generate Inline Edit Tests","category":"GitHub Copilot","enablement":"resourceScheme == 'ccreq'"},{"command":"github.copilot.buildLocalWorkspaceIndex","title":"Build Local Workspace Index","category":"GitHub Copilot","enablement":"github.copilot-chat.activated"},{"command":"github.copilot.buildRemoteWorkspaceIndex","title":"Build Remote Workspace Index","category":"GitHub Copilot","enablement":"github.copilot-chat.activated"},{"command":"github.copilot.report","title":"Report Issue","category":"GitHub Copilot"},{"command":"github.copilot.chat.rerunWithCopilotDebug","title":"Debug Last Terminal Command","category":"GitHub Copilot"},{"command":"github.copilot.chat.startCopilotDebugCommand","title":"Start Copilot Debug"},{"command":"github.copilot.chat.clearTemporalContext","title":"Clear Temporal Context","category":"GitHub Copilot (Developer)"},{"command":"github.copilot.search.markHelpful","title":"Helpful","icon":"$(thumbsup)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.search.markUnhelpful","title":"Unhelpful","icon":"$(thumbsdown)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.search.feedback","title":"Feedback","icon":"$(feedback)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.chat.debug.showElements","title":"Show Rendered Elements"},{"command":"github.copilot.chat.debug.hideElements","title":"Hide Rendered Elements"},{"command":"github.copilot.chat.debug.showTools","title":"Show Tools"},{"command":"github.copilot.chat.debug.hideTools","title":"Hide Tools"},{"command":"github.copilot.chat.debug.showNesRequests","title":"Show NES Requests"},{"command":"github.copilot.chat.debug.hideNesRequests","title":"Hide NES Requests"},{"command":"github.copilot.chat.debug.exportLogItem","title":"Export as...","icon":"$(export)"},{"command":"github.copilot.chat.debug.exportPromptArchive","title":"Export All as Archive...","icon":"$(archive)"},{"command":"github.copilot.chat.debug.exportPromptLogsAsJson","title":"Export All as JSON...","icon":"$(export)"},{"command":"github.copilot.chat.debug.exportAllPromptLogsAsJson","title":"Export All Prompt Logs as JSON...","icon":"$(export)"},{"command":"github.copilot.debug.collectWorkspaceIndexDiagnostics","title":"Collect Workspace Index Diagnostics","category":"Developer"},{"command":"github.copilot.chat.mcp.setup.check","title":"MCP Check: is supported"},{"command":"github.copilot.chat.mcp.setup.validatePackage","title":"MCP Check: validate package"},{"command":"github.copilot.chat.mcp.setup.flow","title":"MCP Check: do prompts"},{"command":"github.copilot.chat.generateAltText","title":"Generate/Refine Alt Text"},{"command":"github.copilot.chat.notebook.enableFollowCellExecution","title":"Enable Follow Cell Execution from Chat","shortTitle":"Follow","icon":"$(pinned)"},{"command":"github.copilot.chat.notebook.disableFollowCellExecution","title":"Disable Follow Cell Execution from Chat","shortTitle":"Unfollow","icon":"$(pinned-dirty)"},{"command":"github.copilot.chat.manageBYOK","title":"Manage Bring Your Own Key Vendor","enablement":"false"},{"command":"github.copilot.chat.configureCustomOAIModels","title":"Configure Custom OpenAI-Compatible Models","category":"GitHub Copilot"}],"configuration":[{"title":"GitHub Copilot Chat","id":"stable","properties":{"github.copilot.chat.codeGeneration.useInstructionFiles":{"type":"boolean","default":true,"markdownDescription":"Controls whether code instructions from `.github/copilot-instructions.md` are added to Copilot requests.\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance. [Learn more](https://aka.ms/github-copilot-custom-instructions) about customizing Copilot."},"github.copilot.editor.enableCodeActions":{"type":"boolean","default":true,"description":"Controls if Copilot commands are shown as Code Actions when available"},"github.copilot.renameSuggestions.triggerAutomatically":{"type":"boolean","default":true,"description":"Controls whether Copilot generates suggestions for renaming"},"github.copilot.chat.localeOverride":{"type":"string","enum":["auto","en","fr","it","de","es","ru","zh-CN","zh-TW","ja","ko","cs","pt-br","tr","pl"],"enumDescriptions":["Use VS Code's configured display language","English","français","italiano","Deutsch","español","русский","中文(简体)","中文(繁體)","日本語","한국어","čeština","português","Türkçe","polski"],"default":"auto","markdownDescription":"Specify a locale that Copilot should respond in, e.g. `en` or `fr`. By default, Copilot will respond using VS Code's configured display language locale."},"github.copilot.chat.terminalChatLocation":{"type":"string","default":"chatView","markdownDescription":"Controls where chat queries from the terminal should be opened.","markdownEnumDescriptions":["Open the chat view.","Open quick chat.","Open terminal inline chat"],"enum":["chatView","quickChat","terminal"]},"github.copilot.chat.scopeSelection":{"type":"boolean","default":false,"markdownDescription":"Whether to prompt the user to select a specific symbol scope if the user uses `/explain` and the active editor has no selection."},"github.copilot.chat.useProjectTemplates":{"type":"boolean","default":true,"markdownDescription":"Use relevant GitHub projects as starter projects when using `/new`"},"github.copilot.nextEditSuggestions.enabled":{"type":"boolean","default":false,"tags":["nextEditSuggestions","onExp"],"markdownDescription":"Whether to enable next edit suggestions (NES).\n\nNES can propose a next edit based on your recent changes. [Learn more](https://aka.ms/vscode-nes) about next edit suggestions.","scope":"language-overridable"},"github.copilot.nextEditSuggestions.fixes":{"type":"boolean","default":true,"tags":["nextEditSuggestions","onExp"],"markdownDescription":"Whether to offer fixes for diagnostics via next edit suggestions (NES).","scope":"language-overridable"},"github.copilot.nextEditSuggestions.allowWhitespaceOnlyChanges":{"type":"boolean","default":true,"tags":["nextEditSuggestions","onExp"],"markdownDescription":"Whether to allow whitespace-only changes be proposed by next edit suggestions (NES).","scope":"language-overridable"},"github.copilot.chat.agent.autoFix":{"type":"boolean","default":true,"description":"Automatically fix diagnostics for edited files."},"github.copilot.chat.customInstructionsInSystemMessage":{"type":"boolean","default":true,"description":"When enabled, custom instructions and mode instructions will be appended to the system message instead of a user message."}}},{"title":"Preview","id":"preview","properties":{"github.copilot.chat.startDebugging.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/startDebugging` intent in panel chat. Generates or finds launch config to match the query (if any), project structure, and more.","tags":["preview"]},"github.copilot.chat.reviewAgent.enabled":{"type":"boolean","default":true,"description":"Enables the code review agent.","tags":["preview"]},"github.copilot.chat.reviewSelection.enabled":{"type":"boolean","default":true,"description":"Enables code review on current selection.","tags":["preview"]},"github.copilot.chat.reviewSelection.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that provide code review for the current selection. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-review-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-review-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that provide code review for the current selection. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use underscore for field names."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Use underscore for field names."},{"text":"Resolve all TODO tasks."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that provide code review for the current selection.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's effectiveness.","examples":[[{"file":".copilot-review-instructions.md"},{"text":"Resolve all TODO tasks."}]],"tags":["preview"]},"github.copilot.chat.copilotDebugCommand.enabled":{"type":"boolean","default":true,"tags":["preview"],"description":"Whether the `copilot-debug` command is enabled in the terminal."},"github.copilot.chat.codesearch.enabled":{"type":"boolean","default":false,"tags":["preview"],"markdownDescription":"Whether to enable agentic codesearch when using `#codebase`."},"github.copilot.chat.byok.ollamaEndpoint":{"type":"string","default":"http://localhost:11434","tags":["preview"],"markdownDescription":"The endpoint to use for the Ollama when accessed via bring your own key. Defaults to localhost."}}},{"title":"Experimental","id":"experimental","properties":{"github.copilot.chat.agent.thinkingTool":{"type":"boolean","default":false,"tags":["experimental"],"markdownDescription":"Enables the thinking tool that allows Copilot to think deeply about your request before generating a response in agent mode."},"github.copilot.chat.edits.suggestRelatedFilesFromGitHistory":{"type":"boolean","default":true,"tags":["experimental"],"markdownDescription":"Whether to suggest related files from git history for the Copilot Edits working set."},"github.copilot.chat.edits.suggestRelatedFilesForTests":{"type":"boolean","default":true,"tags":["experimental"],"markdownDescription":"Whether to suggest source files from test files for the Copilot Edits working set."},"github.copilot.chat.codeGeneration.instructions":{"markdownDeprecationMessage":"Use instructions files instead. See https://aka.ms/vscode-ghcp-custom-instructions for more information.","type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that generate code. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-codeGeneration-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-codeGeneration-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that generate code. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use underscore for field names."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Use underscore for field names."},{"text":"Always add a comment: 'Generated by Copilot'."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate code.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-codeGeneration-instructions.md"},{"text":"Always add a comment: 'Generated by Copilot'."}]],"tags":["experimental"]},"github.copilot.chat.testGeneration.instructions":{"markdownDeprecationMessage":"Use instructions files instead. See https://aka.ms/vscode-ghcp-custom-instructions for more information.","type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that generate tests. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-test-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-test-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that generate tests. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use suite and test instead of describe and it."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Always try uniting related tests in a suite."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate tests.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-test-instructions.md"},{"text":"Always try uniting related tests in a suite."}]],"tags":["experimental"]},"github.copilot.chat.commitMessageGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file with instructions that will be added to Copilot requests that generate commit messages.","properties":{"file":{"type":"string","examples":[".copilot-commit-message-instructions.md"]}},"examples":[{"file":".copilot-commit-message-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"Text instructions that will be added to Copilot requests that generate commit messages.","properties":{"text":{"type":"string","examples":["Use conventional commit message format."]}},"required":["text"],"examples":[{"text":"Use conventional commit message format."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate commit messages.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use conventional commit message format.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-commit-message-instructions.md"},{"text":"Use conventional commit message format."}]],"tags":["experimental"]},"github.copilot.chat.pullRequestDescriptionGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file with instructions that will be added to Copilot requests that generate pull request titles and descriptions.","properties":{"file":{"type":"string","examples":[".copilot-pull-request-description-instructions.md"]}},"examples":[{"file":".copilot-pull-request-description-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"Text instructions that will be added to Copilot requests that generate pull request titles and descriptions.","properties":{"text":{"type":"string","examples":["Include every commit message in the pull request description."]}},"required":["text"],"examples":[{"text":"Include every commit message in the pull request description."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate pull request titles and descriptions.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Always include a list of key changes.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-pull-request-description-instructions.md"},{"text":"Use conventional commit message format."}]],"tags":["experimental"]},"github.copilot.chat.generateTests.codeLens":{"type":"boolean","default":false,"description":"Show 'Generate tests' code lens for symbols that are not covered by current test coverage information.","tags":["experimental"]},"github.copilot.chat.edits.temporalContext.enabled":{"type":"boolean","default":false,"description":"When making edits request whether to include recently viewed and edited files with Copilot requests.","tags":["experimental","onExp"]},"github.copilot.chat.editor.temporalContext.enabled":{"type":"boolean","default":false,"description":"When making inline chat request whether to include recently viewed and edited files with Copilot requests.","tags":["experimental","onExp"]},"github.copilot.chat.setupTests.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/setupTests` intent and prompting in `/tests` generation.","tags":["experimental"]},"github.copilot.chat.languageContext.typescript.enabled":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Enables the TypeScript language context provider for inline completions"},"github.copilot.chat.languageContext.typescript.cacheTimeout":{"type":"number","default":500,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"The cache population timeout for the TypeScript language context provider in milliseconds. The default is 500 milliseconds."},"github.copilot.chat.languageContext.fix.typescript.enabled":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Enables the TypeScript language context provider for /fix commands"},"github.copilot.chat.languageContext.inline.typescript.enabled":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Enables the TypeScript language context provider for inline chats (both generate and edit)"},"github.copilot.chat.newWorkspaceCreation.enabled":{"type":"boolean","default":true,"tags":["experimental"],"description":"Whether to enable new agentic workspace creation."},"github.copilot.chat.newWorkspace.useContext7":{"type":"boolean","default":false,"tags":["experimental"],"markdownDescription":"Whether to use the [Context7](command:github.copilot.mcp.viewContext7) tools to scaffold project for new workspace creation."},"github.copilot.chat.agent.currentEditorContext.enabled":{"type":"boolean","default":true,"tags":["experimental"],"description":"When enabled, Copilot will include the name of the current active editor in the context for agent mode."},"github.copilot.chat.notebook.followCellExecution.enabled":{"type":"boolean","default":false,"tags":["experimental"],"description":"Controls whether the currently executing cell is revealed into the viewport upon execution from Copilot."},"github.copilot.chat.notebook.enhancedNextEditSuggestions.enabled":{"type":"boolean","default":false,"tags":["experimental","onExp"],"description":"Controls whether to use an enhanced approach for generating next edit suggestions in notebook cells."},"github.copilot.chat.summarizeAgentConversationHistory.enabled":{"type":"boolean","default":true,"tags":["experimental","onExp"],"description":"Whether to auto-summarize agent conversation history once the context window is filled."},"github.copilot.chat.virtualTools.threshold":{"type":"number","minimum":0,"maximum":128,"default":128,"tags":["experimental"],"markdownDescription":"This setting defines the tool count over which virtual tools should be used. Virtual tools group similar sets of tools together and they allow the model to activate them on-demand. Certain tool groups will optimistically be pre-activated. We are actively developing this feature and you experience degraded tool calling once the threshold is hit.\n\nMay be set to `0` to disable virtual tools."},"github.copilot.chat.azureModels":{"type":"object","default":{},"tags":["experimental"],"additionalProperties":{"type":"object","properties":{"name":{"type":"string","description":"Display name of the Azure model"},"url":{"type":"string","description":"URL endpoint for the Azure model"},"toolCalling":{"type":"boolean","description":"Whether the model supports tool calling"},"vision":{"type":"boolean","description":"Whether the model supports vision capabilities"},"maxInputTokens":{"type":"number","description":"Maximum number of input tokens supported by the model"},"maxOutputTokens":{"type":"number","description":"Maximum number of output tokens supported by the model"},"thinking":{"type":"boolean","default":false,"description":"Whether the model supports thinking capabilities"}},"required":["name","url","toolCalling","vision","maxInputTokens","maxOutputTokens"],"additionalProperties":false},"markdownDescription":"Configure custom Azure OpenAI models. Each key should be a unique model ID, and the value should be an object with model configuration including name, url, toolCalling, vision, maxInputTokens, and maxOutputTokens properties."},"github.copilot.chat.customOAIModels":{"type":"object","default":{},"tags":["experimental"],"additionalProperties":{"type":"object","properties":{"name":{"type":"string","description":"Display name of the custom OpenAI model"},"url":{"type":"string","description":"URL endpoint for the custom OpenAI-compatible model"},"toolCalling":{"type":"boolean","description":"Whether the model supports tool calling"},"vision":{"type":"boolean","description":"Whether the model supports vision capabilities"},"maxInputTokens":{"type":"number","description":"Maximum number of input tokens supported by the model"},"maxOutputTokens":{"type":"number","description":"Maximum number of output tokens supported by the model"},"requiresAPIKey":{"type":"boolean","description":"Whether the model requires an API key for authentication","default":true},"thinking":{"type":"boolean","default":false,"description":"Whether the model supports thinking capabilities"}},"required":["name","url","toolCalling","vision","maxInputTokens","maxOutputTokens","requiresAPIKey"],"additionalProperties":false},"markdownDescription":"Configure custom OpenAI-compatible models. Each key should be a unique model ID, and the value should be an object with model configuration including name, url, toolCalling, vision, maxInputTokens, and maxOutputTokens properties."},"github.copilot.chat.alternateGptPrompt.enabled":{"type":"boolean","default":false,"tags":["experimental"],"description":"Enables an experimental alternate prompt for GPT models instead of the default prompt."},"github.copilot.chat.gpt5AlternatePrompt":{"type":"string","default":"default","tags":["experimental"],"description":"Specifies an experimental alternate prompt to use for GPT-5 models."},"github.copilot.chat.grokCodeAlternatePrompt":{"type":"string","default":"default","tags":["experimental"],"description":"Specifies an experimental alternate prompt to use for Grok Code models."},"github.copilot.chat.useResponsesApi":{"type":"boolean","default":false,"markdownDescription":"Use the Responses API instead of the Chat Completions API when supported. Enables reasoning and reasoning summaries.\n\n**Note**: This is an experimental feature that is not yet activated for all users.","tags":["experimental","onExp"]},"github.copilot.chat.responsesApiReasoningEffort":{"type":"string","default":"default","markdownDescription":"Sets the reasoning effort used for the Responses API. Requires `#github.copilot.chat.useResponsesApi#`.","tags":["experimental","onExp"],"enum":["low","medium","high","default"]},"github.copilot.chat.responsesApiReasoningSummary":{"type":"string","default":"detailed","markdownDescription":"Sets the reasoning summary style used for the Responses API. Requires `#github.copilot.chat.useResponsesApi#`.","tags":["experimental","onExp"],"enum":["off","detailed"]},"github.copilot.chat.completionsFetcher":{"type":["string","null"],"markdownDescription":"Sets the fetcher used for the inline completions.","tags":["experimental","onExp"],"enum":["electron-fetch","node-fetch"]},"github.copilot.chat.nesFetcher":{"type":["string","null"],"markdownDescription":"Sets the fetcher used for the next edit suggestions.","tags":["experimental","onExp"],"enum":["electron-fetch","node-fetch"]}}}],"submenus":[{"id":"copilot/reviewComment/additionalActions/applyAndNext","label":"Apply and Go to Next"},{"id":"copilot/reviewComment/additionalActions/discardAndNext","label":"Discard and Go to Next"},{"id":"copilot/reviewComment/additionalActions/discard","label":"Discard"},{"id":"github.copilot.chat.debug.filter","label":"Filter","icon":"$(filter)"},{"id":"github.copilot.chat.debug.exportAllPromptLogsAsJson","label":"Export All Logs as JSON","icon":"$(file-export)"}],"menus":{"editor/title":[{"command":"github.copilot.debug.generateInlineEditTests","when":"resourceScheme == 'ccreq'"},{"command":"github.copilot.chat.notebook.enableFollowCellExecution","when":"config.github.copilot.chat.notebook.followCellExecution.enabled && !github.copilot.notebookFollowInSessionEnabled && github.copilot.notebookAgentModeUsage && !config.notebook.globalToolbar","group":"navigation@10"},{"command":"github.copilot.chat.notebook.disableFollowCellExecution","when":"config.github.copilot.chat.notebook.followCellExecution.enabled && github.copilot.notebookFollowInSessionEnabled && github.copilot.notebookAgentModeUsage && !config.notebook.globalToolbar","group":"navigation@10"},{"command":"github.copilot.chat.replay","group":"navigation@9","when":"resourceLangId == chatReplay"}],"editor/context":[{"command":"github.copilot.chat.explain","when":"!github.copilot.interactiveSession.disabled","group":"1_chat@4"}],"editor/context/chat":[{"command":"github.copilot.chat.fix","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@1"},{"command":"github.copilot.chat.review","when":"config.github.copilot.chat.reviewSelection.enabled && !github.copilot.interactiveSession.disabled && resourceScheme != 'vscode-chat-code-block'","group":"copilotAction@2"},{"command":"github.copilot.chat.generateDocs","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotGenerate@1"},{"command":"github.copilot.chat.generateTests","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotGenerate@2"}],"testing/item/result":[{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"testResultState == failed && !testResultOutdated","group":"inline@2"}],"testing/item/context":[{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"testResultState == failed && !testResultOutdated","group":"inline@2"}],"commandPalette":[{"command":"github.copilot.interactiveSession.feedback","when":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled"},{"command":"github.copilot.debug.workbenchState","when":"true"},{"command":"github.copilot.chat.rerunWithCopilotDebug","when":"false"},{"command":"github.copilot.chat.startCopilotDebugCommand","when":"false"},{"command":"github.copilot.git.generateCommitMessage","when":"false"},{"command":"github.copilot.chat.explain","when":"false"},{"command":"github.copilot.chat.review","when":"!github.copilot.interactiveSession.disabled"},{"command":"github.copilot.chat.review.apply","when":"false"},{"command":"github.copilot.chat.review.applyAndNext","when":"false"},{"command":"github.copilot.chat.review.discard","when":"false"},{"command":"github.copilot.chat.review.discardAndNext","when":"false"},{"command":"github.copilot.chat.review.discardAll","when":"false"},{"command":"github.copilot.chat.review.stagedChanges","when":"false"},{"command":"github.copilot.chat.review.unstagedChanges","when":"false"},{"command":"github.copilot.chat.review.changes","when":"false"},{"command":"github.copilot.chat.review.stagedFileChange","when":"false"},{"command":"github.copilot.chat.review.unstagedFileChange","when":"false"},{"command":"github.copilot.chat.review.previous","when":"false"},{"command":"github.copilot.chat.review.next","when":"false"},{"command":"github.copilot.chat.review.continueInInlineChat","when":"false"},{"command":"github.copilot.chat.review.continueInChat","when":"false"},{"command":"github.copilot.chat.review.markHelpful","when":"false"},{"command":"github.copilot.chat.review.markUnhelpful","when":"false"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","when":"false"},{"command":"github.copilot.tests.fixTestFailure","when":"false"},{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"false"},{"command":"github.copilot.search.markHelpful","when":"false"},{"command":"github.copilot.search.markUnhelpful","when":"false"},{"command":"github.copilot.search.feedback","when":"false"},{"command":"github.copilot.chat.debug.showElements","when":"false"},{"command":"github.copilot.chat.debug.hideElements","when":"false"},{"command":"github.copilot.chat.debug.showTools","when":"false"},{"command":"github.copilot.chat.debug.hideTools","when":"false"},{"command":"github.copilot.chat.debug.showNesRequests","when":"false"},{"command":"github.copilot.chat.debug.hideNesRequests","when":"false"},{"command":"github.copilot.chat.debug.exportLogItem","when":"false"},{"command":"github.copilot.chat.debug.exportPromptArchive","when":"false"},{"command":"github.copilot.chat.debug.exportPromptLogsAsJson","when":"false"},{"command":"github.copilot.chat.debug.exportAllPromptLogsAsJson","when":"false"},{"command":"github.copilot.chat.mcp.setup.check","when":"false"},{"command":"github.copilot.chat.mcp.setup.validatePackage","when":"false"},{"command":"github.copilot.chat.mcp.setup.flow","when":"false"}],"view/title":[{"submenu":"github.copilot.chat.debug.filter","when":"view == copilot-chat","group":"navigation"},{"command":"github.copilot.chat.debug.exportAllPromptLogsAsJson","when":"view == copilot-chat","group":"export@1"},{"command":"github.copilot.debug.showChatLogView","when":"view == workbench.panel.chat.view.copilot","group":"3_show"}],"view/item/context":[{"command":"github.copilot.chat.debug.exportLogItem","when":"view == copilot-chat && (viewItem == toolcall || viewItem == request)","group":"export@1"},{"command":"github.copilot.chat.debug.exportPromptArchive","when":"view == copilot-chat && viewItem == chatprompt","group":"export@2"},{"command":"github.copilot.chat.debug.exportPromptLogsAsJson","when":"view == copilot-chat && viewItem == chatprompt","group":"export@3"}],"searchPanel/aiResults/commands":[{"command":"github.copilot.search.markHelpful","group":"inline@0","when":"aiResultsTitle && aiResultsRequested"},{"command":"github.copilot.search.markUnhelpful","group":"inline@1","when":"aiResultsTitle && aiResultsRequested"},{"command":"github.copilot.search.feedback","group":"inline@2","when":"aiResultsTitle && aiResultsRequested && github.copilot.debugReportFeedback"}],"comments/comment/title":[{"command":"github.copilot.chat.review.markHelpful","group":"inline@0","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.markUnhelpful","group":"inline@1","when":"commentController == github-copilot-review"}],"commentsView/commentThread/context":[{"command":"github.copilot.chat.review.apply","group":"context@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discard","group":"context@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discardAll","group":"context@3","when":"commentController == github-copilot-review"}],"comments/commentThread/additionalActions":[{"submenu":"copilot/reviewComment/additionalActions/applyAndNext","group":"inline@1","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments > 1"},{"command":"github.copilot.chat.review.apply","group":"inline@1","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments == 1"},{"submenu":"copilot/reviewComment/additionalActions/discardAndNext","group":"inline@2","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments > 1"},{"submenu":"copilot/reviewComment/additionalActions/discard","group":"inline@2","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments == 1"}],"copilot/reviewComment/additionalActions/applyAndNext":[{"command":"github.copilot.chat.review.applyAndNext","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.apply","group":"inline@2","when":"commentController == github-copilot-review"}],"copilot/reviewComment/additionalActions/discardAndNext":[{"command":"github.copilot.chat.review.discardAndNext","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discard","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInInlineChat","group":"inline@3","when":"commentController == github-copilot-review"}],"copilot/reviewComment/additionalActions/discard":[{"command":"github.copilot.chat.review.discard","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInInlineChat","group":"inline@3","when":"commentController == github-copilot-review"}],"comments/commentThread/title":[{"command":"github.copilot.chat.review.previous","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.next","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInChat","group":"inline@3","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discardAll","group":"inline@4","when":"commentController == github-copilot-review"}],"scm/title":[{"command":"github.copilot.chat.review.changes","group":"navigation","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmProviderRootUri in github.copilot.chat.reviewDiff.enabledRootUris"}],"scm/resourceGroup/context":[{"command":"github.copilot.chat.review.stagedChanges","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmResourceGroup == index","group":"inline@-3"},{"command":"github.copilot.chat.review.unstagedChanges","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmResourceGroup == workingTree","group":"inline@-3"}],"scm/resourceState/context":[{"command":"github.copilot.chat.review.stagedFileChange","group":"3_copilot","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmResourceGroup == index"},{"command":"github.copilot.chat.review.unstagedFileChange","group":"3_copilot","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmResourceGroup == workingTree"}],"scm/inputBox":[{"command":"github.copilot.git.generateCommitMessage","when":"scmProvider == git"}],"testing/message/context":[{"command":"github.copilot.tests.fixTestFailure","when":"testing.testItemHasUri","group":"inline@1"}],"debug/createConfiguration":[{"command":"github.copilot.debug.generateConfiguration","group":"z_commands","when":"config.github.copilot.chat.startDebugging.enabled"}],"issue/reporter":[{"command":"github.copilot.report"}],"github.copilot.chat.debug.filter":[{"command":"github.copilot.chat.debug.showElements","when":"github.copilot.chat.debug.elementsHidden","group":"commands@0"},{"command":"github.copilot.chat.debug.hideElements","when":"!github.copilot.chat.debug.elementsHidden","group":"commands@0"},{"command":"github.copilot.chat.debug.showTools","when":"github.copilot.chat.debug.toolsHidden","group":"commands@1"},{"command":"github.copilot.chat.debug.hideTools","when":"!github.copilot.chat.debug.toolsHidden","group":"commands@1"},{"command":"github.copilot.chat.debug.showNesRequests","when":"github.copilot.chat.debug.nesRequestsHidden","group":"commands@2"},{"command":"github.copilot.chat.debug.hideNesRequests","when":"!github.copilot.chat.debug.nesRequestsHidden","group":"commands@2"}],"notebook/toolbar":[{"command":"github.copilot.chat.notebook.enableFollowCellExecution","when":"config.github.copilot.chat.notebook.followCellExecution.enabled && !github.copilot.notebookFollowInSessionEnabled && github.copilot.notebookAgentModeUsage && config.notebook.globalToolbar","group":"navigation/execute@15"},{"command":"github.copilot.chat.notebook.disableFollowCellExecution","when":"config.github.copilot.chat.notebook.followCellExecution.enabled && github.copilot.notebookFollowInSessionEnabled && github.copilot.notebookAgentModeUsage && config.notebook.globalToolbar","group":"navigation/execute@15"}]},"icons":{"copilot-logo":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0041"}},"copilot-warning":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0042"}},"copilot-notconnected":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0043"}}},"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}],"terminalQuickFixes":[{"id":"copilot-chat.fixWithCopilot","commandLineMatcher":".+","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0},"kind":"explain"},{"id":"copilot-chat.generateCommitMessage","commandLineMatcher":"git add .+","commandExitResult":"success","kind":"explain","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0}},{"id":"copilot-chat.terminalToDebugging","commandLineMatcher":".+","kind":"explain","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":"","offset":0}},{"id":"copilot-chat.terminalToDebuggingSuccess","commandLineMatcher":".+","kind":"explain","commandExitResult":"success","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":"","offset":0}}],"languages":[{"id":"ignore","filenamePatterns":[".copilotignore"],"aliases":[]},{"id":"markdown","extensions":[".copilotmd"]},{"id":"chatReplay","aliases":["chatReplay","Chat Replay"],"extensions":[".chatReplay.json",".chatreplay.json"]}],"views":{"copilot-chat":[{"id":"copilot-chat","name":"Copilot Chat Debug","icon":"assets/debug-icon.svg","when":"github.copilot.chat.showLogView"}],"context-inspector":[{"id":"context-inspector","name":"Language Context Inspector","icon":"$(inspect)","when":"github.copilot.chat.showContextInspectorView"}]},"viewsContainers":{"activitybar":[{"id":"copilot-chat","title":"Copilot Chat Debug","icon":"assets/debug-icon.svg"},{"id":"context-inspector","title":"Language Context Inspector","icon":"$(inspect)"}]},"configurationDefaults":{"workbench.editorAssociations":{"*.copilotmd":"vscode.markdown.preview.editor"}},"keybindings":[{"command":"github.copilot.chat.rerunWithCopilotDebug","key":"ctrl+alt+.","mac":"cmd+alt+.","when":"github.copilot-chat.activated && terminalShellIntegrationEnabled && terminalFocus && !terminalAltBufferActive"}],"walkthroughs":[{"id":"copilotWelcome","title":"GitHub Copilot","description":"Your AI pair programmer to write code faster and smarter","when":"!isWeb","steps":[{"id":"copilot.setup.signIn","title":"Sign in to use Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.\n\n[Use Copilot for Free](command:workbench.action.chat.triggerSetupForceSignIn)","when":"chatEntitlementSignedOut && !view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.setup.signInNoAction","title":"Sign in to use Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.","when":"chatEntitlementSignedOut && view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.setup.signUp","title":"Get started with Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.\n\n[Use Copilot for Free](command:workbench.action.chat.triggerSetupForceSignIn)","when":"chatPlanCanSignUp && !view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && (github.copilot.interactiveSession.individual.disabled || github.copilot.interactiveSession.individual.expired) && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.setup.signUpNoAction","title":"Get started with Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.","when":"chatPlanCanSignUp && view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && (github.copilot.interactiveSession.individual.disabled || github.copilot.interactiveSession.individual.expired) && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.panelChat","title":"Chat about your code","description":"Ask Copilot programming questions or get help with your code using **@workspace**.\n Type **@** to see all available chat participants that you can chat with directly, each with their own expertise.\n[Chat with Copilot](command:workbench.action.chat.open?%7B%22mode%22%3A%22ask%22%7D)","when":"!chatEntitlementSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.edits","title":"Make changes using natural language","description":"Use **Copilot Edits** to select files you want to work with and describe changes you want to make. Copilot applies them directly to your files.\n[Edit with Copilot](command:workbench.action.chat.open?%7B%22mode%22%3A%22edit%22%7D)","when":"!chatEntitlementSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits-hclight.mp4"},"altText":"The video shows the user dragging and dropping files into the Copilot Edits input box located in the secondary sidebar. Copilot then updates the file according to the user’s request"}},{"id":"copilot.firstSuggest","title":"AI-suggested code completions","description":"As you type in the editor, Copilot suggests code to help you complete what you started.","when":"!chatEntitlementSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text-hclight.mp4"},"altText":"The video shows different Copilot completions, where Copilot suggests code to help the user complete their code"}},{"id":"copilot.inlineChatNotMac","title":"Use natural language in your files","description":"Sometimes, it's easier to describe the code you want to write directly within a file.\nPlace your cursor or make a selection and use **``Ctrl+I``** to open **Inline Chat**.","when":"!isMac && (!chatEntitlementSignedOut || chatIsEnabled )","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hclight.mp4"},"altText":"Inline Chat view in the editor. The video shows the user invoking the inline chat widget and asking Copilot to make a change in the file using natural language. Copilot then makes the requested change"}},{"id":"copilot.inlineChatMac","title":"Use natural language in your files","description":"Sometimes, it's easier to describe the code you want to write directly within a file.\nPlace your cursor or make a selection and use **``Cmd+I``** to open **Inline Chat**.","when":"isMac && (!chatEntitlementSignedOut || chatIsEnabled )","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hclight.mp4"},"altText":"The video shows the user invoking the inline chat widget and asking Copilot to make a change in the file using natural language. Copilot then makes the requested change"}},{"id":"copilot.sparkle","title":"Look out for smart actions","description":"Copilot enhances your coding experience with AI-powered smart actions throughout the VS Code interface.\nLook for $(sparkle) icons, such as in the [Source Control view](command:workbench.view.scm), where Copilot generates commit messages and PR descriptions based on code changes.\n\n[Discover Tips and Tricks](https://code.visualstudio.com/docs/copilot/copilot-vscode-features)","when":"!chatEntitlementSignedOut || chatIsEnabled","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit-hclight.mp4"},"altText":"The video shows the sparkle icon in the source control input box being clicked, triggering GitHub Copilot to generate a commit message automatically"}}]}],"jsonValidation":[{"fileMatch":"settings.json","url":"ccsettings://root/schema.json"}],"typescriptServerPlugins":[{"name":"@vscode/copilot-typescript-server-plugin","enableForWorkspaceTypeScriptVersions":true}],"chatSessions":[{"type":"claude-code","name":"claude","displayName":"Claude Code","description":"The Claude Code agent","when":"config.github.copilot.chat.advanced.claudeCode.enabled","capabilities":{"supportsFileAttachments":true,"supportsToolAttachments":false}}],"debuggers":[{"type":"vscode-chat-replay","label":"vscode-chat-replay","languages":["chatReplay"],"configurationAttributes":{"launch":{"properties":{"program":{"type":"string","description":"Chat replay file to debug (parse for headers)","default":"${file}"},"stopOnEntry":{"type":"boolean","default":true,"description":"Break immediately to step through manually."}},"required":["program"]}},"initialConfigurations":[{"type":"vscode-chat-replay","request":"launch","name":"Debug Chat Replay","program":"${file}","stopOnEntry":true}]}]},"extensionPack":["GitHub.copilot"],"prettier":{"useTabs":true,"tabWidth":4,"singleQuote":true},"overrides":{"@aminya/node-gyp-build":"npm:node-gyp-build@4.8.1","string_decoder":"npm:string_decoder@1.2.0","node-gyp":"npm:node-gyp@10.3.1"},"isPreRelease":false},"location":{"$mid":1,"path":"/home/bryan/.vscode-oss/extensions/github.copilot-chat-0.31.5-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"GitHub","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1760316937553,"pinned":false,"source":"gallery","id":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"universal","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":35718003},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"theqtcompany.qt-qml","uuid":"daf7e7bd-fe35-4124-ac63-bd9a91d0c62c"},"manifest":{"name":"qt-qml","displayName":"Qt Qml","description":"Qt Qml Support","version":"1.8.0","homepage":"https://www.qt.io/","icon":"res/icons/qt.png","publisher":"theqtcompany","repository":{"type":"git","url":"https://github.com/qt-labs/vscodeext"},"bugs":{"url":"https://bugreports.qt.io/projects/VSCODEEXT"},"engines":{"vscode":"^1.94.0"},"categories":["Programming Languages","Formatters","Snippets"],"keywords":["Qt","Qml"],"qna":"marketplace","pricing":"Free","activationEvents":["workspaceContains:*.qml","workspaceContains:*.qmldir"],"main":"./out/extension.js","l10n":"./l10n","contributes":{"commands":[{"command":"qt-qml.restartQmlls","title":"Restart QML language server","category":"Qt"},{"command":"qt-qml.checkQmllsUpdate","title":"Check for QML language server update","category":"Qt"},{"command":"qt-qml.downloadQmlls","title":"Download the most recent QML language server","category":"Qt"}],"languages":[{"id":"qml","configuration":"./res/lang/qml/language-configuration.json","extensions":[".qml",".qmlproject"],"aliases":["QML","Qml","qml"],"icon":{"light":"res/icons/qml-light.svg","dark":"res/icons/qml-dark.svg"}},{"id":"qmldir","configuration":"./res/lang/qmldir/language-configuration.json","filenames":["qmldir"],"aliases":["QMLDir","qmldir"]}],"grammars":[{"language":"qml","scopeName":"source.qml","path":"./res/lang/qml/qml.qmlproject.tmLanguage.json"},{"language":"qmldir","scopeName":"source.qmldir","path":"./res/lang/qmldir/qmldir.tmLanguage.json"}],"configuration":{"type":"object","title":"Qt Qml Configuration","properties":{"qt-qml.qmlls.enabled":{"type":"boolean","default":true,"description":"Run QML Language Server when activating an extension","scope":"machine-overridable"},"qt-qml.qmlls.verboseOutput":{"type":"boolean","default":false,"description":"Run QML Language Server with --verbose option","scope":"machine-overridable"},"qt-qml.qmlls.traceLsp":{"type":"string","default":"off","enum":["off","messages","compact","verbose"],"enumDescriptions":["Off","Show messages only","Show messages with parameters as compact JSON","Show messages with parameters as multiline JSON"],"description":"Handle LSP trace","scope":"machine-overridable"},"qt-qml.qmlls.customExePath":{"type":"string","default":"","description":"Specify the custom QML Language Server executable path","scope":"machine-overridable"},"qt-qml.qmlls.customArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Use custom QML Language Server arguments instead of the default ones","scope":"machine-overridable"},"qt-qml.qmlls.customDocsPath":{"type":"string","default":"","description":"Specify the documentation path for QML Language Server","scope":"machine-overridable"},"qt-qml.qmlls.additionalImportPaths":{"type":"array","items":{"type":"string"},"default":[],"description":"Look for QML modules in the specified directories. Each entry will be added via the \"-I\" command argument when starting QML Language Server","scope":"machine-overridable"},"qt-qml.qmlls.useQmlImportPathEnvVar":{"type":"boolean","default":false,"description":"Use the QML_IMPORT_PATH environment variable to look for QML Modules. When set to true, the \"-E\" command argument will be added when starting QML Language Server","scope":"machine-overridable"},"qt-qml.qmlls.useNoCMakeCalls":{"type":"boolean","default":false,"description":"Use --no-cmake-calls option when starting QML Language Server","scope":"machine-overridable"},"qt-qml.doNotAskForQmllsDownload":{"type":"boolean","default":false,"description":"Do not ask for downloading QML Language Server","scope":"machine"}}},"breakpoints":[{"language":"qml"}],"debuggers":[{"type":"qml","label":"QML debugger","runtime":"node","configurationAttributes":{"attach":{"required":["host","port"],"properties":{"host":{"type":"string","description":"Hostname (or IP address) of the target program's debug service","default":"localhost"},"port":{"type":["number","string"],"description":"Port of the target program's debug service"},"buildDirs":{"type":"array","description":"List of build directories to include in the debugger. This variable is useful when the build directory is not in the workspace.","items":{"type":"string"}}}},"launch":{"required":["program"],"properties":{"program":{"type":"string","description":"Path to the program to be debugged"},"debuggerArgs":{"type":"string","description":"Command line arguments passed to the program"},"args":{"type":"array","description":"Additional command line arguments passed to the program","items":{"type":"string"}},"buildDirs":{"type":"array","description":"List of build directories to include in the debugger. This variable is useful when the build directory is not in the workspace.","items":{"type":"string"}}}}},"initialConfigurations":[{"type":"qml","request":"attach","name":"Attach to QML debugger","host":"localhost","port":"^\"Custom port or \\${command:qt-qml.debugPort} for compound usage\""}],"configurationSnippets":[{"label":"Qt: QML: Launch","description":"Launch a QML application with the QML debugger","body":{"name":"Qt: QML: Launch","type":"qml","request":"launch","program":"^\"\\${command:cmake.launchTargetPath}\""}},{"label":"Qt: QML: Attach by port","description":"Attach to a running QML application with the QML debugger","body":{"name":"Qt: QML: Attach by port","type":"qml","request":"attach","host":"localhost","port":"^\"Custom port or \\${command:qt-qml.debugPort} for compound usage\""}},{"label":"Qt: Debug with cppdbg and QML debugger","description":"Launch a QML application with C++ debugger and attach with QML debugger","body":{"name":"Qt: Debug with cppdbg and QML debugger","type":"cppdbg","request":"launch","program":"^\"\\${command:cmake.launchTargetPath}\"","stopAtEntry":false,"cwd":"^\"\\${workspaceFolder}\"","visualizerFile":"^\"\\${command:qt-cpp.natvis}\"","showDisplayString":true,"args":["^\"-qmljsdebugger=host:localhost,port:\\${command:qt-qml.debugPort},block,services:DebugMessages,QmlDebugger,V8Debugger\""],"linux":{"MIMode":"gdb","miDebuggerPath":"/usr/bin/gdb"},"osx":{"MIMode":"lldb"},"windows":{"environment":[{"name":"PATH","value":"^\"\\${env:PATH};\\${command:qt-cpp.qtDir}\""},{"name":"QT_QPA_PLATFORM_PLUGIN_PATH","value":"^\"\\${command:qt-cpp.QT_QPA_PLATFORM_PLUGIN_PATH}\""},{"name":"QML_IMPORT_PATH","value":"^\"\\${command:qt-cpp.QML_IMPORT_PATH}\""}],"MIMode":"gdb","miDebuggerPath":"^\"\\${command:qt-cpp.minGWgdb}\""}}},{"label":"Qt: Debug with cppdbg and QML debugger (Windows)","description":"Launch a QML application with Visual Studio Debugger and attach with QML debugger","body":{"name":"Qt: Debug with cppdbg and QML debugger (Windows)","type":"cppvsdbg","request":"launch","program":"^\"\\${command:cmake.launchTargetPath}\"","stopAtEntry":false,"cwd":"^\"\\${workspaceFolder}\"","visualizerFile":"^\"\\${command:qt-cpp.natvis}\"","args":["^\"-qmljsdebugger=host:localhost,port:\\${command:qt-qml.debugPort},block,services:DebugMessages,QmlDebugger,V8Debugger\""],"windows":{"environment":[{"name":"PATH","value":"^\"\\${env:PATH};\\${command:qt-cpp.qtDir}\""},{"name":"QT_QPA_PLATFORM_PLUGIN_PATH","value":"^\"\\${command:qt-cpp.QT_QPA_PLATFORM_PLUGIN_PATH}\""},{"name":"QML_IMPORT_PATH","value":"^\"\\${command:qt-cpp.QML_IMPORT_PATH}\""}]}}}]}]},"taskDefinitions":[{"type":"Qt"}],"extensionDependencies":["theqtcompany.qt-core"],"scripts":{"vscode:prepublish":"cross-env NODE_ENV=production node ./esbuild.mjs && git rev-parse HEAD > commit","compile":"node ./esbuild.mjs","watch":"node ./esbuild.mjs --watch","pretest":"npm run compile && npm run lint","lint":"npm run prettierWrite && eslint . --fix --cache","prettierWrite":"npm run prettierBase -- --write \"**/*.{js,ts,json,mjs,cjs}\" --log-level silent","prettierCheck":"npm run prettierBase -- --check \"**/*.{js,ts,json,mjs,cjs}\"","prettierBase":"prettier --config \"../common/.prettierrc\" --ignore-path \"../common/.prettierignore\" --cache --cache-strategy metadata","package":"vsce package --out out"},"devDependencies":{"@eslint/eslintrc":"^3.3.0","@eslint/js":"^9.21.0","@types/license-checker":"^25.0.6","@types/node":"^20.17.0","@types/vscode":"^1.94.0","@types/yauzl":"^2.10.3","@typescript-eslint/eslint-plugin":"^6.21.0","@typescript-eslint/parser":"^6.21.0","@vscode/l10n-dev":"^0.0.30","@vscode/test-electron":"^2.4.1","@vscode/vsce":"^2.32.0","chai":"^4.5.0","commander":"^11.1.0","cross-env":"^7.0.3","esbuild":"^0.25.0","eslint":"^8.57.1","license-checker":"^25.0.1","mocha":"^10.7.3","prettier":"^3.3.3","ts-node":"^10.9.2","typescript":"^5.6.3"},"dependencies":{"@vscode/debugadapter":"^1.68.0","@vscode/debugprotocol":"^1.68.0","@vscode/l10n":"^0.0.16","async-mutex":"^0.5.0","fast-xml-parser":"^5.0.8","get-port":"^7.1.0","module-alias":"^2.2.3","promise-socket":"^8.0.0","qt-lib":"file:../qt-lib","typescript":"^5.6.3","untildify":"^5.0.0","vscode-languageclient":"^9.0.1","yauzl":"^3.1.3"}},"location":{"$mid":1,"path":"/home/bryan/.vscode-oss/extensions/theqtcompany.qt-qml-1.8.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Qt Group","metadata":{"installedTimestamp":1760453815080,"pinned":false,"source":"gallery","id":"daf7e7bd-fe35-4124-ac63-bd9a91d0c62c","publisherId":"d1f6f684-75e9-4507-98db-fb3f1c2f8718","publisherDisplayName":"Qt Group","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1183778},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"theqtcompany.qt-core","uuid":"f5bc3648-b606-4bc2-a662-cfe2f0bda54d"},"manifest":{"name":"qt-core","displayName":"Qt Core","description":"Qt Core","version":"1.8.0","homepage":"https://www.qt.io/","icon":"res/icons/qt.png","publisher":"theqtcompany","repository":{"type":"git","url":"https://github.com/qt-labs/vscodeext"},"bugs":{"url":"https://bugreports.qt.io/projects/VSCODEEXT"},"engines":{"vscode":"^1.94.0"},"categories":["Programming Languages"],"keywords":["Qt","C++","CMake","Qml","Qrc","Qss","Qdoc"],"qna":"marketplace","pricing":"Free","main":"./out/extension.js","contributes":{"commands":[{"command":"qt-core.documentationHomepage","title":"Documentation: Open Homepage","category":"Qt"},{"command":"qt-core.documentationSearchManually","title":"Documentation: Search","category":"Qt"},{"command":"qt-core.documentationSearchForCurrentWord","title":"Documentation: Search for the current word","category":"Qt"},{"command":"qt-core.openSettings","title":"Open Qt Settings","category":"Qt"},{"command":"qt-core.setRecommendedSettings","title":"Set the recommended Qt Extension settings","category":"Qt"},{"command":"qt-core.registerQt","title":"Register Qt Installation","category":"Qt"},{"command":"qt-core.reset","title":"Reset Qt Tools Extension State (For troubleshooting)","category":"Qt"},{"command":"qt-core.registerQtByQtpaths","title":"Register Qt (by qtpaths or qmake)","category":"Qt"},{"command":"qt-core.createNewItem","title":"Create a new project or file","category":"Qt"}],"languages":[{"id":"qrc","configuration":"./res/lang/qrc/language-configuration.json","extensions":[".qrc",".qrc.cmakein"],"aliases":["Qrc"],"icon":{"light":"res/icons/qrc-light.svg","dark":"res/icons/qrc-dark.svg"}},{"id":"qss","configuration":"./res/lang/qss/language-configuration.json","extensions":[".qss"],"aliases":["QSS","Qss"],"icon":{"light":"res/icons/qss-light.svg","dark":"res/icons/qss-dark.svg"}},{"id":"qdoc","configuration":"./res/lang/qdoc/language-configuration.json","extensions":[".qdoc",".qdocconf",".qdocinc"],"aliases":["Qdoc","QDoc","qdoc"],"icon":{"light":"res/icons/qdoc-light.svg","dark":"res/icons/qdoc-dark.svg"}}],"grammars":[{"language":"qdoc","scopeName":"source.qdoc","path":"./res/lang/qdoc/qdoc.tmLanguage.json"},{"language":"qrc","scopeName":"source.qrc","path":"./res/lang/qrc/qrc.tmLanguage.json"},{"language":"qss","scopeName":"source.qss","path":"./res/lang/qss/qss.tmLanguage.json"}],"configuration":{"type":"object","title":"Qt Core Configuration","properties":{"qt-core.qtInstallationRoot":{"type":"string","default":"","description":"Specify the Qt Installation Root","scope":"machine-overridable"},"qt-core.doNotAskForDefaultQtInstallationRoot":{"type":"boolean","default":false,"description":"Do not ask for default Qt Installation Root","scope":"machine"},"qt-core.doNotAskForVCPKG":{"type":"boolean","default":false,"description":"Do not ask for vcpkg","scope":"machine"},"qt-core.additionalQtPaths":{"type":"array","items":{"type":["string","object"]},"default":[],"description":"Specify additional Qt installations as paths to the qtpaths or qmake executable","scope":"machine-overridable"},"qt-core.openOnlineDocumentationInExternalBrowser":{"type":"boolean","default":false,"description":"Open online documentation in external browser","scope":"machine-overridable"},"qt-core.defaultProjectDirectory":{"type":"string","default":"","description":"Specify the default project directory when creating new projects","scope":"machine-overridable"}}}},"scripts":{"vscode:prepublish":"cross-env NODE_ENV=production npm run compile && git rev-parse HEAD > commit","compile":"npm run build:webview && node ./esbuild.mjs","watch":"node ./esbuild.mjs --watch","pretest":"npm run compile && npm run lint","lint":"npm run prettierWrite && eslint . --fix --cache","prettierWrite":"npm run prettierBase -- --write \"**/*.{js,ts,json,mjs,cjs}\" --log-level silent","prettierCheck":"npm run prettierBase -- --check \"**/*.{js,ts,json,mjs,cjs}\"","prettierBase":"prettier --config \"../common/.prettierrc\" --ignore-path \"../common/.prettierignore\" --cache --cache-strategy metadata","package":"vsce package --out out","ci:all":"npm run ci:webview && npm ci","install:all":"npm run install:webview && npm install","ci:webview":"cd webview-ui && npm ci","build:webview":"cd webview-ui && npm run build","install:webview":"cd webview-ui && npm install"},"devDependencies":{"@eslint/eslintrc":"^3.3.0","@eslint/js":"^9.21.0","@types/command-exists":"^1.2.3","@types/lodash":"^4.17.12","@types/node":"^20.17.0","@types/vscode":"^1.94.0","@types/which":"^3.0.4","@typescript-eslint/eslint-plugin":"^6.21.0","@typescript-eslint/parser":"^6.21.0","@vscode/vsce":"^2.32.0","cross-env":"^7.0.3","esbuild":"^0.25.0","eslint":"^8.57.1","prettier":"^3.3.3","ts-node":"^10.9.2","typescript":"^5.6.3"},"dependencies":{"axios":"^1.9.0","command-exists":"^1.2.9","dotenv":"^16.5.0","lodash":"^4.17.21","module-alias":"^2.2.3","qt-lib":"file:../qt-lib","typescript":"^5.6.3","untildify":"^5.0.0","which":"^5.0.0"}},"location":{"$mid":1,"path":"/home/bryan/.vscode-oss/extensions/theqtcompany.qt-core-1.8.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Qt Group","metadata":{"installedTimestamp":1760453815081,"pinned":false,"source":"gallery","id":"f5bc3648-b606-4bc2-a662-cfe2f0bda54d","publisherId":"d1f6f684-75e9-4507-98db-fb3f1c2f8718","publisherDisplayName":"Qt Group","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":57412885},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"vadimcn.vscode-lldb","uuid":"bee31e34-a44b-4a76-9ec2-e9fd1439a0f6"},"manifest":{"name":"vscode-lldb","displayName":"CodeLLDB","version":"1.11.8","publisher":"vadimcn","description":"A native debugger powered by LLDB.  Debug C++, Rust and other compiled languages.","license":"MIT","author":{"name":"vadimcn"},"icon":"images/lldb.png","categories":["Debuggers"],"keywords":["C++","Rust","Reverse","Embedded","Debugger"],"private":true,"repository":{"type":"git","url":"https://github.com/vadimcn/codelldb.git"},"bugs":{"url":"https://github.com/vadimcn/codelldb/issues"},"qna":"https://github.com/vadimcn/codelldb/discussions","engines":{"vscode":"^1.61.0"},"dependencies":{"jsonc-parser":"^3.3.1","string-argv":"^0.3.2","yaml":"^1.10.0"},"devDependencies":{"@types/vscode":"^1.60.0","@types/node":"^18.0.0","@types/mocha":"^10.0.0","@vscode/debugprotocol":"^1.53.0","@vscode/debugadapter-testsupport":"^1.51.0","@vscode/test-cli":"^0.0.11","@vscode/test-electron":"^2.5.2","@vscode/vsce":"^3.6.0","typescript":"^4.7.0","mocha":"^10.8.1","source-map-support":"^0.5.12","mocha-suppress-logs":"^0.3.1","webpack":"^5.37.1","webpack-cli":"^4.7.0","ts-loader":"^8.0.0","json-schema-to-typescript":"^15.0.4","json-schema-merge-allof":"^0.8.1","@apidevtools/json-schema-ref-parser":"^13.0.1"},"scripts":{"json2ts":"json2ts","vsce":"vsce","mocha":"mocha","tsc":"tsc","vscode-test":"vscode-test","webpack":"webpack"},"main":"extension.js","activationEvents":["onDebug","onUri","onStartupFinished"],"contributes":{"commands":[{"category":"LLDB","title":"Display Format...","command":"lldb.displayFormat"},{"category":"LLDB","title":"Show Disassembly...","command":"lldb.showDisassembly"},{"category":"LLDB","title":"Toggle Disassembly","command":"lldb.toggleDisassembly"},{"category":"LLDB","title":"Toggle Pointee Summaries","command":"lldb.toggleDerefPointers"},{"category":"LLDB","title":"Toggle Debug Console Mode","command":"lldb.toggleConsoleMode"},{"category":"LLDB","title":"Run Diagnostics","command":"lldb.diagnose"},{"category":"LLDB","title":"Generate Cargo Launch Configurations","command":"lldb.getCargoLaunchConfigs","enablement":"resourceFilename == 'Cargo.toml' && resourceScheme == file"},{"category":"LLDB","title":"Display Options...","command":"lldb.changeDisplaySettings"},{"category":"LLDB","title":"Copy Value","command":"lldb.modules.copyValue"},{"category":"LLDB","title":"Use Alternate Backend...","command":"lldb.alternateBackend"},{"category":"LLDB","title":"Attach to Process...","command":"lldb.attach"},{"category":"LLDB","title":"Command Prompt","command":"lldb.commandPrompt"},{"category":"LLDB","title":"Search Symbols...","command":"lldb.symbols","enablement":"debugType == 'lldb'"},{"category":"LLDB","title":"View Memory...","command":"lldb.viewMemory","enablement":"debugType == 'lldb'"},{"category":"LLDB","title":"Exclude Caller","command":"lldb.excludedCallers.add","enablement":"debugType == 'lldb' && focusedView == 'workbench.debug.callStackView'"},{"category":"LLDB","title":"Remove Caller Exclusion","command":"lldb.excludedCallers.remove","icon":"$(close)"},{"category":"LLDB","title":"Remove All Caller Exclusions","command":"lldb.excludedCallers.removeAll","icon":"$(clear-all)"}],"languages":[{"id":"lldb.disassembly","aliases":["Disassembly"],"extensions":[".disasm"]}],"grammars":[{"language":"lldb.disassembly","scopeName":"source.disassembly","path":"./syntaxes/disassembly.json"}],"views":{"debug":[{"id":"lldb.loadedModules","name":"Modules","when":"debugType == 'lldb'"},{"id":"lldb.excludedCallers","name":"Excluded Callers","when":"debugType == 'lldb'"}]},"menus":{"commandPalette":[{"command":"lldb.modules.copyValue","when":"viewItem == lldb.moduleProperty"}],"debug/callstack/context":[{"command":"lldb.excludedCallers.add","when":"debugType == 'lldb'"}],"view/title":[{"command":"lldb.excludedCallers.removeAll","when":"view == 'lldb.excludedCallers'","group":"navigation"}],"view/item/context":[{"command":"lldb.modules.copyValue","when":"viewItem == lldb.moduleProperty"},{"command":"lldb.excludedCallers.remove","when":"view == 'lldb.excludedCallers'","group":"inline"}],"explorer/context":[{"command":"lldb.getCargoLaunchConfigs","when":"resourceFilename == 'Cargo.toml'"}]},"problemMatchers":[{"name":"codelldb-rustc","owner":"rustc","source":"CodeLLDB","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":[{"regexp":"^(warning|warn|error)(?:\\[(.*?)\\])?: (.*)$","severity":1,"code":2,"message":3},{"regexp":"^[\\s->=]*(.*?):([1-9]\\d*):([1-9]\\d*)\\s*$","file":1,"line":2,"column":3}]}],"configuration":[{"title":"General","properties":{"lldb.consoleMode":{"description":"Controls whether the debug console input is by default treated as debugger commands or as expressions to evaluate.","type":"string","enum":["commands","evaluate","split"],"default":"commands","enumDescriptions":["Treat debug console input as debugger commands.  In order to evaluate an expression, prefix it with '?' (question mark).","Treat debug console input as expressions.  In order to execute a debugger command, prefix it with '`' (backtick).","(experimental) Use the debug console for warningevaluation of expressions, open a separate terminal for input of LLDB commands."],"scope":"resource","order":1},"lldb.evaluationTimeout":{"description":"Timeout for expression evaluation, in seconds.","type":"number","default":5,"scope":"resource","order":2},"lldb.displayFormat":{"description":"Default format for displayed variable values.","type":"string","enum":["auto","hex","decimal","binary"],"default":"auto","scope":"resource","order":3},"lldb.dereferencePointers":{"description":"Whether to show summaries of the pointees instead of numeric values of the pointers themselves.","type":"boolean","default":true,"scope":"resource","order":4},"lldb.showDisassembly":{"description":"When to show disassembly.","type":"string","enum":["auto","never","always"],"default":"auto","enumDescriptions":["Only when source is not available.","Never show.","Always show, even if source is available."],"scope":"resource","order":5},"lldb.suppressMissingSourceFiles":{"description":"Suppress VSCode's messages about missing source files (when debug info refers to files not available on the local machine).","type":"boolean","default":true,"scope":"resource","order":10},"lldb.dbgconfig":{"description":"Common user-defined settings that can be inserted into launch configurations using ${dbgconfig:name} syntax.","type":"object","patternProperties":{".*":{"type":["string","number","array","boolean","null"]}},"default":{},"scope":"resource","order":100},"lldb.script":{"description":"Settings for scripts running within the debugger context. These may be accessed via `debugger.get_config()`. The schema is free-form, except that the `lang` subtree is reserved for built-in language support helpers.","type":"object","default":{},"scope":"resource","order":100}}},{"title":"Launch configuration defaults","properties":{"lldb.launch.initCommands":{"markdownDescription":"Commands executed *before* initCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":1},"lldb.launch.preRunCommands":{"markdownDescription":"Commands executed *before* preRunCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":2},"lldb.launch.postRunCommands":{"markdownDescription":"Commands executed *before* postRunCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":3},"lldb.launch.preTerminateCommands":{"markdownDescription":"Commands executed *after* preTerminateCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":4},"lldb.launch.exitCommands":{"markdownDescription":"Commands executed *after* exitCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":4},"lldb.launch.env":{"description":"Additional environment variables merged with 'env' individual launch configurations.","type":"object","patternProperties":{".*":{"type":"string"}},"scope":"resource","order":10},"lldb.launch.envFile":{"type":"string","order":10},"lldb.launch.cwd":{"description":"Default program working directory.","type":"string","scope":"resource","order":10},"lldb.launch.terminal":{"description":"Default terminal type.","type":"string","enum":["integrated","external","console"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."],"scope":"resource","order":10},"lldb.launch.stdio":{"description":"Default destination for stdio streams: null = send to debugger console or a terminal, \"<path>\" = attach to a file/tty/fifo.","type":["null","string","array","object"],"scope":"resource","order":10},"lldb.launch.expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"],"scope":"resource","order":10},"lldb.launch.sourceMap":{"description":"Additional entries that will be merged with 'sourceMap's of individual launch configurations.","type":"object","patternProperties":{".*":{"type":"string"}},"scope":"resource","order":10},"lldb.launch.breakpointMode":{"scope":"resource","order":10,"type":"string","enum":["path","file"]},"lldb.launch.sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","items":{"type":"string"},"scope":"resource","order":20},"lldb.launch.relativePathBase":{"description":"Default base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string","scope":"resource","order":100},"lldb.launch.debugServer":{"description":"Debug server port.","type":["null","integer"],"defaultSnippets":[{"label":"Port 4711","body":4711}],"scope":"resource","order":999}}},{"title":"Advanced","properties":{"lldb.verboseLogging":{"description":"Turns on verbose logging.","type":"boolean","default":false,"scope":"resource","order":1},"lldb.rpcServer":{"description":"Start an RPC server that will accept debug configuration requests.","type":["object","null"],"default":null,"defaultSnippets":[{"label":"Port 12345","body":{"host":"127.0.0.1","port":12345,"token":"secret"}}],"scope":"window","order":2},"lldb.library":{"markdownDescription":"Which LLDB library to use.\n\nThis can be either a file path (recommended) or a directory, in which case platform-specific heuristics will be used to locate the actual library file.","type":"string","scope":"resource","order":10},"lldb.cargo":{"markdownDescription":"Name of the command to invoke as Cargo.","type":"string","default":"cargo","scope":"resource","order":10},"lldb.adapterEnv":{"description":"Extra environment variables for the debug adapter.","type":"object","patternProperties":{".*":{"type":"string"}},"default":{},"scope":"resource","order":10},"lldb.evaluateForHovers":{"description":"Enable value preview when cursor is hovering over a variable.","type":"boolean","default":true,"scope":"resource","order":10},"lldb.commandCompletions":{"description":"Enable command completions in debug console.","type":"boolean","default":true,"scope":"resource","order":10},"lldb.useNativePDBReader":{"description":"Use the native reader for the PDB debug info format (Windows only)","type":"boolean","scope":"resource","order":10},"lldb.suppressUpdateNotifications":{"description":"Don't show extension update notifications.","type":"boolean","scope":"application","order":100}}}],"breakpoints":[{"language":"ada"},{"language":"arm"},{"language":"arm64"},{"language":"asm"},{"language":"c"},{"language":"c3"},{"language":"cpp"},{"language":"crystal"},{"language":"d"},{"language":"fortran"},{"language":"fortran-modern"},{"language":"haskell"},{"language":"jai"},{"language":"java"},{"language":"julia"},{"language":"kotlin"},{"language":"lldb.disassembly"},{"language":"nim"},{"language":"objective-c"},{"language":"objective-cpp"},{"language":"objectpascal"},{"language":"ocaml"},{"language":"odin"},{"language":"opencl"},{"language":"pascal"},{"language":"rust"},{"language":"swift"},{"language":"zig"}],"debuggers":[{"type":"lldb","label":"CodeLLDB","languages":["ada","arm","arm64","asm","c","c3","cpp","crystal","fortran-modern","fortran","jai","nim","objective-c","objective-cpp","objectpascal","odin","pascal","rust"],"variables":{"pickProcess":"lldb.pickProcess","pickMyProcess":"lldb.pickMyProcess"},"configurationAttributes":{"launch":{"anyOf":[{"required":["program"]},{"required":["targetCreateCommands"]},{"required":["cargo"]}],"type":"object","additionalProperties":false,"properties":{"args":{"description":"Program arguments","type":["array","null"],"items":{"type":"string"}},"breakpointMode":{"description":"Specifies how source breakpoints should be set","anyOf":[{"type":"string","enum":["path","file"]},{"type":"null"}]},"console":{"description":"Terminal type to use. (This setting is a compatibility alias of 'terminal'.)","anyOf":[{"oneOf":[{"description":"Use integrated terminal in VSCode.","type":"string","const":"integratedTerminal"},{"description":"Use external terminal window.","type":"string","const":"externalTerminal"},{"description":"Use VScode Debug Console for stdout and stderr. Stdin will be unavailable.","type":"string","const":"internalConsole"}]},{"type":"null"}]},"cwd":{"description":"Program working directory","type":["string","null"]},"env":{"description":"Additional environment variables","anyOf":[{"type":"object","additionalProperties":{"type":"string"}},{"type":"null"}]},"envFile":{"description":"File to read the environment variables from","type":["string","null"]},"exitCommands":{"description":"Commands executed at the end of debugging session","type":["array","null"],"items":{"type":"string"}},"expressions":{"description":"The default evaluator type used for expressions","anyOf":[{"type":"string","enum":["simple","python","native"]},{"type":"null"}]},"initCommands":{"description":"Initialization commands executed upon debugger startup","type":["array","null"],"items":{"type":"string"}},"name":{"type":["string","null"]},"noDebug":{"type":["boolean","null"]},"postRunCommands":{"description":"Commands executed just after the program has been launched","type":["array","null"],"items":{"type":"string"}},"preRunCommands":{"description":"Commands executed just before the program is launched","type":["array","null"],"items":{"type":"string"}},"preTerminateCommands":{"description":"Commands executed just before the debuggee is terminated or disconnected from","type":["array","null"],"items":{"type":"string"}},"processCreateCommands":{"description":"Commands that create the debuggee process","type":["array","null"],"items":{"type":"string"}},"program":{"description":"Path to the program to debug","type":["string","null"]},"relativePathBase":{"description":"Base directory used for resolution of relative source paths.  Defaults to \\\"${workspaceFolder}\\\".","type":["string","null"]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":["boolean","null"]},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for","type":["array","null"],"items":{"type":"string"}},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","anyOf":[{"type":"object","additionalProperties":{"type":["string","null"]}},{"type":"null"}]},"stdio":{"description":"Destination for stdio streams: null = send to the debugger console or the terminal, \"<path>\" = attach to a file/tty/fifo","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","items":{"type":["string","null"]}}]},{"type":"null"}]},"stopOnEntry":{"description":"Automatically stop debuggee after launch","type":["boolean","null"]},"targetCreateCommands":{"description":"Commands that create the debug target","type":["array","null"],"items":{"type":"string"}},"terminal":{"description":"Terminal type to use","anyOf":[{"anyOf":[{"description":"Use integrated terminal in VSCode.","type":"string","const":"integrated"},{"description":"Use external terminal window.","type":"string","const":"external"},{"description":"Use VScode Debug Console for stdout and stderr. Stdin will be unavailable.","type":"string","const":"console"},{"description":"Use the specified TTY device","anyOf":[{"description":"TTY device name (Unix)","type":"string"},{"description":"Process ID (Windows)","type":"integer","format":"uint64","minimum":0}]}]},{"type":"null"}]},"cargo":{"description":"Cargo invocation parameters.","anyOf":[{"type":"array","items":{"type":"string"},"description":"List of cargo arguments."},{"type":"object","properties":{"args":{"description":"List of cargo arguments.","type":"array","default":[]},"env":{"description":"Additional environment variables passed to Cargo.","type":"object","default":{},"additionalProperties":{"type":"string"}},"cwd":{"description":"Cargo working directory.","type":"string"},"problemMatcher":{"description":"Problem matcher(s) to apply to Cargo output.","type":["string","array"]},"filter":{"description":"Filter applied to compilation artifacts.","type":"object","properties":{"name":{"type":"string"},"kind":{"type":"string"}}}},"required":["args"],"additionalProperties":false}]}}},"attach":{"type":"object","additionalProperties":false,"properties":{"breakpointMode":{"description":"Specifies how source breakpoints should be set","anyOf":[{"type":"string","enum":["path","file"]},{"type":"null"}]},"exitCommands":{"description":"Commands executed at the end of debugging session","type":["array","null"],"items":{"type":"string"}},"expressions":{"description":"The default evaluator type used for expressions","anyOf":[{"type":"string","enum":["simple","python","native"]},{"type":"null"}]},"initCommands":{"description":"Initialization commands executed upon debugger startup","type":["array","null"],"items":{"type":"string"}},"name":{"type":["string","null"]},"pid":{"description":"Process id to attach to","anyOf":[{"anyOf":[{"type":"integer","format":"uint64","minimum":0},{"type":"string"}]},{"type":"null"}]},"postRunCommands":{"description":"Commands executed just after the program has been launched","type":["array","null"],"items":{"type":"string"}},"preRunCommands":{"description":"Commands executed just before the program is launched","type":["array","null"],"items":{"type":"string"}},"preTerminateCommands":{"description":"Commands executed just before the debuggee is terminated or disconnected from","type":["array","null"],"items":{"type":"string"}},"processCreateCommands":{"description":"Commands that create the debuggee process","type":["array","null"],"items":{"type":"string"}},"program":{"description":"Path to the program to attach to","type":["string","null"]},"relativePathBase":{"description":"Base directory used for resolution of relative source paths.  Defaults to \\\"${workspaceFolder}\\\".","type":["string","null"]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":["boolean","null"]},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for","type":["array","null"],"items":{"type":"string"}},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","anyOf":[{"type":"object","additionalProperties":{"type":["string","null"]}},{"type":"null"}]},"stopOnEntry":{"description":"Automatically stop debuggee after attach","type":["boolean","null"]},"targetCreateCommands":{"description":"Commands that create the debug target","type":["array","null"],"items":{"type":"string"}},"waitFor":{"description":"Wait for the process to launch (MacOS only","type":["boolean","null"]}}}},"configurationSnippets":[{"label":"CodeLLDB: Launch","description":"Launch a program.","body":{"type":"lldb","request":"launch","name":"${2:Launch}","program":"^\"\\${workspaceFolder}/${1:<program>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\""}},{"label":"CodeLLDB: Attach to Process","description":"Attach to a running process by process id.","sortText":"AAAA","body":{"type":"lldb","request":"attach","name":"${2:Attach}","pid":"^\"\\${command:pickMyProcess}\" // use \\${command:pickProcess} to pick other users' processes"}},{"label":"CodeLLDB: Launch Custom","description":"Launch or attach using raw LLDB commands.","body":{"type":"lldb","request":"launch","name":"${2:Custom launch}","targetCreateCommands":["^\"target create \\${workspaceFolder}/${1:<program>}\""],"processCreateCommands":["settings set target.run-args ${3:value1 value2 value3}","process launch"]}}]}]},"config":{"platformPackages":{"url":"https://github.com/vadimcn/codelldb/releases/download/v${version}/${platformPackage}","platforms":{"linux-x64":"codelldb-linux-x64.vsix","linux-arm64":"codelldb-linux-arm64.vsix","linux-arm":"codelldb-linux-armhf.vsix","darwin-x64":"codelldb-darwin-x64.vsix","darwin-arm64":"codelldb-darwin-arm64.vsix","win32-x64":"codelldb-win32-x64.vsix","win32-ia32":"codelldb-win32-x64.vsix"}}}},"location":{"$mid":1,"path":"/home/bryan/.vscode-oss/extensions/vadimcn.vscode-lldb-1.11.8","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"vadimcn","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1761567100393,"pinned":true,"source":"vsix","id":"bee31e34-a44b-4a76-9ec2-e9fd1439a0f6","publisherDisplayName":"vadimcn","publisherId":"3b05d186-6311-4caa-99b5-09032a9d3cf5","isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":187830177},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"tamasfe.even-better-toml","uuid":"b2215d5f-675e-4a2b-b6ac-1ca737518b78"},"manifest":{"name":"even-better-toml","displayName":"Even Better TOML","description":"Fully-featured TOML support","version":"0.21.2","autoTag":{"enabled":true},"repository":{"url":"https://github.com/tamasfe/taplo"},"bugs":{"url":"https://github.com/tamasfe/taplo/issues"},"publisher":"tamasfe","author":{"name":"tamasfe"},"preview":true,"icon":"taplo-icon.png","galleryBanner":{"color":"#731c12","theme":"dark"},"license":"SEE LICENSE IN LICENSE.md","engines":{"vscode":"^1.90.0"},"categories":["Programming Languages","Linters","Formatters","Other"],"activationEvents":["onLanguage:cargoLock"],"keywords":["toml","syntax","rust","formatter","config"],"extensionKind":["workspace"],"contributes":{"grammars":[{"language":"toml","scopeName":"source.toml","path":"./toml.tmLanguage.json"},{"scopeName":"markdown.toml.frontmatter.codeblock","path":"./toml.frontmatter.tmLanguage.json","injectTo":["text.html.markdown"]},{"scopeName":"markdown.toml.codeblock","path":"./toml.markdown.tmLanguage.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.toml":"toml"}}],"languages":[{"id":"toml","aliases":["TOML"],"extensions":[".toml"],"filenames":["Cargo.lock","uv.lock"],"configuration":"./language-configuration.json"}],"menus":{"commandPalette":[{"command":"evenBetterToml.selectSchema","when":"editorLangId == toml"},{"command":"evenBetterToml.copyAsJson"},{"command":"evenBetterToml.copyAsToml"},{"command":"evenBetterToml.pasteAsJson"},{"command":"evenBetterToml.pasteAsToml"}]},"commands":[{"command":"evenBetterToml.selectSchema","title":"TOML: Select Schema"},{"command":"evenBetterToml.copyAsJson","title":"TOML: Copy as JSON","enablement":"editorHasSelection"},{"command":"evenBetterToml.copyAsToml","title":"TOML: Copy as TOML","enablement":"editorHasSelection"},{"command":"evenBetterToml.pasteAsJson","title":"TOML: Paste as JSON"},{"command":"evenBetterToml.pasteAsToml","title":"TOML: Paste as TOML"}],"semanticTokenTypes":[{"id":"tomlArrayKey","superType":"variable","description":"Keys of regular arrays."},{"id":"tomlTableKey","superType":"variable","description":"Keys of inline tables."}],"semanticTokenScopes":[{"scopes":{"tomlArrayKey":["support.type.property-name.array.toml"],"tomlTableKey":["support.type.property-name.table.toml"]}}],"configuration":{"title":"Even Better TOML","properties":{"evenBetterToml.taplo.bundled":{"description":"Use the bundled taplo language server. If set to `false`, the `taplo` executable must be found in PATH or must be set in `evenBetterToml.taplo.path`.","type":"boolean","scope":"resource","default":true},"evenBetterToml.taplo.path":{"description":"An absolute path to the `taplo` executable. `evenBetterToml.taplo.bundled` needs to be set to `false` for this to have any effect.","type":["string","null"],"scope":"resource","default":null},"evenBetterToml.taplo.environment":{"type":["object"],"scope":"resource","description":"Environment variables for Taplo.","additionalProperties":{"type":"string"},"default":{}},"evenBetterToml.taplo.extraArgs":{"type":["array","null"],"scope":"resource","description":"Additional arguments for Taplo. Has no effect for the bundled LSP.","items":{"type":"string"},"default":[]},"evenBetterToml.taplo.configFile.path":{"description":"An absolute, or workspace relative path to the Taplo configuration file.","type":"string","default":null,"scope":"resource"},"evenBetterToml.taplo.configFile.enabled":{"description":"Whether to enable the usage of a Taplo configuration file.","type":"boolean","scope":"resource","default":true},"evenBetterToml.semanticTokens":{"description":"Enable semantic tokens for inline table and array keys.","type":"boolean","scope":"resource","default":false},"evenBetterToml.schema.enabled":{"description":"Enable completion and validation based on JSON schemas.","type":"boolean","scope":"resource","default":true},"evenBetterToml.schema.links":{"description":"Whether to show clickable links for keys in the editor.","type":"boolean","scope":"resource","default":false},"evenBetterToml.schema.catalogs":{"description":"A list of URLs to schema catalogs where schemas and associations can be fetched from","type":"array","scope":"resource","items":{"type":"string"},"default":["https://www.schemastore.org/api/json/catalog.json"]},"evenBetterToml.schema.associations":{"description":"Document and schema associations.","markdownDescription":"Additional document and schema associations. \n\n The key must be a regular expression, this pattern is used to associate schemas with absolute document URIs. Overlapping patterns result in undefined behaviour and either matching schema can be used. \n\n The value must be an absolute URI to the JSON schema, for supported values and more information [read here](https://taplo.tamasfe.dev/configuration#visual-studio-code).","type":"object","scope":"resource","default":{}},"evenBetterToml.schema.cache.memoryExpiration":{"description":"The amount of seconds after which schemas will be invalidated from memory.","markdownDescription":"The amount of seconds after which schemas will be invalidated from memory. \n**NOTE**: setting too low values will cause performance issues and validation of some schemas will fail.","type":"integer","scope":"resource","minimum":0,"default":60},"evenBetterToml.schema.cache.diskExpiration":{"description":"The amount of seconds after which cached catalogs and schemas expire and will be attempted to be fetched again.","type":"integer","scope":"resource","minimum":0,"default":600},"evenBetterToml.completion.maxKeys":{"description":"The maximum amount of keys in a dotted key to display during completion, 0 effectively disables key completions.","type":"integer","scope":"resource","minimum":0,"default":5},"evenBetterToml.syntax.semanticTokens":{"description":"Whether to enable semantic tokens for tables and arrays.","type":"boolean","scope":"resource","default":true},"evenBetterToml.formatter.alignEntries":{"scope":"resource","type":"boolean","default":null,"description":"Align entries vertically. Entries that have table headers, comments, or blank lines between them are not aligned."},"evenBetterToml.formatter.alignComments":{"scope":"resource","type":"boolean","default":null,"description":"Align consecutive comments after entries and items vertically. This applies to comments that are after entries or array items"},"evenBetterToml.formatter.arrayTrailingComma":{"scope":"resource","type":"boolean","default":null,"description":"Put trailing commas for multiline arrays."},"evenBetterToml.formatter.arrayAutoExpand":{"scope":"resource","type":"boolean","default":null,"description":"Automatically expand arrays to multiple lines."},"evenBetterToml.formatter.inlineTableExpand":{"scope":"resource","type":"boolean","default":null,"description":"Expand values inside in line tables."},"evenBetterToml.formatter.arrayAutoCollapse":{"scope":"resource","type":"boolean","default":null,"description":"Automatically collapse arrays if they fit in one line."},"evenBetterToml.formatter.compactArrays":{"scope":"resource","type":"boolean","default":null,"description":"Omit whitespace padding inside single-line arrays."},"evenBetterToml.formatter.compactInlineTables":{"scope":"resource","type":"boolean","default":null,"description":"Omit whitespace padding inside inline tables."},"evenBetterToml.formatter.compactEntries":{"scope":"resource","type":"boolean","default":null,"description":"Omit whitespace around `=`."},"evenBetterToml.formatter.columnWidth":{"scope":"resource","type":"number","default":null,"description":"Target maximum column width after which arrays are expanded into new lines."},"evenBetterToml.formatter.indentTables":{"scope":"resource","type":"boolean","default":null,"description":"Indent subtables if they come in order."},"evenBetterToml.formatter.indentEntries":{"scope":"resource","type":"boolean","default":null,"description":"Indent entries under tables."},"evenBetterToml.formatter.indentString":{"scope":"resource","type":"string","default":null,"description":"Indentation to use, should be tabs or spaces but technically could be anything."},"evenBetterToml.formatter.trailingNewline":{"scope":"resource","type":"boolean","default":null,"description":"Add trailing newline to the source."},"evenBetterToml.formatter.reorderKeys":{"scope":"resource","type":"boolean","default":null,"description":"Alphabetically reorder keys that are not separated by blank lines."},"evenBetterToml.formatter.reorderArrays":{"scope":"resource","type":"boolean","default":null,"description":"Alphabetically reorder array values that are not separated by blank lines."},"evenBetterToml.formatter.reorderInlineTables":{"scope":"resource","type":"boolean","default":null,"description":"Alphabetically reorder inline tables."},"evenBetterToml.formatter.allowedBlankLines":{"scope":"resource","type":"number","default":null,"description":"The maximum amount of consecutive blank lines allowed."},"evenBetterToml.formatter.crlf":{"scope":"resource","type":"boolean","default":null,"description":"Use CRLF line endings."},"evenBetterToml.rules":{"scope":"resource","type":"array","default":[],"markdownDescription":"Array of Taplo rules in JSON format, see [Configuration File - Rules](https://taplo.tamasfe.dev/configuration/file.html#rules). The rules given here are appended to existing rules from config files, if any. There is no conversion done, all object keys must be snake_case, including formatting rules."}}}},"main":"./dist/extension.js","browser":"./dist/browser-extension.js","scripts":{"vscode:prepublish":"yarn build","open-in-browser":"vscode-test-web --extensionDevelopmentPath=. .","build:syntax":"ts-node --project node.tsconfig.json src/syntax/index.ts","build:browser-extension":"rollup -c rollup.config.browser-extension.mjs","build:browser-server":"rollup -c rollup.config.browser-server.mjs","build:node":"rollup -c rollup.config.mjs","build":"node scripts/build.mjs"},"dependencies":{"@taplo/lsp":"^0.8.0","deep-equal":"^2.2.3","encoding":"^0.1.13","fast-glob":"^3.3.2","node-fetch":"^3.3.2","vscode-languageclient":"^9.0.1","which":"^5.0.0"},"devDependencies":{"@rollup/plugin-commonjs":"^25.0.7","@rollup/plugin-node-resolve":"^15.2.3","@rollup/plugin-replace":"^5.0.5","@types/deep-equal":"^1.0.4","@types/node":"^20.11.9","@types/vscode":"^1.90.0","@types/which":"^3.0.3","@vscode/test-web":"^0.0.51","esbuild":"^0.20.0","rollup":"^4.9.6","rollup-plugin-esbuild":"^6.1.1","ts-node":"^10.9.2","typescript":"^5.3.3"},"packageManager":"yarn@4.0.2"},"location":{"$mid":1,"path":"/home/bryan/.vscode-oss/extensions/tamasfe.even-better-toml-0.21.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"tamasfe","metadata":{"installedTimestamp":1761567099093,"pinned":false,"source":"gallery","id":"b2215d5f-675e-4a2b-b6ac-1ca737518b78","publisherId":"78c2102e-13a2-49ea-ac79-8d1bbacbbf0e","publisherDisplayName":"tamasfe","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":72274201},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"rust-lang.rust-analyzer","uuid":"06574cb4-e5dc-4631-8174-a543a4533621"},"manifest":{"name":"rust-analyzer","displayName":"rust-analyzer","description":"Rust language support for Visual Studio Code","private":true,"icon":"icon.png","version":"0.3.2660","releaseTag":"2025-10-28","publisher":"rust-lang","type":"commonjs","repository":{"url":"https://github.com/rust-lang/rust-analyzer.git","type":"git"},"homepage":"https://rust-analyzer.github.io/","license":"MIT OR Apache-2.0","keywords":["rust"],"categories":["Formatters","Programming Languages"],"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"rust-analyzer invokes binaries set up by its configuration as well as the Rust toolchain's binaries. A malicious actor could exploit this to run arbitrary code on your machine."}},"engines":{"vscode":"^1.93.0"},"scripts":{"vscode:prepublish":"npm run build-base -- --minify","package":"vsce package -o rust-analyzer.vsix","build-base":"esbuild ./src/main.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node --target=node20","build":"npm run build-base -- --sourcemap","watch":"npm run build-base -- --sourcemap --watch","format":"node --experimental-strip-types node_modules/prettier/bin/prettier.cjs . --write","format:check":"node --experimental-strip-types node_modules/prettier/bin/prettier.cjs . --check","lint":"eslint .","lint:fix":"npm run lint -- --fix","typecheck":"tsc","pretest":"npm run typecheck && npm run build","test":"node ./out/tests/runTests.js"},"dependencies":{"@hpcc-js/wasm":"^2.22.4","anser":"^2.3.2","d3":"^7.9.0","d3-graphviz":"^5.6.0","jiti":"^2.4.2","vscode-languageclient":"^9.0.1"},"devDependencies":{"@eslint/js":"^9.21.0","@stylistic/eslint-plugin":"^4.1.0","@stylistic/eslint-plugin-js":"^4.1.0","@tsconfig/strictest":"^2.0.5","@types/lodash":"^4.17.20","@types/node":"~22.13.4","@types/vscode":"~1.93.0","@typescript-eslint/eslint-plugin":"^8.25.0","@typescript-eslint/parser":"^8.25.0","@vscode/test-electron":"^2.4.1","@vscode/vsce":"^3.6.0","esbuild":"^0.25.0","eslint":"^9.21.0","eslint-config-prettier":"^10.0.2","eslint-define-config":"^2.1.0","ovsx":"0.10.1","prettier":"^3.5.2","tslib":"^2.8.1","typescript":"^5.7.3","typescript-eslint":"^8.25.0"},"activationEvents":["workspaceContains:Cargo.toml","workspaceContains:*/Cargo.toml","workspaceContains:rust-project.json","workspaceContains:*/rust-project.json","workspaceContains:.rust-project.json","workspaceContains:*/.rust-project.json"],"main":"./out/main","contributes":{"taskDefinitions":[{"type":"cargo","required":["command"],"properties":{"label":{"type":"string"},"command":{"type":"string"},"args":{"type":"array","items":{"type":"string"}},"env":{"type":"object","patternProperties":{".+":{"type":"string"}}}}}],"commands":[{"command":"rust-analyzer.viewHir","title":"View Hir","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewMir","title":"View Mir","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.interpretFunction","title":"Interpret","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewFileText","title":"View File Text (as seen by the server)","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewItemTree","title":"Debug ItemTree","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.memoryUsage","title":"Memory Usage (Clears Database)","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewCrateGraph","title":"View Crate Graph","category":"rust-analyzer"},{"command":"rust-analyzer.viewFullCrateGraph","title":"View Crate Graph (Full)","category":"rust-analyzer"},{"command":"rust-analyzer.expandMacro","title":"Expand macro recursively at caret","category":"rust-analyzer"},{"command":"rust-analyzer.matchingBrace","title":"Find matching brace","category":"rust-analyzer"},{"command":"rust-analyzer.parentModule","title":"Locate parent module","category":"rust-analyzer"},{"command":"rust-analyzer.childModules","title":"Locate child modules","category":"rust-analyzer"},{"command":"rust-analyzer.joinLines","title":"Join lines","category":"rust-analyzer"},{"command":"rust-analyzer.run","title":"Run","category":"rust-analyzer"},{"command":"rust-analyzer.copyRunCommandLine","title":"Copy Run Command Line","category":"rust-analyzer"},{"command":"rust-analyzer.debug","title":"Debug","category":"rust-analyzer"},{"command":"rust-analyzer.newDebugConfig","title":"Generate launch configuration","category":"rust-analyzer"},{"command":"rust-analyzer.analyzerStatus","title":"Status","category":"rust-analyzer"},{"command":"rust-analyzer.reloadWorkspace","title":"Reload workspace","category":"rust-analyzer"},{"command":"rust-analyzer.rebuildProcMacros","title":"Rebuild proc macros and build scripts","category":"rust-analyzer"},{"command":"rust-analyzer.restartServer","title":"Restart server","category":"rust-analyzer"},{"command":"rust-analyzer.startServer","title":"Start server","category":"rust-analyzer"},{"command":"rust-analyzer.stopServer","title":"Stop server","category":"rust-analyzer"},{"command":"rust-analyzer.onEnter","title":"Enhanced enter key","category":"rust-analyzer"},{"command":"rust-analyzer.ssr","title":"Structural Search Replace","category":"rust-analyzer"},{"command":"rust-analyzer.serverVersion","title":"Show RA Version","category":"rust-analyzer"},{"command":"rust-analyzer.openDocs","title":"Open Docs","category":"rust-analyzer"},{"command":"rust-analyzer.openExternalDocs","title":"Open External Docs","category":"rust-analyzer"},{"command":"rust-analyzer.openCargoToml","title":"Open Cargo.toml","category":"rust-analyzer"},{"command":"rust-analyzer.peekTests","title":"Peek Related Tests","category":"rust-analyzer"},{"command":"rust-analyzer.moveItemUp","title":"Move Item Up","category":"rust-analyzer"},{"command":"rust-analyzer.moveItemDown","title":"Move Item Down","category":"rust-analyzer"},{"command":"rust-analyzer.cancelFlycheck","title":"Cancel running flychecks","category":"rust-analyzer"},{"command":"rust-analyzer.runFlycheck","title":"Run flycheck","category":"rust-analyzer"},{"command":"rust-analyzer.clearFlycheck","title":"Clear flycheck diagnostics","category":"rust-analyzer"},{"command":"rust-analyzer.revealDependency","title":"Reveal File","category":"rust-analyzer"},{"command":"rust-analyzer.syntaxTreeReveal","title":"Reveal Syntax Element","icon":"$(search)","category":"rust-analyzer (syntax tree)"},{"command":"rust-analyzer.syntaxTreeCopy","title":"Copy","icon":"$(copy)","category":"rust-analyzer (syntax tree)"},{"command":"rust-analyzer.syntaxTreeHideWhitespace","title":"Hide Whitespace","icon":"$(filter)","category":"rust-analyzer (syntax tree)"},{"command":"rust-analyzer.syntaxTreeShowWhitespace","title":"Show Whitespace","icon":"$(filter-filled)","category":"rust-analyzer (syntax tree)"},{"command":"rust-analyzer.viewMemoryLayout","title":"View Memory Layout","category":"rust-analyzer"},{"command":"rust-analyzer.toggleCheckOnSave","title":"Toggle Check on Save","category":"rust-analyzer"},{"command":"rust-analyzer.toggleLSPLogs","title":"Toggle LSP Logs","category":"rust-analyzer"},{"command":"rust-analyzer.openWalkthrough","title":"Open Walkthrough","category":"rust-analyzer"}],"keybindings":[{"command":"rust-analyzer.parentModule","key":"ctrl+shift+u","when":"editorTextFocus && editorLangId == rust"},{"command":"rust-analyzer.joinLines","key":"ctrl+shift+j","when":"editorTextFocus && editorLangId == rust"}],"configuration":[{"title":"Rust Analyzer"},{"title":"Assist"},{"title":"Cache Priming"},{"title":"Cargo"},{"title":"Cfg"},{"title":"Check"},{"title":"Completion"},{"title":"Debug"},{"title":"Diagnostics"},{"title":"Files"},{"title":"Highlight Related"},{"title":"Hover"},{"title":"Imports"},{"title":"Inlay Hints"},{"title":"Interpret"},{"title":"Join Lines"},{"title":"Lens"},{"title":"Lru"},{"title":"Notifications"},{"title":"Proc Macro"},{"title":"References"},{"title":"Runnables"},{"title":"Rustc"},{"title":"Rustfmt"},{"title":"Semantic Highlighting"},{"title":"Signature Info"},{"title":"Typing"},{"title":"Vfs"},{"title":"Workspace"},{"title":"rust-analyzer","properties":{"rust-analyzer.restartServerOnConfigChange":{"description":"Restart the server automatically when settings that require a restart are changed.","default":false,"type":"boolean"},"rust-analyzer.showUnlinkedFileNotification":{"description":"Show a notification for unlinked files, prompting the user to add the corresponding Cargo.toml to the linked projects setting.","default":true,"type":"boolean"},"rust-analyzer.showRequestFailedErrorNotification":{"description":"Show error notifications when requests fail.","default":true,"type":"boolean"},"rust-analyzer.showDependenciesExplorer":{"description":"Show Rust Dependencies in the Explorer view.","default":true,"type":"boolean"},"rust-analyzer.showSyntaxTree":{"description":"Show Syntax Tree in the Explorer view.","default":false,"type":"boolean"},"rust-analyzer.testExplorer":{"description":"Show the Test Explorer view.","default":false,"type":"boolean"},"rust-analyzer.initializeStopped":{"markdownDescription":"Do not start rust-analyzer server when the extension is activated.","default":false,"type":"boolean"}}},{"title":"Runnables","properties":{"rust-analyzer.runnables.extraEnv":{"anyOf":[{"type":"null"},{"type":"array","items":{"type":"object","properties":{"platform":{"type":["null","string","array"],"default":null,"markdownDescription":"Platform(s) filter like \"win32\" or [\"linux\", \"win32\"]. See [process.platform](https://nodejs.org/api/process.html#processplatform) values."},"mask":{"type":"string","description":"Runnable name mask"},"env":{"type":"object","description":"Variables in form of { \"key\": \"value\"}"}}}},{"type":"object","description":"Variables in form of { \"key\": \"value\"}"}],"default":null,"markdownDescription":"Environment variables passed to the runnable launched using `Test` or `Debug` lens or `rust-analyzer.run` command."},"rust-analyzer.runnables.problemMatcher":{"type":"array","items":{"type":"string"},"default":["$rustc"],"markdownDescription":"Problem matchers to use for `rust-analyzer.run` command, eg `[\"$rustc\", \"$rust-panic\"]`."},"rust-analyzer.runnables.askBeforeUpdateTest":{"type":"boolean","default":true,"markdownDescription":"Ask before updating the test when running it."}}},{"title":"Status Bar","properties":{"rust-analyzer.statusBar.clickAction":{"type":"string","enum":["stopServer","openLogs"],"enumDescriptions":["Stop Server","Open Logs"],"default":"openLogs","markdownDescription":"Action to run when clicking the extension status bar item."},"rust-analyzer.statusBar.showStatusBar":{"markdownDescription":"When to show the extension status bar.\n\n`\"always\"` Always show the status bar.\n\n`\"never\"` Never show the status bar.\n\n`{ documentSelector: <DocumentSelector>[] }` Show the status bar if the open file matches any of the given document selectors.\n\nSee [VS Code -- DocumentSelector](https://code.visualstudio.com/api/references/document-selector) for more information.","anyOf":[{"type":"string","enum":["always","never"]},{"type":"object","properties":{"documentSelector":{"type":"array","items":{"type":"object","properties":{"language":{"type":"string"},"notebookType":{"type":"string"},"scheme":{"type":"string"},"pattern":{"type":"string"}}}}}}],"default":{"documentSelector":[{"language":"rust"},{"pattern":"**/Cargo.toml"},{"pattern":"**/Cargo.lock"},{"scheme":"output","pattern":"extension-output-rust-lang.rust-analyzer*"}]}}}},{"title":"Server","properties":{"rust-analyzer.server.path":{"type":["null","string"],"scope":"machine-overridable","default":null,"markdownDescription":"Path to rust-analyzer executable (points to bundled binary by default)."},"rust-analyzer.server.extraEnv":{"type":["null","object"],"additionalProperties":{"type":["string","number","null"]},"default":null,"markdownDescription":"Extra environment variables that will be passed to the rust-analyzer executable. Useful for passing e.g. `RA_LOG` for debugging."}}},{"title":"Trace","properties":{"rust-analyzer.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"enumDescriptions":["No traces","Error only","Full log"],"default":"off","description":"Trace requests to the rust-analyzer (this is usually overly verbose and not recommended for regular users)."},"rust-analyzer.trace.extension":{"description":"Enable logging of VS Code extensions itself.","markdownDeprecationMessage":"Log level is now controlled by the [Developer: Set Log Level...](command:workbench.action.setLogLevel) command.You can set the log level for the current session and also the default log level from there. This is also available by clicking the gear icon on the OUTPUT tab when Rust Analyzer Client is visible or by passing the --log rust-lang.rust-analyzer:debug parameter to VS Code.","type":"boolean","default":false}}},{"title":"Debug","properties":{"rust-analyzer.debug.engine":{"type":"string","enum":["auto","llvm-vs-code-extensions.lldb-dap","vadimcn.vscode-lldb","ms-vscode.cpptools","webfreak.debug"],"default":"auto","description":"Preferred debug engine.","markdownEnumDescriptions":["Use the first available extension out of [LLDB DAP](https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.lldb-dap), [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb), [C/C++ for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools), and [Native Debug](https://marketplace.visualstudio.com/items?itemName=webfreak.debug).","Use [LLDB DAP](https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.lldb-dap)","Use [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb)","Use [C/C++ for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)","Use [Native Debug](https://marketplace.visualstudio.com/items?itemName=webfreak.debug)"]},"rust-analyzer.debug.sourceFileMap":{"type":["object","string"],"const":"auto","description":"Optional source file mappings passed to the debug engine.","default":{"/rustc/<id>":"${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"}},"rust-analyzer.debug.buildBeforeRestart":{"markdownDescription":"Whether to rebuild the project modules before debugging the same test again","type":"boolean","default":false},"rust-analyzer.debug.engineSettings":{"type":"object","default":{},"markdownDescription":"Optional settings passed to the debug engine. Example: `{ \"lldb\": { \"terminal\":\"external\"} }`"}}},{"title":"Typing","properties":{"rust-analyzer.typing.continueCommentsOnNewline":{"markdownDescription":"Whether to prefix newlines after comments with the corresponding comment prefix.","default":true,"type":"boolean"}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.previewRustcOutput":{"markdownDescription":"Whether to show the main part of the rendered rustc output of a diagnostic message.","default":false,"type":"boolean"},"rust-analyzer.diagnostics.useRustcErrorCode":{"markdownDescription":"Whether to show diagnostics using the original rustc error code. If this is false, all rustc diagnostics will have the code 'rustc(Click for full compiler diagnostics)'","default":false,"type":"boolean"}}},{},{"title":"Assist","properties":{"rust-analyzer.assist.emitMustUse":{"markdownDescription":"Insert #[must_use] when generating `as_` methods for enum variants.","default":false,"type":"boolean"}}},{"title":"Assist","properties":{"rust-analyzer.assist.expressionFillDefault":{"markdownDescription":"Placeholder expression to use for missing expressions in assists.","default":"todo","type":"string","enum":["todo","default"],"enumDescriptions":["Fill missing expressions with the `todo` macro","Fill missing expressions with reasonable defaults, `new` or `default` constructors."]}}},{"title":"Assist","properties":{"rust-analyzer.assist.preferSelf":{"markdownDescription":"Prefer to use `Self` over the type name when inserting a type (e.g. in \"fill match arms\" assist).","default":false,"type":"boolean"}}},{"title":"Assist","properties":{"rust-analyzer.assist.termSearch.borrowcheck":{"markdownDescription":"Enable borrow checking for term search code assists. If set to false, also there will be\nmore suggestions, but some of them may not borrow-check.","default":true,"type":"boolean"}}},{"title":"Assist","properties":{"rust-analyzer.assist.termSearch.fuel":{"markdownDescription":"Term search fuel in \"units of work\" for assists (Defaults to 1800).","default":1800,"type":"integer","minimum":0}}},{"title":"Cache Priming","properties":{"rust-analyzer.cachePriming.enable":{"markdownDescription":"Warm up caches on project load.","default":true,"type":"boolean"}}},{"title":"Cache Priming","properties":{"rust-analyzer.cachePriming.numThreads":{"markdownDescription":"How many worker threads to handle priming caches. The default `0` means to pick\nautomatically.","default":"physical","anyOf":[{"type":"number","minimum":0,"maximum":255},{"type":"string","enum":["physical","logical"],"enumDescriptions":["Use the number of physical cores","Use the number of logical cores"]}]}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.allTargets":{"markdownDescription":"Pass `--all-targets` to cargo invocation.","default":true,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.autoreload":{"markdownDescription":"Automatically refresh project info via `cargo metadata` on\n`Cargo.toml` or `.cargo/config.toml` changes.","default":true,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.buildScripts.enable":{"markdownDescription":"Run build scripts (`build.rs`) for more precise code analysis.","default":true,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.buildScripts.invocationStrategy":{"markdownDescription":"Specifies the invocation strategy to use when running the build scripts command.\nIf `per_workspace` is set, the command will be executed for each Rust workspace with the\nworkspace as the working directory.\nIf `once` is set, the command will be executed once with the opened project as the\nworking directory.\nThis config only has an effect when `#rust-analyzer.cargo.buildScripts.overrideCommand#`\nis set.","default":"per_workspace","type":"string","enum":["per_workspace","once"],"enumDescriptions":["The command will be executed for each Rust workspace with the workspace as the working directory.","The command will be executed once with the opened project as the working directory."]}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.buildScripts.overrideCommand":{"markdownDescription":"Override the command rust-analyzer uses to run build scripts and\nbuild procedural macros. The command is required to output json\nand should therefore include `--message-format=json` or a similar\noption.\n\nIf there are multiple linked projects/workspaces, this command is invoked for\neach of them, with the working directory being the workspace root\n(i.e., the folder containing the `Cargo.toml`). This can be overwritten\nby changing `#rust-analyzer.cargo.buildScripts.invocationStrategy#`.\n\nBy default, a cargo invocation will be constructed for the configured\ntargets and features, with the following base command line:\n\n```bash\ncargo check --quiet --workspace --message-format=json --all-targets --keep-going\n```\n\nNote: The option must be specified as an array of command line arguments, with\nthe first argument being the name of the command to run.","default":null,"type":["null","array"],"items":{"type":"string"}}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.buildScripts.rebuildOnSave":{"markdownDescription":"Rerun proc-macros building/build-scripts running when proc-macro\nor build-script sources change and are saved.","default":true,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.buildScripts.useRustcWrapper":{"markdownDescription":"Use `RUSTC_WRAPPER=rust-analyzer` when running build scripts to\navoid checking unnecessary things.","default":true,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.cfgs":{"markdownDescription":"List of cfg options to enable with the given values.\n\nTo enable a name without a value, use `\"key\"`.\nTo enable a name with a value, use `\"key=value\"`.\nTo disable, prefix the entry with a `!`.","default":["debug_assertions","miri"],"type":"array","items":{"type":"string"}}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.extraArgs":{"markdownDescription":"Extra arguments that are passed to every cargo invocation.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.extraEnv":{"markdownDescription":"Extra environment variables that will be set when running cargo, rustc\nor other commands within the workspace. Useful for setting RUSTFLAGS.","default":{},"type":"object"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.features":{"markdownDescription":"List of features to activate.\n\nSet this to `\"all\"` to pass `--all-features` to cargo.","default":[],"anyOf":[{"type":"string","enum":["all"],"enumDescriptions":["Pass `--all-features` to cargo"]},{"type":"array","items":{"type":"string"}}]}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.noDefaultFeatures":{"markdownDescription":"Whether to pass `--no-default-features` to cargo.","default":false,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.noDeps":{"markdownDescription":"Whether to skip fetching dependencies. If set to \"true\", the analysis is performed\nentirely offline, and Cargo metadata for dependencies is not fetched.","default":false,"type":"boolean"}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.sysroot":{"markdownDescription":"Relative path to the sysroot, or \"discover\" to try to automatically find it via\n\"rustc --print sysroot\".\n\nUnsetting this disables sysroot loading.\n\nThis option does not take effect until rust-analyzer is restarted.","default":"discover","type":["null","string"]}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.sysrootSrc":{"markdownDescription":"Relative path to the sysroot library sources. If left unset, this will default to\n`{cargo.sysroot}/lib/rustlib/src/rust/library`.\n\nThis option does not take effect until rust-analyzer is restarted.","default":null,"type":["null","string"]}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.target":{"markdownDescription":"Compilation target override (target tuple).","default":null,"type":["null","string"]}}},{"title":"Cargo","properties":{"rust-analyzer.cargo.targetDir":{"markdownDescription":"Optional path to a rust-analyzer specific target directory.\nThis prevents rust-analyzer's `cargo check` and initial build-script and proc-macro\nbuilding from locking the `Cargo.lock` at the expense of duplicating build artifacts.\n\nSet to `true` to use a subdirectory of the existing target directory or\nset to a path relative to the workspace to use that path.","default":null,"anyOf":[{"type":"null"},{"type":"boolean"},{"type":"string"}]}}},{"title":"Cfg","properties":{"rust-analyzer.cfg.setTest":{"markdownDescription":"Set `cfg(test)` for local crates. Defaults to true.","default":true,"type":"boolean"}}},{"title":"rust-analyzer","properties":{"rust-analyzer.checkOnSave":{"markdownDescription":"Run the check command for diagnostics on save.","default":true,"type":"boolean"}}},{"title":"Check","properties":{"rust-analyzer.check.allTargets":{"markdownDescription":"Check all targets and tests (`--all-targets`). Defaults to\n`#rust-analyzer.cargo.allTargets#`.","default":null,"type":["null","boolean"]}}},{"title":"Check","properties":{"rust-analyzer.check.command":{"markdownDescription":"Cargo command to use for `cargo check`.","default":"check","type":"string"}}},{"title":"Check","properties":{"rust-analyzer.check.extraArgs":{"markdownDescription":"Extra arguments for `cargo check`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Check","properties":{"rust-analyzer.check.extraEnv":{"markdownDescription":"Extra environment variables that will be set when running `cargo check`.\nExtends `#rust-analyzer.cargo.extraEnv#`.","default":{},"type":"object"}}},{"title":"Check","properties":{"rust-analyzer.check.features":{"markdownDescription":"List of features to activate. Defaults to\n`#rust-analyzer.cargo.features#`.\n\nSet to `\"all\"` to pass `--all-features` to Cargo.","default":null,"anyOf":[{"type":"string","enum":["all"],"enumDescriptions":["Pass `--all-features` to cargo"]},{"type":"array","items":{"type":"string"}},{"type":"null"}]}}},{"title":"Check","properties":{"rust-analyzer.check.ignore":{"markdownDescription":"List of `cargo check` (or other command specified in `check.command`) diagnostics to ignore.\n\nFor example for `cargo check`: `dead_code`, `unused_imports`, `unused_variables`,...","default":[],"type":"array","items":{"type":"string"},"uniqueItems":true}}},{"title":"Check","properties":{"rust-analyzer.check.invocationStrategy":{"markdownDescription":"Specifies the invocation strategy to use when running the check command.\nIf `per_workspace` is set, the command will be executed for each workspace.\nIf `once` is set, the command will be executed once.\nThis config only has an effect when `#rust-analyzer.check.overrideCommand#`\nis set.","default":"per_workspace","type":"string","enum":["per_workspace","once"],"enumDescriptions":["The command will be executed for each Rust workspace with the workspace as the working directory.","The command will be executed once with the opened project as the working directory."]}}},{"title":"Check","properties":{"rust-analyzer.check.noDefaultFeatures":{"markdownDescription":"Whether to pass `--no-default-features` to Cargo. Defaults to\n`#rust-analyzer.cargo.noDefaultFeatures#`.","default":null,"type":["null","boolean"]}}},{"title":"Check","properties":{"rust-analyzer.check.overrideCommand":{"markdownDescription":"Override the command rust-analyzer uses instead of `cargo check` for\ndiagnostics on save. The command is required to output json and\nshould therefore include `--message-format=json` or a similar option\n(if your client supports the `colorDiagnosticOutput` experimental\ncapability, you can use `--message-format=json-diagnostic-rendered-ansi`).\n\nIf you're changing this because you're using some tool wrapping\nCargo, you might also want to change\n`#rust-analyzer.cargo.buildScripts.overrideCommand#`.\n\nIf there are multiple linked projects/workspaces, this command is invoked for\neach of them, with the working directory being the workspace root\n(i.e., the folder containing the `Cargo.toml`). This can be overwritten\nby changing `#rust-analyzer.check.invocationStrategy#`.\n\nIf `$saved_file` is part of the command, rust-analyzer will pass\nthe absolute path of the saved file to the provided command. This is\nintended to be used with non-Cargo build systems.\nNote that `$saved_file` is experimental and may be removed in the future.\n\nAn example command would be:\n\n```bash\ncargo check --workspace --message-format=json --all-targets\n```\n\nNote: The option must be specified as an array of command line arguments, with\nthe first argument being the name of the command to run.","default":null,"type":["null","array"],"items":{"type":"string"}}}},{"title":"Check","properties":{"rust-analyzer.check.targets":{"markdownDescription":"Check for specific targets. Defaults to `#rust-analyzer.cargo.target#` if empty.\n\nCan be a single target, e.g. `\"x86_64-unknown-linux-gnu\"` or a list of targets, e.g.\n`[\"aarch64-apple-darwin\", \"x86_64-apple-darwin\"]`.\n\nAliased as `\"checkOnSave.targets\"`.","default":null,"anyOf":[{"type":"null"},{"type":"string"},{"type":"array","items":{"type":"string"}}]}}},{"title":"Check","properties":{"rust-analyzer.check.workspace":{"markdownDescription":"Whether `--workspace` should be passed to `cargo check`.\nIf false, `-p <package>` will be passed instead if applicable. In case it is not, no\ncheck will be performed.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.addSemicolonToUnit":{"markdownDescription":"Automatically add a semicolon when completing unit-returning functions.\n\nIn `match` arms it completes a comma instead.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.autoAwait.enable":{"markdownDescription":"Show method calls and field accesses completions with `await` prefixed to them when\ncompleting on a future.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.autoIter.enable":{"markdownDescription":"Show method call completions with `iter()` or `into_iter()` prefixed to them when\ncompleting on a type that has them.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.autoimport.enable":{"markdownDescription":"Show completions that automatically add imports when completed.\n\nNote that your client must specify the `additionalTextEdits` LSP client capability to\ntruly have this feature enabled.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.autoimport.exclude":{"markdownDescription":"A list of full paths to items to exclude from auto-importing completions.\n\nTraits in this list won't have their methods suggested in completions unless the trait\nis in scope.\n\nYou can either specify a string path which defaults to type \"always\" or use the more\nverbose form `{ \"path\": \"path::to::item\", type: \"always\" }`.\n\nFor traits the type \"methods\" can be used to only exclude the methods but not the trait\nitself.\n\nThis setting also inherits `#rust-analyzer.completion.excludeTraits#`.","default":[{"path":"core::borrow::Borrow","type":"methods"},{"path":"core::borrow::BorrowMut","type":"methods"}],"type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"path":{"type":"string"},"type":{"type":"string","enum":["always","methods"],"enumDescriptions":["Do not show this item or its methods (if it is a trait) in auto-import completions.","Do not show this traits methods in auto-import completions."]}}}]}}}},{"title":"Completion","properties":{"rust-analyzer.completion.autoself.enable":{"markdownDescription":"Show method calls and field access completions with `self` prefixed to them when\ninside a method.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.callable.snippets":{"markdownDescription":"Add parenthesis and argument snippets when completing function.","default":"fill_arguments","type":"string","enum":["fill_arguments","add_parentheses","none"],"enumDescriptions":["Add call parentheses and pre-fill arguments.","Add call parentheses.","Do no snippet completions for callables."]}}},{"title":"Completion","properties":{"rust-analyzer.completion.excludeTraits":{"markdownDescription":"A list of full paths to traits whose methods to exclude from completion.\n\nMethods from these traits won't be completed, even if the trait is in scope. However,\nthey will still be suggested on expressions whose type is `dyn Trait`, `impl Trait` or\n`T where T: Trait`.\n\nNote that the trait themselves can still be completed.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Completion","properties":{"rust-analyzer.completion.fullFunctionSignatures.enable":{"markdownDescription":"Show full function / method signatures in completion docs.","default":false,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.hideDeprecated":{"markdownDescription":"Omit deprecated items from completions. By default they are marked as deprecated but not\nhidden.","default":false,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.limit":{"markdownDescription":"Maximum number of completions to return. If `None`, the limit is infinite.","default":null,"type":["null","integer"],"minimum":0}}},{"title":"Completion","properties":{"rust-analyzer.completion.postfix.enable":{"markdownDescription":"Show postfix snippets like `dbg`, `if`, `not`, etc.","default":true,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.privateEditable.enable":{"markdownDescription":"Show completions of private items and fields that are defined in the current workspace\neven if they are not visible at the current position.","default":false,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.snippets.custom":{"markdownDescription":"Custom completion snippets.","default":{"Ok":{"postfix":"ok","body":"Ok(${receiver})","description":"Wrap the expression in a `Result::Ok`","scope":"expr"},"Box::pin":{"postfix":"pinbox","body":"Box::pin(${receiver})","requires":"std::boxed::Box","description":"Put the expression into a pinned `Box`","scope":"expr"},"Arc::new":{"postfix":"arc","body":"Arc::new(${receiver})","requires":"std::sync::Arc","description":"Put the expression into an `Arc`","scope":"expr"},"Some":{"postfix":"some","body":"Some(${receiver})","description":"Wrap the expression in an `Option::Some`","scope":"expr"},"Err":{"postfix":"err","body":"Err(${receiver})","description":"Wrap the expression in a `Result::Err`","scope":"expr"},"Rc::new":{"postfix":"rc","body":"Rc::new(${receiver})","requires":"std::rc::Rc","description":"Put the expression into an `Rc`","scope":"expr"}},"type":"object"}}},{"title":"Completion","properties":{"rust-analyzer.completion.termSearch.enable":{"markdownDescription":"Enable term search based snippets like `Some(foo.bar().baz())`.","default":false,"type":"boolean"}}},{"title":"Completion","properties":{"rust-analyzer.completion.termSearch.fuel":{"markdownDescription":"Term search fuel in \"units of work\" for autocompletion (Defaults to 1000).","default":1000,"type":"integer","minimum":0}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.disabled":{"markdownDescription":"List of rust-analyzer diagnostics to disable.","default":[],"type":"array","items":{"type":"string"},"uniqueItems":true}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.enable":{"markdownDescription":"Show native rust-analyzer diagnostics.","default":true,"type":"boolean"}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.experimental.enable":{"markdownDescription":"Show experimental rust-analyzer diagnostics that might have more false positives than\nusual.","default":false,"type":"boolean"}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.remapPrefix":{"markdownDescription":"Map of prefixes to be substituted when parsing diagnostic file paths. This should be the\nreverse mapping of what is passed to `rustc` as `--remap-path-prefix`.","default":{},"type":"object"}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.styleLints.enable":{"markdownDescription":"Run additional style lints.","default":false,"type":"boolean"}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.warningsAsHint":{"markdownDescription":"List of warnings that should be displayed with hint severity.\n\nThe warnings will be indicated by faded text or three dots in code and will not show up\nin the `Problems Panel`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Diagnostics","properties":{"rust-analyzer.diagnostics.warningsAsInfo":{"markdownDescription":"List of warnings that should be displayed with info severity.\n\nThe warnings will be indicated by a blue squiggly underline in code and a blue icon in\nthe `Problems Panel`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Document","properties":{"rust-analyzer.document.symbol.search.excludeLocals":{"markdownDescription":"Exclude all locals from document symbol search.","default":true,"type":"boolean"}}},{"title":"Files","properties":{"rust-analyzer.files.exclude":{"markdownDescription":"List of files to ignore\n\nThese paths (file/directories) will be ignored by rust-analyzer. They are relative to\nthe workspace root, and globs are not supported. You may also need to add the folders to\nCode's `files.watcherExclude`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Files","properties":{"rust-analyzer.files.watcher":{"markdownDescription":"Controls file watching implementation.","default":"client","type":"string","enum":["client","server"],"enumDescriptions":["Use the client (editor) to watch files for changes","Use server-side file watching"]}}},{"title":"Highlight Related","properties":{"rust-analyzer.highlightRelated.branchExitPoints.enable":{"markdownDescription":"Highlight related return values while the cursor is on any `match`, `if`, or match arm\narrow (`=>`).","default":true,"type":"boolean"}}},{"title":"Highlight Related","properties":{"rust-analyzer.highlightRelated.breakPoints.enable":{"markdownDescription":"Highlight related references while the cursor is on `break`, `loop`, `while`, or `for`\nkeywords.","default":true,"type":"boolean"}}},{"title":"Highlight Related","properties":{"rust-analyzer.highlightRelated.closureCaptures.enable":{"markdownDescription":"Highlight all captures of a closure while the cursor is on the `|` or move keyword of a closure.","default":true,"type":"boolean"}}},{"title":"Highlight Related","properties":{"rust-analyzer.highlightRelated.exitPoints.enable":{"markdownDescription":"Highlight all exit points while the cursor is on any `return`, `?`, `fn`, or return type\narrow (`->`).","default":true,"type":"boolean"}}},{"title":"Highlight Related","properties":{"rust-analyzer.highlightRelated.references.enable":{"markdownDescription":"Highlight related references while the cursor is on any identifier.","default":true,"type":"boolean"}}},{"title":"Highlight Related","properties":{"rust-analyzer.highlightRelated.yieldPoints.enable":{"markdownDescription":"Highlight all break points for a loop or block context while the cursor is on any\n`async` or `await` keywords.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.debug.enable":{"markdownDescription":"Show `Debug` action. Only applies when `#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.enable":{"markdownDescription":"Show HoverActions in Rust files.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.gotoTypeDef.enable":{"markdownDescription":"Show `Go to Type Definition` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.implementations.enable":{"markdownDescription":"Show `Implementations` action. Only applies when `#rust-analyzer.hover.actions.enable#`\nis set.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.references.enable":{"markdownDescription":"Show `References` action. Only applies when `#rust-analyzer.hover.actions.enable#` is\nset.","default":false,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.run.enable":{"markdownDescription":"Show `Run` action. Only applies when `#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.actions.updateTest.enable":{"markdownDescription":"Show `Update Test` action. Only applies when `#rust-analyzer.hover.actions.enable#` and\n`#rust-analyzer.hover.actions.run.enable#` are set.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.documentation.enable":{"markdownDescription":"Show documentation on hover.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.documentation.keywords.enable":{"markdownDescription":"Show keyword hover popups. Only applies when\n`#rust-analyzer.hover.documentation.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.dropGlue.enable":{"markdownDescription":"Show drop glue information on hover.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.links.enable":{"markdownDescription":"Use markdown syntax for links on hover.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.maxSubstitutionLength":{"markdownDescription":"Show what types are used as generic arguments in calls etc. on hover, and limit the max\nlength to show such types, beyond which they will be shown with ellipsis.\n\nThis can take three values: `null` means \"unlimited\", the string `\"hide\"` means to not\nshow generic substitutions at all, and a number means to limit them to X characters.\n\nThe default is 20 characters.","default":20,"anyOf":[{"type":"null"},{"type":"string","enum":["hide"]},{"type":"integer"}]}}},{"title":"Hover","properties":{"rust-analyzer.hover.memoryLayout.alignment":{"markdownDescription":"How to render the align information in a memory layout hover.","default":"hexadecimal","anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]}}},{"title":"Hover","properties":{"rust-analyzer.hover.memoryLayout.enable":{"markdownDescription":"Show memory layout data on hover.","default":true,"type":"boolean"}}},{"title":"Hover","properties":{"rust-analyzer.hover.memoryLayout.niches":{"markdownDescription":"How to render the niche information in a memory layout hover.","default":false,"type":["null","boolean"]}}},{"title":"Hover","properties":{"rust-analyzer.hover.memoryLayout.offset":{"markdownDescription":"How to render the offset information in a memory layout hover.","default":"hexadecimal","anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]}}},{"title":"Hover","properties":{"rust-analyzer.hover.memoryLayout.padding":{"markdownDescription":"How to render the padding information in a memory layout hover.","default":null,"anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]}}},{"title":"Hover","properties":{"rust-analyzer.hover.memoryLayout.size":{"markdownDescription":"How to render the size information in a memory layout hover.","default":"both","anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]}}},{"title":"Hover","properties":{"rust-analyzer.hover.show.enumVariants":{"markdownDescription":"How many variants of an enum to display when hovering on. Show none if empty.","default":5,"type":["null","integer"],"minimum":0}}},{"title":"Hover","properties":{"rust-analyzer.hover.show.fields":{"markdownDescription":"How many fields of a struct, variant or union to display when hovering on. Show none if\nempty.","default":5,"type":["null","integer"],"minimum":0}}},{"title":"Hover","properties":{"rust-analyzer.hover.show.traitAssocItems":{"markdownDescription":"How many associated items of a trait to display when hovering a trait.","default":null,"type":["null","integer"],"minimum":0}}},{"title":"Imports","properties":{"rust-analyzer.imports.granularity.enforce":{"markdownDescription":"Enforce the import granularity setting for all files. If set to false rust-analyzer will\ntry to keep import styles consistent per file.","default":false,"type":"boolean"}}},{"title":"Imports","properties":{"rust-analyzer.imports.granularity.group":{"markdownDescription":"How imports should be grouped into use statements.","default":"crate","type":"string","anyOf":[{"enum":["crate","module","item","one"],"enumDescriptions":["Merge imports from the same crate into a single use statement. Conversely, imports from different crates are split into separate statements.","Merge imports from the same module into a single use statement. Conversely, imports from different modules are split into separate statements.","Flatten imports so that each has its own use statement.","Merge all imports into a single use statement as long as they have the same visibility and attributes."]},{"enum":["preserve"],"enumDescriptions":["Deprecated - unless `enforceGranularity` is `true`, the style of the current file is preferred over this setting. Behaves like `item`."],"deprecated":true}]}}},{"title":"Imports","properties":{"rust-analyzer.imports.group.enable":{"markdownDescription":"Group inserted imports by the [following\norder](https://rust-analyzer.github.io/book/features.html#auto-import). Groups are\nseparated by newlines.","default":true,"type":"boolean"}}},{"title":"Imports","properties":{"rust-analyzer.imports.merge.glob":{"markdownDescription":"Allow import insertion to merge new imports into single path glob imports like `use\nstd::fmt::*;`.","default":true,"type":"boolean"}}},{"title":"Imports","properties":{"rust-analyzer.imports.preferNoStd":{"markdownDescription":"Prefer to unconditionally use imports of the core and alloc crate, over the std crate.","default":false,"type":"boolean"}}},{"title":"Imports","properties":{"rust-analyzer.imports.preferPrelude":{"markdownDescription":"Prefer import paths containing a `prelude` module.","default":false,"type":"boolean"}}},{"title":"Imports","properties":{"rust-analyzer.imports.prefix":{"markdownDescription":"The path structure for newly inserted paths to use.","default":"crate","type":"string","enum":["plain","self","crate"],"enumDescriptions":["Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item.","Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item. Prefixes `self` in front of the path if it starts with a module.","Force import paths to be absolute by always starting them with `crate` or the extern crate name they come from."]}}},{"title":"Imports","properties":{"rust-analyzer.imports.prefixExternPrelude":{"markdownDescription":"Prefix external (including std, core) crate imports with `::`.\n\nE.g. `use ::std::io::Read;`.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.bindingModeHints.enable":{"markdownDescription":"Show inlay type hints for binding modes.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.chainingHints.enable":{"markdownDescription":"Show inlay type hints for method chains.","default":true,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.closingBraceHints.enable":{"markdownDescription":"Show inlay hints after a closing `}` to indicate what item it belongs to.","default":true,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.closingBraceHints.minLines":{"markdownDescription":"Minimum number of lines required before the `}` until the hint is shown (set to 0 or 1\nto always show them).","default":25,"type":"integer","minimum":0}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.closureCaptureHints.enable":{"markdownDescription":"Show inlay hints for closure captures.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.closureReturnTypeHints.enable":{"markdownDescription":"Show inlay type hints for return types of closures.","default":"never","type":"string","enum":["always","never","with_block"],"enumDescriptions":["Always show type hints for return types of closures.","Never show type hints for return types of closures.","Only show type hints for return types of closures with blocks."]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.closureStyle":{"markdownDescription":"Closure notation in type and chaining inlay hints.","default":"impl_fn","type":"string","enum":["impl_fn","rust_analyzer","with_id","hide"],"enumDescriptions":["`impl_fn`: `impl FnMut(i32, u64) -> i8`","`rust_analyzer`: `|i32, u64| -> i8`","`with_id`: `{closure#14352}`, where that id is the unique number of the closure in r-a internals","`hide`: Shows `...` for every closure type"]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.discriminantHints.enable":{"markdownDescription":"Show enum variant discriminant hints.","default":"never","type":"string","enum":["always","never","fieldless"],"enumDescriptions":["Always show all discriminant hints.","Never show discriminant hints.","Only show discriminant hints on fieldless enum variants."]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.expressionAdjustmentHints.disableReborrows":{"markdownDescription":"Disable reborrows in expression adjustments inlay hints.\n\nReborrows are a pair of a builtin deref then borrow, i.e. `&*`. They are inserted by the compiler but are mostly useless to the programmer.\n\nNote: if the deref is not builtin (an overloaded deref), or the borrow is `&raw const`/`&raw mut`, they are not removed.","default":true,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.expressionAdjustmentHints.enable":{"markdownDescription":"Show inlay hints for type adjustments.","default":"never","type":"string","enum":["always","never","reborrow"],"enumDescriptions":["Always show all adjustment hints.","Never show adjustment hints.","Only show auto borrow and dereference adjustment hints."]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.expressionAdjustmentHints.hideOutsideUnsafe":{"markdownDescription":"Hide inlay hints for type adjustments outside of `unsafe` blocks.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.expressionAdjustmentHints.mode":{"markdownDescription":"Show inlay hints as postfix ops (`.*` instead of `*`, etc).","default":"prefix","type":"string","enum":["prefix","postfix","prefer_prefix","prefer_postfix"],"enumDescriptions":["Always show adjustment hints as prefix (`*expr`).","Always show adjustment hints as postfix (`expr.*`).","Show prefix or postfix depending on which uses less parenthesis, preferring prefix.","Show prefix or postfix depending on which uses less parenthesis, preferring postfix."]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.genericParameterHints.const.enable":{"markdownDescription":"Show const generic parameter name inlay hints.","default":true,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.genericParameterHints.lifetime.enable":{"markdownDescription":"Show generic lifetime parameter name inlay hints.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.genericParameterHints.type.enable":{"markdownDescription":"Show generic type parameter name inlay hints.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.implicitDrops.enable":{"markdownDescription":"Show implicit drop hints.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.implicitSizedBoundHints.enable":{"markdownDescription":"Show inlay hints for the implied type parameter `Sized` bound.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.lifetimeElisionHints.enable":{"markdownDescription":"Show inlay type hints for elided lifetimes in function signatures.","default":"never","type":"string","enum":["always","never","skip_trivial"],"enumDescriptions":["Always show lifetime elision hints.","Never show lifetime elision hints.","Only show lifetime elision hints if a return type is involved."]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames":{"markdownDescription":"Prefer using parameter names as the name for elided lifetime hints if possible.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.maxLength":{"markdownDescription":"Maximum length for inlay hints. Set to null to have an unlimited length.\n\n**Note:** This is mostly a hint, and we don't guarantee to strictly follow the limit.","default":25,"type":["null","integer"],"minimum":0}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.parameterHints.enable":{"markdownDescription":"Show function parameter name inlay hints at the call site.","default":true,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.rangeExclusiveHints.enable":{"markdownDescription":"Show exclusive range inlay hints.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.reborrowHints.enable":{"markdownDescription":"Show inlay hints for compiler inserted reborrows.\n\nThis setting is deprecated in favor of\n#rust-analyzer.inlayHints.expressionAdjustmentHints.enable#.","default":"never","type":"string","enum":["always","never","mutable"],"enumDescriptions":["Always show reborrow hints.","Never show reborrow hints.","Only show mutable reborrow hints."]}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.renderColons":{"markdownDescription":"Whether to render leading colons for type hints, and trailing colons for parameter hints.","default":true,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.typeHints.enable":{"markdownDescription":"Show inlay type hints for variables.","default":true,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.typeHints.hideClosureInitialization":{"markdownDescription":"Hide inlay type hints for `let` statements that initialize to a closure.\n\nOnly applies to closures with blocks, same as\n`#rust-analyzer.inlayHints.closureReturnTypeHints.enable#`.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.typeHints.hideClosureParameter":{"markdownDescription":"Hide inlay parameter type hints for closures.","default":false,"type":"boolean"}}},{"title":"Inlay Hints","properties":{"rust-analyzer.inlayHints.typeHints.hideNamedConstructor":{"markdownDescription":"Hide inlay type hints for constructors.","default":false,"type":"boolean"}}},{"title":"Interpret","properties":{"rust-analyzer.interpret.tests":{"markdownDescription":"Enable the experimental support for interpreting tests.","default":false,"type":"boolean"}}},{"title":"Join Lines","properties":{"rust-analyzer.joinLines.joinAssignments":{"markdownDescription":"Join lines merges consecutive declaration and initialization of an assignment.","default":true,"type":"boolean"}}},{"title":"Join Lines","properties":{"rust-analyzer.joinLines.joinElseIf":{"markdownDescription":"Join lines inserts else between consecutive ifs.","default":true,"type":"boolean"}}},{"title":"Join Lines","properties":{"rust-analyzer.joinLines.removeTrailingComma":{"markdownDescription":"Join lines removes trailing commas.","default":true,"type":"boolean"}}},{"title":"Join Lines","properties":{"rust-analyzer.joinLines.unwrapTrivialBlock":{"markdownDescription":"Join lines unwraps trivial blocks.","default":true,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.debug.enable":{"markdownDescription":"Show `Debug` lens. Only applies when `#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.enable":{"markdownDescription":"Show CodeLens in Rust files.","default":true,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.implementations.enable":{"markdownDescription":"Show `Implementations` lens. Only applies when `#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.location":{"markdownDescription":"Where to render annotations.","default":"above_name","type":"string","enum":["above_name","above_whole_item"],"enumDescriptions":["Render annotations above the name of the item.","Render annotations above the whole item, including documentation comments and attributes."]}}},{"title":"Lens","properties":{"rust-analyzer.lens.references.adt.enable":{"markdownDescription":"Show `References` lens for Struct, Enum, and Union. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.references.enumVariant.enable":{"markdownDescription":"Show `References` lens for Enum Variants. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.references.method.enable":{"markdownDescription":"Show `Method References` lens. Only applies when `#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.references.trait.enable":{"markdownDescription":"Show `References` lens for Trait. Only applies when `#rust-analyzer.lens.enable#` is\nset.","default":false,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.run.enable":{"markdownDescription":"Show `Run` lens. Only applies when `#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"}}},{"title":"Lens","properties":{"rust-analyzer.lens.updateTest.enable":{"markdownDescription":"Show `Update Test` lens. Only applies when `#rust-analyzer.lens.enable#` and\n`#rust-analyzer.lens.run.enable#` are set.","default":true,"type":"boolean"}}},{"title":"rust-analyzer","properties":{"rust-analyzer.linkedProjects":{"markdownDescription":"Disable project auto-discovery in favor of explicitly specified set of projects.\n\nElements must be paths pointing to `Cargo.toml`, `rust-project.json`, `.rs` files (which\nwill be treated as standalone files) or JSON objects in `rust-project.json` format.","default":[],"type":"array","items":{"type":["string","object"]}}}},{"title":"Lru","properties":{"rust-analyzer.lru.capacity":{"markdownDescription":"Number of syntax trees rust-analyzer keeps in memory. Defaults to 128.","default":null,"type":["null","integer"],"minimum":0,"maximum":65535}}},{"title":"Lru","properties":{"rust-analyzer.lru.query.capacities":{"markdownDescription":"The LRU capacity of the specified queries.","default":{},"type":"object"}}},{"title":"Notifications","properties":{"rust-analyzer.notifications.cargoTomlNotFound":{"markdownDescription":"Show `can't find Cargo.toml` error message.","default":true,"type":"boolean"}}},{"title":"rust-analyzer","properties":{"rust-analyzer.numThreads":{"markdownDescription":"The number of worker threads in the main loop. The default `null` means to pick\nautomatically.","default":null,"anyOf":[{"type":"null"},{"type":"number","minimum":0,"maximum":255},{"type":"string","enum":["physical","logical"],"enumDescriptions":["Use the number of physical cores","Use the number of logical cores"]}]}}},{"title":"Proc Macro","properties":{"rust-analyzer.procMacro.attributes.enable":{"markdownDescription":"Expand attribute macros. Requires `#rust-analyzer.procMacro.enable#` to be set.","default":true,"type":"boolean"}}},{"title":"Proc Macro","properties":{"rust-analyzer.procMacro.enable":{"markdownDescription":"Enable support for procedural macros, implies `#rust-analyzer.cargo.buildScripts.enable#`.","default":true,"type":"boolean"}}},{"title":"Proc Macro","properties":{"rust-analyzer.procMacro.ignored":{"markdownDescription":"These proc-macros will be ignored when trying to expand them.\n\nThis config takes a map of crate names with the exported proc-macro names to ignore as values.","default":{},"type":"object"}}},{"title":"Proc Macro","properties":{"rust-analyzer.procMacro.server":{"markdownDescription":"Internal config, path to proc-macro server executable.","default":null,"type":["null","string"]}}},{"title":"References","properties":{"rust-analyzer.references.excludeImports":{"markdownDescription":"Exclude imports from find-all-references.","default":false,"type":"boolean"}}},{"title":"References","properties":{"rust-analyzer.references.excludeTests":{"markdownDescription":"Exclude tests from find-all-references and call-hierarchy.","default":false,"type":"boolean"}}},{"title":"Runnables","properties":{"rust-analyzer.runnables.command":{"markdownDescription":"Command to be executed instead of 'cargo' for runnables.","default":null,"type":["null","string"]}}},{"title":"Runnables","properties":{"rust-analyzer.runnables.extraArgs":{"markdownDescription":"Additional arguments to be passed to cargo for runnables such as\ntests or binaries. For example, it may be `--release`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Runnables","properties":{"rust-analyzer.runnables.extraTestBinaryArgs":{"markdownDescription":"Additional arguments to be passed through Cargo to launched tests, benchmarks, or\ndoc-tests.\n\nUnless the launched target uses a\n[custom test harness](https://doc.rust-lang.org/cargo/reference/cargo-targets.html#the-harness-field),\nthey will end up being interpreted as options to\n[`rustc`’s built-in test harness (“libtest”)](https://doc.rust-lang.org/rustc/tests/index.html#cli-arguments).","default":["--nocapture"],"type":"array","items":{"type":"string"}}}},{"title":"Rustc","properties":{"rust-analyzer.rustc.source":{"markdownDescription":"Path to the Cargo.toml of the rust compiler workspace, for usage in rustc_private\nprojects, or \"discover\" to try to automatically find it if the `rustc-dev` component\nis installed.\n\nAny project which uses rust-analyzer with the rustcPrivate\ncrates must set `[package.metadata.rust-analyzer] rustc_private=true` to use it.\n\nThis option does not take effect until rust-analyzer is restarted.","default":null,"type":["null","string"]}}},{"title":"Rustfmt","properties":{"rust-analyzer.rustfmt.extraArgs":{"markdownDescription":"Additional arguments to `rustfmt`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Rustfmt","properties":{"rust-analyzer.rustfmt.overrideCommand":{"markdownDescription":"Advanced option, fully override the command rust-analyzer uses for\nformatting. This should be the equivalent of `rustfmt` here, and\nnot that of `cargo fmt`. The file contents will be passed on the\nstandard input and the formatted result will be read from the\nstandard output.\n\nNote: The option must be specified as an array of command line arguments, with\nthe first argument being the name of the command to run.","default":null,"type":["null","array"],"items":{"type":"string"}}}},{"title":"Rustfmt","properties":{"rust-analyzer.rustfmt.rangeFormatting.enable":{"markdownDescription":"Enables the use of rustfmt's unstable range formatting command for the\n`textDocument/rangeFormatting` request. The rustfmt option is unstable and only\navailable on a nightly build.","default":false,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.comments.enable":{"markdownDescription":"Use semantic tokens for comments.\n\nIn some editors (e.g. vscode) semantic tokens override other highlighting grammars.\nBy disabling semantic tokens for comments, other grammars can be used to highlight\ntheir contents.","default":true,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.doc.comment.inject.enable":{"markdownDescription":"Inject additional highlighting into doc comments.\n\nWhen enabled, rust-analyzer will highlight rust source in doc comments as well as intra\ndoc links.","default":true,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.nonStandardTokens":{"markdownDescription":"Emit non-standard tokens and modifiers\n\nWhen enabled, rust-analyzer will emit tokens and modifiers that are not part of the\nstandard set of semantic tokens.","default":true,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.operator.enable":{"markdownDescription":"Use semantic tokens for operators.\n\nWhen disabled, rust-analyzer will emit semantic tokens only for operator tokens when\nthey are tagged with modifiers.","default":true,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.operator.specialization.enable":{"markdownDescription":"Use specialized semantic tokens for operators.\n\nWhen enabled, rust-analyzer will emit special token types for operator tokens instead\nof the generic `operator` token type.","default":false,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.punctuation.enable":{"markdownDescription":"Use semantic tokens for punctuation.\n\nWhen disabled, rust-analyzer will emit semantic tokens only for punctuation tokens when\nthey are tagged with modifiers or have a special role.","default":false,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang":{"markdownDescription":"When enabled, rust-analyzer will emit a punctuation semantic token for the `!` of macro\ncalls.","default":false,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.punctuation.specialization.enable":{"markdownDescription":"Use specialized semantic tokens for punctuation.\n\nWhen enabled, rust-analyzer will emit special token types for punctuation tokens instead\nof the generic `punctuation` token type.","default":false,"type":"boolean"}}},{"title":"Semantic Highlighting","properties":{"rust-analyzer.semanticHighlighting.strings.enable":{"markdownDescription":"Use semantic tokens for strings.\n\nIn some editors (e.g. vscode) semantic tokens override other highlighting grammars.\nBy disabling semantic tokens for strings, other grammars can be used to highlight\ntheir contents.","default":true,"type":"boolean"}}},{"title":"Signature Info","properties":{"rust-analyzer.signatureInfo.detail":{"markdownDescription":"Show full signature of the callable. Only shows parameters if disabled.","default":"full","type":"string","enum":["full","parameters"],"enumDescriptions":["Show the entire signature.","Show only the parameters."]}}},{"title":"Signature Info","properties":{"rust-analyzer.signatureInfo.documentation.enable":{"markdownDescription":"Show documentation.","default":true,"type":"boolean"}}},{"title":"Typing","properties":{"rust-analyzer.typing.triggerChars":{"markdownDescription":"Specify the characters allowed to invoke special on typing triggers.\n\n- typing `=` after `let` tries to smartly add `;` if `=` is followed by an existing\n    expression\n- typing `=` between two expressions adds `;` when in statement position\n- typing `=` to turn an assignment into an equality comparison removes `;` when in\n    expression position\n- typing `.` in a chain method call auto-indents\n- typing `{` or `(` in front of an expression inserts a closing `}` or `)` after the\n    expression\n- typing `{` in a use item adds a closing `}` in the right place\n- typing `>` to complete a return type `->` will insert a whitespace after it\n- typing `<` in a path or type position inserts a closing `>` after the path or type.","default":"=.","type":["null","string"]}}},{"title":"Vfs","properties":{"rust-analyzer.vfs.extraIncludes":{"markdownDescription":"Additional paths to include in the VFS. Generally for code that is\ngenerated or otherwise managed by a build system outside of Cargo,\nthough Cargo might be the eventual consumer.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"Workspace","properties":{"rust-analyzer.workspace.discoverConfig":{"markdownDescription":"Enables automatic discovery of projects using [`DiscoverWorkspaceConfig::command`].\n\n[`DiscoverWorkspaceConfig`] also requires setting `progress_label` and `files_to_watch`.\n`progress_label` is used for the title in progress indicators, whereas `files_to_watch`\nis used to determine which build system-specific files should be watched in order to\nreload rust-analyzer.\n\nBelow is an example of a valid configuration:\n```json\n\"rust-analyzer.workspace.discoverConfig\": {\n        \"command\": [\n                \"rust-project\",\n                \"develop-json\"\n        ],\n        \"progressLabel\": \"rust-analyzer\",\n        \"filesToWatch\": [\n                \"BUCK\"\n        ]\n}\n```\n\n## On `DiscoverWorkspaceConfig::command`\n\n**Warning**: This format is provisional and subject to change.\n\n[`DiscoverWorkspaceConfig::command`] *must* return a JSON object corresponding to\n`DiscoverProjectData::Finished`:\n\n```norun\n#[derive(Debug, Clone, Deserialize, Serialize)]\n#[serde(tag = \"kind\")]\n#[serde(rename_all = \"snake_case\")]\nenum DiscoverProjectData {\n        Finished { buildfile: Utf8PathBuf, project: ProjectJsonData },\n        Error { error: String, source: Option<String> },\n        Progress { message: String },\n}\n```\n\nAs JSON, `DiscoverProjectData::Finished` is:\n\n```json\n{\n        // the internally-tagged representation of the enum.\n        \"kind\": \"finished\",\n        // the file used by a non-Cargo build system to define\n        // a package or target.\n        \"buildfile\": \"rust-analyzer/BUILD\",\n        // the contents of a rust-project.json, elided for brevity\n        \"project\": {\n                \"sysroot\": \"foo\",\n                \"crates\": []\n        }\n}\n```\n\nIt is encouraged, but not required, to use the other variants on `DiscoverProjectData`\nto provide a more polished end-user experience.\n\n`DiscoverWorkspaceConfig::command` may *optionally* include an `{arg}`, which will be\nsubstituted with the JSON-serialized form of the following enum:\n\n```norun\n#[derive(PartialEq, Clone, Debug, Serialize)]\n#[serde(rename_all = \"camelCase\")]\npub enum DiscoverArgument {\n     Path(AbsPathBuf),\n     Buildfile(AbsPathBuf),\n}\n```\n\nThe JSON representation of `DiscoverArgument::Path` is:\n\n```json\n{\n        \"path\": \"src/main.rs\"\n}\n```\n\nSimilarly, the JSON representation of `DiscoverArgument::Buildfile` is:\n\n```json\n{\n        \"buildfile\": \"BUILD\"\n}\n```\n\n`DiscoverArgument::Path` is used to find and generate a `rust-project.json`, and\ntherefore, a workspace, whereas `DiscoverArgument::buildfile` is used to to update an\nexisting workspace. As a reference for implementors, buck2's `rust-project` will likely\nbe useful: https://github.com/facebook/buck2/tree/main/integrations/rust-project.","default":null,"anyOf":[{"type":"null"},{"type":"object","properties":{"command":{"type":"array","items":{"type":"string"}},"progressLabel":{"type":"string"},"filesToWatch":{"type":"array","items":{"type":"string"}}}}]}}},{"title":"Workspace","properties":{"rust-analyzer.workspace.symbol.search.excludeImports":{"markdownDescription":"Exclude all imports from workspace symbol search.\n\nIn addition to regular imports (which are always excluded),\nthis option removes public imports (better known as re-exports)\nand removes imports that rename the imported symbol.","default":false,"type":"boolean"}}},{"title":"Workspace","properties":{"rust-analyzer.workspace.symbol.search.kind":{"markdownDescription":"Workspace symbol search kind.","default":"only_types","type":"string","enum":["only_types","all_symbols"],"enumDescriptions":["Search for types only.","Search for all symbols kinds."]}}},{"title":"Workspace","properties":{"rust-analyzer.workspace.symbol.search.limit":{"markdownDescription":"Limits the number of items returned from a workspace symbol search (Defaults to 128).\nSome clients like vs-code issue new searches on result filtering and don't require all results to be returned in the initial search.\nOther clients requires all results upfront and might require a higher limit.","default":128,"type":"integer","minimum":0}}},{"title":"Workspace","properties":{"rust-analyzer.workspace.symbol.search.scope":{"markdownDescription":"Workspace symbol search scope.","default":"workspace","type":"string","enum":["workspace","workspace_and_dependencies"],"enumDescriptions":["Search in current workspace only.","Search in current workspace and dependencies."]}}},{}],"configurationDefaults":{"explorer.fileNesting.patterns":{"Cargo.toml":"Cargo.lock"}},"problemPatterns":[{"name":"rustc","patterns":[{"regexp":"^(warning|warn|error)(?:\\[(.*?)\\])?: (.*)$","severity":1,"code":2,"message":3},{"regexp":"^[\\s->=]*(.*?):([1-9]\\d*):([1-9]\\d*)\\s*$","file":1,"line":2,"column":3}]},{"name":"rustc-json","patterns":[{"regexp":"^.*\"message\":{\"message\":\"([^\"]*).*?\"file_name\":\"([^\"]+).*?\"line_start\":(\\d+).*?\"line_end\":(\\d+).*?\"column_start\":(\\d+).*?\"column_end\":(\\d+).*}$","message":1,"file":2,"line":3,"endLine":4,"column":5,"endColumn":6}]},{"name":"rust-panic","patterns":[{"regexp":"^thread '.*' panicked at (.*):(\\d*):(\\d*):$","file":1,"line":2,"column":3},{"regexp":"(.*)","message":1}]}],"languages":[{"id":"ra_syntax_tree","extensions":[".rast"]},{"id":"rust","extensions":[".rs"],"aliases":["Rust","rs"],"configuration":"language-configuration.json"}],"grammars":[{"language":"ra_syntax_tree","scopeName":"source.ra_syntax_tree","path":"ra_syntax_tree.tmGrammar.json"}],"problemMatchers":[{"name":"rustc","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rustc"},{"name":"rustc-json","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rustc-json"},{"name":"rust-panic","owner":"rust-panic","source":"panic","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rust-panic"},{"name":"rustc-watch","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"background":{"beginsPattern":"^\\[Running\\b","endsPattern":"^\\[Finished running\\b"},"pattern":"$rustc"}],"semanticTokenTypes":[{"id":"angle","description":"Style for < or >","superType":"punctuation"},{"id":"arithmetic","description":"Style for arithmetic operators","superType":"operator"},{"id":"attribute","description":"Style for attributes"},{"id":"attributeBracket","description":"Style for attribute invocation brackets, that is the `#[` and `]` tokens","superType":"punctuation"},{"id":"bitwise","description":"Style for bitwise operators","superType":"operator"},{"id":"boolean","description":"Style for boolean literals","superType":"keyword"},{"id":"brace","description":"Style for { or }","superType":"punctuation"},{"id":"bracket","description":"Style for [ or ]","superType":"punctuation"},{"id":"builtinAttribute","description":"Style for builtin attributes","superType":"attribute"},{"id":"builtinType","description":"Style for builtin types","superType":"type"},{"id":"character","description":"Style for character literals","superType":"string"},{"id":"colon","description":"Style for :","superType":"punctuation"},{"id":"comma","description":"Style for ,","superType":"punctuation"},{"id":"comparison","description":"Style for comparison operators","superType":"operator"},{"id":"constParameter","description":"Style for const generics"},{"id":"const","description":"Style for consts","superType":"variable"},{"id":"derive","description":"Style for derives","superType":"attribute"},{"id":"deriveHelper","description":"Style for derive helpers","superType":"attribute"},{"id":"dot","description":"Style for .","superType":"punctuation"},{"id":"escapeSequence","description":"Style for char or byte escapes in strings"},{"id":"formatSpecifier","description":"Style for {} placeholders in format strings"},{"id":"invalidEscapeSequence","description":"Style for invalid char or byte escapes in strings"},{"id":"label","description":"Style for labels"},{"id":"lifetime","description":"Style for lifetimes"},{"id":"logical","description":"Style for logic operators","superType":"operator"},{"id":"macroBang","description":"Style for the ! token of macro calls","superType":"punctuation"},{"id":"parenthesis","description":"Style for ( or )","superType":"punctuation"},{"id":"procMacro","description":"Style for proc macro code","superType":"macro"},{"id":"punctuation","description":"Style for generic punctuation"},{"id":"operator","description":"Style for operators","superType":"punctuation"},{"id":"selfKeyword","description":"Style for the self keyword","superType":"keyword"},{"id":"selfTypeKeyword","description":"Style for the self type keyword","superType":"keyword"},{"id":"semicolon","description":"Style for ;","superType":"punctuation"},{"id":"static","description":"Style for statics","superType":"variable"},{"id":"toolModule","description":"Style for tool module attributes","superType":"decorator"},{"id":"typeAlias","description":"Style for type aliases","superType":"type"},{"id":"union","description":"Style for C-style untagged unions","superType":"type"},{"id":"unresolvedReference","description":"Style for names which can not be resolved due to compilation errors"}],"semanticTokenModifiers":[{"id":"async","description":"Style for async functions and the `async` and `await` keywords"},{"id":"attribute","description":"Style for elements within attributes"},{"id":"callable","description":"Style for locals whose types implements one of the `Fn*` traits"},{"id":"constant","description":"Style for compile-time constants"},{"id":"consuming","description":"Style for locals that are being consumed when use in a function call"},{"id":"controlFlow","description":"Style for control-flow related tokens, this includes the `?` operator"},{"id":"crateRoot","description":"Style for names resolving to a crate root"},{"id":"injected","description":"Style for doc-string injected highlighting like rust source blocks in documentation"},{"id":"intraDocLink","description":"Style for intra doc links in doc-strings"},{"id":"library","description":"Style for items that are defined outside of the current crate"},{"id":"macro","description":"Style for tokens inside of macro calls"},{"id":"mutable","description":"Style for mutable locals and statics as well as functions taking `&mut self`"},{"id":"procMacro","description":"Style for tokens inside of proc-macro calls"},{"id":"public","description":"Style for items that are from the current crate and are `pub`"},{"id":"reference","description":"Style for locals behind a reference and functions taking `self` by reference"},{"id":"trait","description":"Style for associated trait items"},{"id":"unsafe","description":"Style for unsafe operations, like unsafe function calls, as well as the `unsafe` token"}],"semanticTokenScopes":[{"language":"rust","scopes":{"attribute":["meta.attribute.rust"],"boolean":["constant.language.boolean.rust"],"builtinType":["support.type.primitive.rust"],"constParameter":["constant.other.caps.rust"],"enum":["entity.name.type.enum.rust"],"formatSpecifier":["punctuation.section.embedded.rust"],"function":["entity.name.function.rust"],"interface":["entity.name.type.trait.rust"],"keyword":["keyword.other.rust"],"keyword.controlFlow":["keyword.control.rust"],"lifetime":["storage.modifier.lifetime.rust"],"macroBang":["entity.name.function.macro.rust"],"method":["entity.name.function.rust"],"struct":["entity.name.type.struct.rust"],"typeAlias":["entity.name.type.declaration.rust"],"union":["entity.name.type.union.rust"],"variable":["variable.other.rust"],"variable.constant":["variable.other.constant.rust"],"*.mutable":["markup.underline"]}}],"menus":{"commandPalette":[{"command":"rust-analyzer.viewHir","when":"inRustProject"},{"command":"rust-analyzer.viewFileText","when":"inRustProject"},{"command":"rust-analyzer.expandMacro","when":"inRustProject"},{"command":"rust-analyzer.matchingBrace","when":"inRustProject"},{"command":"rust-analyzer.parentModule","when":"inRustProject"},{"command":"rust-analyzer.childModules","when":"inRustProject"},{"command":"rust-analyzer.joinLines","when":"inRustProject"},{"command":"rust-analyzer.run","when":"inRustProject"},{"command":"rust-analyzer.debug","when":"inRustProject"},{"command":"rust-analyzer.newDebugConfig","when":"inRustProject"},{"command":"rust-analyzer.analyzerStatus","when":"inRustProject"},{"command":"rust-analyzer.memoryUsage","when":"inRustProject"},{"command":"rust-analyzer.reloadWorkspace","when":"inRustProject"},{"command":"rust-analyzer.restartServer","when":"inRustProject"},{"command":"rust-analyzer.onEnter","when":"inRustProject"},{"command":"rust-analyzer.ssr","when":"inRustProject"},{"command":"rust-analyzer.serverVersion","when":"inRustProject"},{"command":"rust-analyzer.openDocs","when":"inRustProject"},{"command":"rust-analyzer.openCargoToml","when":"inRustProject"},{"command":"rust-analyzer.viewMemoryLayout","when":"inRustProject"},{"command":"rust-analyzer.toggleLSPLogs","when":"inRustProject"},{"command":"rust-analyzer.openWalkthrough"},{"command":"rust-analyzer.syntaxTreeReveal","when":"false"},{"command":"rust-analyzer.syntaxTreeCopy","when":"false"},{"command":"rust-analyzer.syntaxTreeHideWhitespace","when":"false"},{"command":"rust-analyzer.syntaxTreeShowWhitespace","when":"false"}],"editor/context":[{"command":"rust-analyzer.peekTests","when":"inRustProject && editorTextFocus && editorLangId == rust","group":"navigation@1000"},{"command":"rust-analyzer.openDocs","when":"inRustProject && editorTextFocus && editorLangId == rust","group":"navigation@1001"}],"view/title":[{"command":"rust-analyzer.syntaxTreeHideWhitespace","group":"navigation","when":"view == rustSyntaxTree && !rustSyntaxTree.hideWhitespace"},{"command":"rust-analyzer.syntaxTreeShowWhitespace","group":"navigation","when":"view == rustSyntaxTree && rustSyntaxTree.hideWhitespace"}],"view/item/context":[{"command":"rust-analyzer.syntaxTreeCopy","group":"inline","when":"view == rustSyntaxTree"},{"command":"rust-analyzer.syntaxTreeReveal","group":"inline","when":"view == rustSyntaxTree"}]},"views":{"explorer":[{"icon":"$(package)","id":"rustDependencies","name":"Rust Dependencies","when":"inRustProject && config.rust-analyzer.showDependenciesExplorer"}],"rustSyntaxTreeContainer":[{"icon":"$(file-code)","id":"rustSyntaxTree","name":"Rust Syntax Tree","when":"inRustProject && config.rust-analyzer.showSyntaxTree"}]},"viewsContainers":{"activitybar":[{"id":"rustSyntaxTreeContainer","title":"Rust Syntax Tree","icon":"$(list-tree)"}]},"jsonValidation":[{"fileMatch":"rust-project.json","url":"https://json.schemastore.org/rust-project.json"},{"fileMatch":".rust-project.json","url":"https://json.schemastore.org/rust-project.json"}],"walkthroughs":[{"id":"landing","title":"Learn about rust-analyzer","description":"A brief introduction to get started with rust-analyzer. Learn about key features and resources to help you get the most out of the extension.","steps":[{"id":"setup","title":"Useful Setup Tips","description":"There are a couple of things you might want to configure upfront to your tastes. We'll name a few here but be sure to check out the docs linked below!\n\n**Marking library sources as readonly**\n\nAdding the snippet on the right to your settings.json will mark all Rust library sources as readonly.\n\n**Check on Save**\n\nBy default, rust-analyzer will run ``cargo check`` on your codebase when you save a file, rendering diagnostics emitted by ``cargo check`` within your code. This can potentially collide with other ``cargo`` commands running concurrently, blocking them from running for a certain amount of time. In these cases it is recommended to disable the ``rust-analyzer.checkOnSave`` configuration and running the ``rust-analyzer: Run flycheck`` command on-demand instead.","media":{"markdown":"./walkthrough-setup-tips.md"}},{"id":"docs","title":"Visit the docs!","description":"Confused about configurations? Want to learn more about rust-analyzer? Visit the [User Manual](https://rust-analyzer.github.io/book/)!","media":{"image":"./icon.png","altText":"rust-analyzer logo"},"completionEvents":["onLink:https://rust-analyzer.github.io/book/"]},{"id":"faq","title":"FAQ","description":"What are these code hints that are being inserted into my code?\n\nThese hints are called inlay hints which rust-analyzer support and are enabled by default in VSCode. If you wish to disable them you can do so via the ``editor.inlayHints.enabled`` setting.","media":{"image":"icon.png","altText":"rust-analyzer logo"}},{"id":"changelog","title":"Changelog","description":"Stay up-to-date with the latest changes in rust-analyzer. Check out the changelog [here](https://rust-analyzer.github.io/thisweek)!","media":{"image":"icon.png","altText":"rust-analyzer logo"},"completionEvents":["onLink:https://rust-analyzer.github.io/thisweek"]}]}]}},"location":{"$mid":1,"path":"/home/bryan/.vscode-oss/extensions/rust-lang.rust-analyzer-0.3.2660-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"rust-lang","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1761687433028,"pinned":false,"source":"gallery","id":"06574cb4-e5dc-4631-8174-a543a4533621","publisherId":"cb14a7a7-a188-40bd-a953-e0a20757c5dd","publisherDisplayName":"rust-lang","targetPlatform":"linux-x64","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":51535481},"isValid":true,"validations":[],"preRelease":false}]}